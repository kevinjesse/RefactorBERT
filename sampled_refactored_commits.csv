index,url,project,message,result
0,https://github.com/civetweb/civetweb/commit/4c1451bab1a43066d66ac11e63e906094c79acdb,civetweb/civetweb,refactored SSL initialization. implemented mg_connect(),Yes
1,https://github.com/cubiclesoft/cross-platform-cpp/commit/d079be877b463376155636364acdb6d4cccb0eb0,cubiclesoft/cross-platform-cpp,Another refactor of shared memory.  Separation of interests should be resolved now.,Yes
2,https://github.com/siddontang/libtnet/commit/d777f39cdbee04fadfed4e981351bfed7975fae2,siddontang/libtnet,refactor http/ws client with connector,Yes
3,https://github.com/CMU-SAFARI/prim-benchmarks/commit/bab6c1ba39b7a00eccf3ecdcc7bd4560d2581d18,CMU-SAFARI/prim-benchmarks,"bs_refactor: Remove printf for logging

Signed-off-by: Yun-Ze Li <p76091292@gs.ncku.edu.tw>",No
4,https://github.com/mridgers/clink/commit/2f79ce5a9cd3e2be14416ba23f283a69b9e12301,mridgers/clink,Fixed up tests following API refactor.,No
5,https://github.com/microsoft/DirectXTex/commit/56d86325b65ec36f10e2613ccefa8af6fe1a7460,microsoft/DirectXTex,Code refactor and reformat for texture loaders (#137),Yes
6,https://github.com/rustyrussell/pettycoin/commit/297d09d31d7fe72368759ef519969ce46488e5d3,rustyrussell/pettycoin,"block_info: structure to contain block on the wire.

Since we're going to change it for merge mining, encapsulate it now to
avoid massive refactor confusing the block structure.

Signed-off-by: Rusty Russell <rusty@rustcorp.com.au>",No
7,https://github.com/boostorg/ublas/commit/e68819c645ae85aa3d432269edf467024d2793f8,boostorg/ublas,"Phase 1: adding static extents and static strides

fix macro for MSVC

adding noexcept

fixing test and making changes

adding comparison test and adding resolving issue

changing extents API

fixing MSVC errors

fixing MSVC error

adding static prod function and adding std::array to static extents and static strides

fixing get_number_list

refactoring meta_function into type_traits and adding staic_traits for static_extents

fixing extents_result_type_outer_prod and combining static_functions and functions

removing unnecessary code and header file

removing unnecessary forward declaration

private member resize and adding removed constructors for matrix and vector

changing size_t to std::size_t and fixing stride_t

adding is_resizable type trait for tensor resizing

improve documenting of is_resizable

refactoring code

changing msvc version in .yml

changing toolset msvc-14.1 to msvc-14.16 and adding VSCLCOMPILER

changing toolset msvc-14.2 and image to VS 2019

refactoring code and adding new matrix to appveyor

adding VS 2019 with msvc-14.1 and disabling VS 2019 with msvc-14.2 and c++2a

adding VS 2019 with msvc-14.2 and changing flag to latest

removing VS 2019 with msvc-14.2 and c++17 and adding timeout to travis.yml

travis_wait workaround

removing VS 2017 from appveyor and refactoring code

adding clang support for c++17 and c++20 and refactoring code

changing dist to bionic and adding source link to clang 10

fixing travis, bugs and adding new examples

fixing example bugs for msvc

updating licence and adding test_expression to jamfile

adding new tests, refactoring code and fixing bugs

fix for msvc c++20

fixing memory problem due to BOOST_AUTO_TEST_SUITE macro defining after fixture

removing const from tests and enabling test_tensor.cpp

removing const from test_fixed_rank_expression_evaluation.cpp

fixing msvc bug

fixing msvc-14.2 bug for c++ latest where it cannot properly capture variables in lambda func

disintegrating tests into smaller units

reducing test_types for testing

reducing tests

reducing test_types for testing in operator arithmetic

improving msvc warinings and separating test_function.cpp into it's own module",Yes
8,https://github.com/BoboTiG/cracker-ng/commit/8cbc4f310ff3d30a55e60ebfc11b160cd35c6017,BoboTiG/cracker-ng,Huge code refactoring,Yes
9,https://github.com/fpagliughi/sockpp/commit/8293101181528861bae73163c06a107d9e18c298,fpagliughi/sockpp,Initial working IPv6 with refactored sockets and addresses.,Yes
10,https://github.com/leeeastwood/Haiway/commit/d3ce3b9d039d66a61e800f03e1c62e971aa83fa1,leeeastwood/Haiway,"Merge pull request #8 from bnyf/patch-1

refactoring the haiwei rtos",Unsure
11,https://github.com/HackerPolice/MissedIT/commit/6b63d8b8682335be2ba822dd10b99d2dc529b723,HackerPolice/MissedIT,more refactoring and organisation,Yes
12,https://github.com/espressif/esp-aliyun/commit/41d3e777c03bbb97f4583be03f3cf206304fd31e,espressif/esp-aliyun,"Merge branch 'feature/update_submodule_of_esp8266_sdk' into 'refactor'

feat(esp8266): Update submodule of ESP8266_RTOS_SDK

See merge request demo/esp8266-aliyun-demo!6",Unsure
13,https://github.com/fraillt/cpp/commit/b654eaaa0cb6d8f8fa7a76cc52eeebcdbaa26469,fraillt/cpp,"added zpp library results, and minor code refactorings for bitsery",Unsure
14,https://github.com/jonof/jfsw/commit/9b365321852e63875c956305c3c21411a86adb84,jonof/jfsw,cd refactoring to use jaudiolib services,No
15,https://github.com/WLANThermo-nano/WLANThermo/commit/36eb639fa074eaff2072fd348ef3d4c673cba57b,WLANThermo-nano/WLANThermo,Merge branch 'ui-refactoring' of https://github.com/WLANThermo-nano/WLANThermo_ESP32_Software into ui-refactoring,Unsure
16,https://github.com/8devices/openwrt-8devices/commit/621b6503497c39dc58de0736e5ac367891fb5455,8devices/openwrt-8devices,"ar71xx/image: refactor templates tplink-chn-v2

git-svn-id: svn://svn.openwrt.org/openwrt/trunk@47316 3c298f89-4303-0410-b956-a3cf2f4a3e73",Unsure
17,https://github.com/DGLE-HQ/DGLE/commit/e421bed839a3120907b2d1fa76912e73939d615a,DGLE-HQ/DGLE,Minor func delegate refactoring.,Yes
18,https://github.com/haasn/libplacebo/commit/558cfcb1d2b72492916ecbaa015444a0ca3b1be1,haasn/libplacebo,"shaders/colorspace: refactor icc/3dlut API

Renamed from 3DLUT to ICC across the board, and moved to its own
conditionally installed header Also, merged with the internal lcms code,
since it was a bit redundant now.

Mostly to make room for more LUT formats I will be adding, and since
colorspace.h was a bit cluttered.",Yes
19,https://github.com/Tw1ddle/geometrize/commit/c583c0270f237237d18b417d56716affb4317ed1,Tw1ddle/geometrize,"Put bindings code into its own namespace, other minor refactoring",Yes
20,https://github.com/nzeemin/ukncbtl/commit/eec81abc3a49435e6b7644e7e8b01316bfe615df,nzeemin/ukncbtl,ConsoleView_DoConsoleCommand() refactoring.,Yes
21,https://github.com/microsoft/D3D12TranslationLayer/commit/6ba530c050d781d82289d26f04db1119861bb521,microsoft/D3D12TranslationLayer,"Merge pull request #43 from microsoft/user/tvandewalle/dxbc_signer

Add DXBCBuilder and refactor DXBCParser to it's own lib",Yes
22,https://github.com/cuckydev/PSXFunkin/commit/c3588718cb3e8b2495df1b1549772ad0ce67081b,cuckydev/PSXFunkin,refactor a bit,Yes
23,https://github.com/cztomczak/cefpython/commit/bc8f4cab2903f53e6fd963c1e96480ee5e5c4fec,cztomczak/cefpython,"Added CookieManager class.

Added CookieVisitor class.

Added RequestHandler.GetCookieManager() callback.

Added cookie tests to the wxpython.py script on Linux.

Minor refactoring in client_handler.",Yes
24,https://github.com/bullsoft/phalconplus/commit/cc85d2b1eda90b0321913ac1fe18cf0e917f908c,bullsoft/phalconplus,refactor engine,Yes
25,https://github.com/raspberrypi/libcamera-apps/commit/ed6404676499693f215150369f6095a6493d0a36,raspberrypi/libcamera-apps,"post-processing: refactor ObjectClassifyTfStage to use TfStage base class

Mostly the effect is just to remove code which is now provided in the
TfStage base class.

Signed-off-by: David Plowman <david.plowman@raspberrypi.com>",Yes
26,https://github.com/sethhoward/Brogue-iPad/commit/de1a824807bbfe9169c9fdf7d2807542e009d867,sethhoward/Brogue-iPad,refactor. added event states,No
27,https://github.com/DevNulPavel/osx/commit/6313ba4f075a6ad5ae8c637a6df999a3b5f1fe96,DevNulPavel/osx,Small refactoring,Unsure
28,https://github.com/pganalyze/libpg/commit/f71dbe4f3d6db6dccd4c2c103124d64c73ce0ba9,pganalyze/libpg,"Normalize: Don't touch ""GROUP BY 1"" type statements, keep original text (#113)

This avoids obscuring the semantic meaning of integers in the GROUP BY
clause, which is to reference a particular column in the target list.

In passing, refactor the normalize function a bit for easier readability.",Yes
29,https://github.com/CRREL/points2grid/commit/2a00c3cb14b2f79f2e1147828aed15593214e76a,CRREL/points2grid,"Enable gdal tests on Travis

Use env to build w/ and w/o GDAL. This also includes refactoring of the
unit tests to allow for simple conditional inclusion of GDAL tests.",No
30,https://github.com/neilogd/Engine/commit/6ef774f045f25f5c52e3d1d70c42f23ffad6273b,neilogd/Engine,"Large set of not very incremental changes:
- Pipeline binding sets can now be updated free threaded outside of command lists. Up to the user for synchronization.
- Pipeline binding sets are copied into GPU visible space on command list compilation (to refine later)
- All the main interface refactoring/rewriting should be done to handle the new binding set model for Graphics::Shader.",No
31,https://github.com/strukturag/vlc-2.1/commit/bc83704fd5f9ec32fcefe55e753d9dad2f44d12b,strukturag/vlc-2.1,skins2: refactor some code,Yes
32,https://github.com/taskflow/taskflow/commit/33353d2b061eecc9e3671b78e2b8bb141128a6bc,taskflow/taskflow,refactored round-robin optimizer with dependency pruning heuristic,Yes
33,https://github.com/tunabrain/tungsten/commit/8b4732378f57a21c3248f7d0ba22e815ed6a0e32,tunabrain/tungsten,Full refactor of JSON serialization,Yes
34,https://github.com/alexismorin/Auto-Lightmap-Adjuster/commit/555dae8665723f661b4494f812c4f35aa001cf65,alexismorin/Auto-Lightmap-Adjuster,"unreal refactor, plugin package",Yes
35,https://github.com/TranslucentTB/TranslucentTB/commit/6b1783b9c2f5f5dff14c0f13ddb496a215667395,TranslucentTB/TranslucentTB,"WIP visible window implementation, move around and refactor some stuff

#250",Yes
36,https://github.com/hercules-390/hyperion/commit/83203cf85baaf58c5c37073e21f2b87f900fa8a2,hercules-390/hyperion,"Compiler warning refactoring.... (cont'd)

git-svn-id: file:///home/jj/hercules.svn/trunk@7766 956126f8-22a0-4046-8f4a-272fa8102e63",No
37,https://github.com/JukkaL/alore/commit/0c1df4f1c4e83414f3d8d278e828640a950a3630,JukkaL/alore,"Annotate time module implementation

This required some non-trivial refactoring.",Yes
38,https://github.com/caveman2cosmos/Caveman2Cosmos/commit/b2dc6038d24d14b154f99b584d2c6cd962c48707,caveman2cosmos/Caveman2Cosmos,Misc refactoring,Yes
39,https://github.com/SteveMacenski/spatio/commit/1ad97019465eab07c43ef9bada2625c11c60ef89,SteveMacenski/spatio,"Merge pull request #46 from SteveMacenski/refactor

renaming to be clear, and adding more comments in headers for developers",Yes
40,https://github.com/faelys/libsoldout/commit/c80ce3bb75a4359f4122b23d69f032777f5eec40,faelys/libsoldout,markdown: refactor working buffer allocation and release,Yes
41,https://github.com/switchbrew/nx-hbmenu/commit/20c1f00972db74689ce168edbb4393e5c517c894,switchbrew/nx-hbmenu,Update for libnx hid-refactor,Yes
42,https://github.com/Palakis/obs-ndi/commit/724557077b9877cd2da7b25c5611102fe78ac59e,Palakis/obs-ndi,Filter: style refactor,Yes
43,https://github.com/riboseinc/retrace/commit/fc0cfc2e72fe57005f11cfe41e774498c74a8c20,riboseinc/retrace,"Merge pull request #176 from riboseinc/support_fcntl

Implemented fcntl and refactoring configure.ac",Yes
44,https://github.com/openitu/STL/commit/35cd6c8f1c8820ff4d771bf15abc7cd1b4881d8e,openitu/STL,"g722: added tests.
Remove deprecated (refactored duplicated) code.",Unsure
45,https://github.com/immortalwrt/padavan/commit/59c48bfd5bc12373825e9d6474af6080ea252d1d,immortalwrt/padavan,"scutclient: bump to 3.1.2
ttyd: downgrade to 1.4.0
refactor ss_watchcat and scutclient_watchcat, please remove crontab items",Yes
46,https://github.com/fengwang/matrix/commit/ffe391a6f3bc2313492fdc5e6b86b74f62bf1923,fengwang/matrix,refactor zigzag colormap,Yes
47,https://github.com/SentryPeer/SentryPeer/commit/c56f33925eaac6bbce9df65dc5688c42bbebacf6,SentryPeer/SentryPeer,"- Added Peer to Peer bad_actor sharing (data replication), e.g. it gets saved on the DHT and consumed by other peers
- If OpenDHT-C is detected, check it is at least version 2.3.5. If Peer to Peer mode is not needed, you can
  use `--disable-opendht`
- UUID parsing tests
- JSON parsing tests
- Additional SQLite3 database select tests
- bad_actor_exists tests

Need to drop the requirement for Zyre and test between SentryPeer nodes next, plus some refactoring for decoupling validating bad_actors received from the DHT (plus any issues CI picks up).",Yes
48,https://github.com/ProjectManticore/Manticore/commit/1d274cd9d3b1783e6abb71cde2b658f4cc55a4f2,ProjectManticore/Manticore,refactor 4: it compiles now lmao,Yes
49,https://github.com/SuperTux/supertux/commit/1486ceaaf9dd7a9d2d7e3654550b9a2768df2a56,SuperTux/supertux,"refactored some supertux mainloops

SVN-Revision: 3262",Yes
50,https://github.com/miguelfreitas/twister-core/commit/b4a8a326c067a350b5a5ff0e565555b57ffb3a2e,miguelfreitas/twister-core,"Merge pull request #2660 from TheBlueMatt/gmfrefactor

Refactor fee rules to make them actually readable.",Yes
51,https://github.com/smith3d/Jyers/commit/07f25e73898915c366d25b9d7b26c66def22ea56,smith3d/Jyers,"Unified Bed Leveling Support

* UI framework changes, menu additions/fixes

Framework:
* Add Draw_Checkbox and Redraw_Menu methods
* Draw_Menu_Item custom icon support
* Draw_Float NaN support
* Status area negative Z value fix
* Draw_Popup keeps selection value for Confirm mode
* Clear_Screen documentation
* Replace active menu if block with switch in Value_Control

Menus:
* Add probe control to Move menu
* Add cold extrude temperature limit and power loss recovery control to Control/Advanced
* Add print statistics to Control/Info
* Auto Home moves extruder tip to Z_SAFE_HOMING position when finished
* Fix 'more' setting for menu items

* Update configuration files to include CREALITY_DWIN_EXTUI_CUSTOM_ICONS

* Display firmware with new icons

* Bugfix

* Add support for dual-row label to Draw_Menu_Item, refactor Info menu to use Draw_Menu_Item

* UBL helper functions

* UBL menu with Manual Tuning and Mesh Viewer

* Bugfix

* UBL configuration templates

* UBL menu images

* Disable Custom Icons by Default

* Level configs with other templates

* Rename Folders

* New Workflow Matrices

* Moved UBL Changes to DWIN Code

* Clean Up UBL Leftovers

* Config Additions

* Menu Reoranization and Code Formatting

Co-authored-by: Jyers <jyers.m@gmail.com>",Unsure
52,https://github.com/GNOME/file-roller/commit/8fda8520491ef4e534488a7eb0c6a413c28b9b12,GNOME/file-roller,"Replace custom _gtk_builder_new_from_resource function

The official gtk_builder_new_from_resource is identical except
that it fails loudly. Given that resources are baked into the app,
not being able to load ui file should be a hard error anyway.

Transformed using the following semantic patch:
https://gitlab.gnome.org/jtojnar/glib-refactoring/-/blob/5d70945511ce1f924f2f3eae59cb382bf39caeb7/patches/file-roller/replaced-custom-gtk_builder_from_resource-wannabe.cocci",Yes
53,https://github.com/node-3d/glfw-raub/commit/6916c7e6d64209eb6fe045c3ba97c97638d246c4,node-3d/glfw-raub,"major c++ refactor, use addon-tools",Yes
54,https://github.com/abseil/abseil-cpp/commit/53c239d1fc161975dad32c654e1f42c0ec42f547,abseil/abseil-cpp,"Changes imported from Abseil ""staging"" branch:

  - 06c8c67f5a564d00696e023060f05a5c34e7e164 IWYU | absl/base by Juemin Yang <jueminyang@google.com>
  - 2b1a054a09bda55843b449843b2a125741e936e7 Internal refactoring by Greg Miller <jgm@google.com>
  - f43f7f1f91bee26b5ddcd0c5bbbc47cb977aef77 Make std::hash<absl::optional<T>> to be standard compliant: by Xiaoyi Zhang <zhangxy@google.com>
  - 539bad2ebc22e610e1f292285a30a87945bc663e Update utility.h to Abseil standards by Tom Manshreck <shreck@google.com>
  - d05ec10a5f16a5d6640e0db91ecc7ab3ea971fd4 Add a test for absl::Barrier. by Derek Mauro <dmauro@google.com>
  - d707e27acb3c06f0d74c5f7ad7861e3841a5471f Run leak-checking tool over all outbound code. by Daniel Katz <katzdm@google.com>
  - 55f07f482a50422b8f99f7176374a19d0d473c5f Add alignas(16) to uint128. by Alex Strelnikov <strel@google.com>
  - 94999b7edde82308f736fb939501537ee9edbca6 Update attributes.h to Abseil standards by Tom Manshreck <shreck@google.com>
  - 321bed0061c41b53d0206ad4865528c00dd6d825 Test git merge + piper cl process by Juemin Yang <jueminyang@google.com>
  - 69920e7351a1053a7f4940bbde1768e839ce84bc Adds support for ""/etc/localtime"" as an embedded time zon... by Greg Miller <jgm@google.com>
  - 6839c06bf232903d3a9cbffa6eb2c960db78e67b Add copyright notices to inlined_vector code. by Greg Falcon <gfalcon@google.com>
  - 4e2714f6266263515cdfd31675c30c6ed6f98e1a Adding Apache 2.0 License by Gennadiy Civil <misterg@google.com>
  - 7402e7594016a4cd0a8b823fe6bc1bad1874bb85 IWYU | absl/utility by Juemin Yang <jueminyang@google.com>
  - 271a3812337eed97c412042738482688a80e19bd IWYU | absl/memory by Juemin Yang <jueminyang@google.com>
  - 32bda13a8098c2b06e25a5cf7bb782d6b79eb006 IWYU | absl/numeric by Juemin Yang <jueminyang@google.com>
  - 62d375cedc133108904bc06e340e303091a565df Remove ""no_test""-annotations on span_test_noexceptions. by Daniel Katz <katzdm@google.com>
  - ebcbae9a55a93a7f1bb6862edc2715a6d9877206 Move CI-testing support files out of public-facing reposi... by Daniel Katz <katzdm@google.com>
  - d3f05eff4daa6030bfacb31cca0f9213fb702247 Fixes ToInt64Minutes() and ToInt64Hours() to properly sat... by Greg Miller <jgm@google.com>
  - b8dfae3facb6bb002622f083a10d14448f19e6e0 Fix typo. by Abseil Team <absl-team@google.com>
  - 150f03baa0afa231c2fc01597ea2321da586caba Update README.md by Yilei Yang <yileiyang@google.com>
  - 05276aa837dd081686518fd27bda4bd206ac4443 Adding Apache 2.0 License by Gennadiy Civil <misterg@google.com>
  - 37bf8e223e79ad06a195e28db9499e0c3d140f73 IWYU | absl/container by Juemin Yang <jueminyang@google.com>
  - 49164928f220978a32f88d16a55549bdf871daef IWYU | absl/algorithm by Juemin Yang <jueminyang@google.com>
  - a6804734e129039f9580a4fcd0f66425d0d0ac30 Move throw delegate wrappers to an internal namespace. by Greg Falcon <gfalcon@google.com>
  - ac83e73f67f593e2aff957b2be0b28e59c552a71 Fix error in comment stripping directives. by Greg Falcon <gfalcon@google.com>
  - e018a24185a984e787fb81a75fc35b74ad3a4d3d Update copyright headers all BUILD files by Gennadiy Civil <misterg@google.com>
  - a3be0990bfd76b0dec76bd85cecfa4dcec68b3ea Fix closing namespace comment typo. by Abseil Team <absl-team@google.com>
  - be3e3c4327e4f83949e0f29fd7a190d7eaa8b50b Update TODO by Abseil Team <absl-team@google.com>
  - f56a5d6f72685d92bb9c2905841b950d8177210c Add test-coverage for leak-sanitizer. by Daniel Katz <katzdm@google.com>
  - 7694bf161c7e00fdd08bfadc2aaf8e0fb09335f8 span.h: further touch up wording around the std::initiali... by Abseil Team <absl-team@google.com>
  - 3a12e081c0f8b359973e020d1e91f65356548ebc Update time.h to Abseil standards by Tom Manshreck <shreck@google.com>
  - 48d28f6468129420f4b20d451dca8e08012a7a77 Remove references to google from comments in Abseil. by Greg Falcon <gfalcon@google.com>
  - 773e34402d15fcad6370d5ed2430482d17db910d Rename the ExpectTime macro to match Abseil naming conven... by Greg Falcon <gfalcon@google.com>
  - 774d2ff1fe26c7313b301ff203e83e1aaac86627 Internal change. by Daniel Katz <katzdm@google.com>
  - 2e8a5830e95c8a1b839721bb2f1d4f5c85b9fb60 Fix typo in comment (missing '*' on a pointer). by Abseil Team <absl-team@google.com>
  - 458106feb707cf9609dd243713bde44aa9679e2a Correct capitalization: github -> GitHub by Yilei Yang <yileiyang@google.com>
  - af440725f02c2a83ca5cbaf176e1142f9e9d9b2f Update copyright headers by Gennadiy Civil <misterg@google.com>
  - 05b1118cce4ab87d23c33d48e64a96bcfec08761 Update copyright headers by Gennadiy Civil <misterg@google.com>
  - d5c6669a62d047156bb77055c5da03ee1b3c61b9 Update Abseil README to include descriptions of the inclu... by Tom Manshreck <shreck@google.com>
  - 3cd7e4663dddc840087469a6495f6cf433bfad8d Update copyright headers in //base by Tom Manshreck <shreck@google.com>
  - 7a876da657cd6698c5da2008a582d52eedc85dd1 Update strings overview with robust string library docume... by Tom Manshreck <shreck@google.com>
  - d9e3d0768d6f1c77d30992bdbef7b47ec92994bb Update copyright headers all BUILD files by Abseil Team <absl-team@google.com>
  - 6fe942728bceb0625f7c79b2840c4a6154d076b3 Make InlinedVector, FixedArray, and Span's at() throw on ... by Jon Cohen <cohenjon@google.com>
  - 5b52d5ec6cb9fbb07fc2e2fa020bd3eeb48c4953 Update clock.h to Abseil standards by Tom Manshreck <shreck@google.com>
  - c03c1ca3aee8bb7e40aa0315f6c432d31a72c30c Update //algorithm copyright headers by Tom Manshreck <shreck@google.com>
  - d46f40ddc596aaacb0459351d0e4aa6871289fa2 Temporarily prevent running mutex_test on crosstool17, wh... by Jon Cohen <cohenjon@google.com>
  - 61f11476189df68edfb9908308d677a91f03ff67 Update copyright headers in //container by Tom Manshreck <shreck@google.com>
  - 91832c00948954edf0b3dda12219c9a0202421ac Update copyright headers for //synchronization by Tom Manshreck <shreck@google.com>
  - 4e09100264b4585af6b4508ff35b9c627ac1f1ce Update copyright headers all BUILD files by Gennadiy Civil <misterg@google.com>
  - 13a0e8aebedec0f95b33750cbcd6b5548619b2a5 Update copyright headers in //memory by Tom Manshreck <shreck@google.com>
  - 63e1b9d4fdbcdf097e5276050ad1f76f0053e553 Update copyright headers for //strings (+ one from //nume... by Tom Manshreck <shreck@google.com>
  - 0108e7cfc50777a94c56d00e9c305161364df341 Convert ASSERT and EXPECT to ABSL_RAW_CHECK in helper fun... by Derek Mauro <dmauro@google.com>
  - 0122306fe47a3093248254a1b475c3a1d82abec5 Internal change by Abseil Team <absl-team@google.com>
  - 89c0c2698c98a12cd63172eeb02063b2f67e7c81 #absl Fix comment. by Abseil Team <absl-team@google.com>
  - 6621cc1ff54800e0aadb5e3071dbaa84b2077ceb Publishing contributing guidelines. by Gennadiy Civil <misterg@google.com>
  - e48c5be3c75e794b3e3827d40915b01fe1a1afc5 Avoid PRIdPTR.  Cast to long long and use %lld insted. by Abseil Team <absl-team@google.com>
  - 2640ea4a260d89b94b07a3142660327e47db33fd No algorithmic changes. by Abseil Team <absl-team@google.com>
  - 1bc6c1bad17754f5d84963bf1d0db279402a0a1d Internal change. by Derek Mauro <dmauro@google.com>
  - 6845d24733e8c95bebde825ba78a2abfd9e35bdb span.h: fix up incorrect wording around lvalues. by Abseil Team <absl-team@google.com>
  - d8f5caee721e252e5f9b1080fb996363f498ac28 Add more exaustive Mutex testing. by Derek Mauro <dmauro@google.com>
  - e8b4cb053eb98858eef10cc53280b6ed5d6815a7 Change Span::subspan to not call into a deprecated constr... by Jon Cohen <cohenjon@google.com>
  - 49c36a82b3114926390557670aaaf0ea25b5760c s/std::size_t/size_t/g by Jon Cohen <cohenjon@google.com>
  - e17487c3c4d4a99f2fd8bc3e42176fc3171614d1 Account for the case of timeval::tv_sec being smaller than by Abseil Team <absl-team@google.com>
  - ecbb89d5fb98483e777c03d97ac02d7b7b54985e Alias absl::string_view to std::string_view when C++17 st... by Xiaoyi Zhang <zhangxy@google.com>
  - 6820e5a51459cdbb6a423cbae25a0cc839c85d44 Internal cleanup. by Xiaoyi Zhang <zhangxy@google.com>
  - 6976469b76a6faaf4111a24ddb37f40211ffadae More Span constexpr by Jon Cohen <cohenjon@google.com>
  - 8521c8956eee1125b7759eb272ec4a5a86fcefc5 #absl Fix comment. by Abseil Team <absl-team@google.com>
  - 20eae7a67fde5dd809aa47e5f7de8a493701645e Embed enough zoneinfo data to make time:time_test (under ... by Abseil Team <absl-team@google.com>
  - 841f5d98ceef4a423839ea73ee06c2f47a9b9680 Clean up macros in attributes.h | ATTRIBUTE_INITIAL_EXEC by Juemin Yang <jueminyang@google.com>
  - 83d8b36656e47919b5d0bac82eece897e195697e Update any.h comments to Abseil standards by Tom Manshreck <shreck@google.com>
  - bb3fae11d3459eeae2f63bfd22e65d3193187cc8 Update type_traits.h comments to Abseil standards by Tom Manshreck <shreck@google.com>
  - 992e1b07c0dec64271f8c44f22fd8df3734d0c47 Renamespace CycleClock code. by Greg Falcon <gfalcon@google.com>
  - 08d6fb0594098493ffbc0e737405182638122e7e Eliminate more existing lint warnings by Gennadiy Rozental <rogeeff@google.com>
  - 1cc6fdc71eb777497239f8c3e9168e6c9d40ea53 Update optional.h to Abseil standards by Tom Manshreck <shreck@google.com>
  - baa91747aa55009a9eb31b6072e33db06cfce2d2 Enforce internal namespace symbol reference policy by Gennadiy Rozental <rogeeff@google.com>
  - 939251e39342ce559e5d23fe43799671581f7cf5 Add CycleClock scaling shift to mitigate a possible overf... by Derek Mauro <dmauro@google.com>
  - c6dfdeecea0c7470938bed47c99ea2b2a95889d8 Add constexpr tests for absl::make_optional(). by Xiaoyi Zhang <zhangxy@google.com>
  - 509e949b992db33041d840746fbd05cc01cb206e Alias absl::optional to std::optional when C++17 std::opt... by Xiaoyi Zhang <zhangxy@google.com>
  - a1ae6d96a8826ba75281cac8632a766b5856acaf Remove no_test_* tags from span_test to increase test cov... by Xiaoyi Zhang <zhangxy@google.com>
  - 3c2a43cc09791723c8a324836629644ac44cb9c8 Remove accidental bits of Google-internal code and short ... by Greg Falcon <gfalcon@google.com>
  - 4874d49d496ac0b6ec36f4280a14b2159e7af930 Replaces the macro-generated Duration factory functions e... by Greg Miller <jgm@google.com>
  - 90e62695e03cb4a57e137ca0c3e116b1d802db57 Fix namespacing for a couple files in base/internal, and ... by Greg Falcon <gfalcon@google.com>
  - b0e6e00e34f967924849aaf8c123bba068f093e3 Publishing contributing guidelines. by Gennadiy Civil <misterg@google.com>
  - d74eafbccc3dffa6c25f9b6a2219425a24b5a959 Internal change by Abseil Team <absl-team@google.com>
  - 27477badbbf720265f5b9509b6c0e01913dc0a9f Update escaping.h comments to Abseil standards by Tom Manshreck <shreck@google.com>
  - 67002f55738319c2875197c3b6282de215ec250d adds absl namespace to debugging/stacktrace.h by Behzad Nouri <bnouri@google.com>
  - e608018f7faa384d5b202ac0a4c7a0d5166f4d9c Update string_view.h comments to Abseil standards by Tom Manshreck <shreck@google.com>
  - e884f04d4c648e01ed7dcde2fda80c24e8452047 Exclude strings/ files we are not releasing from OSS univ... by Gennadiy Rozental <rogeeff@google.com>
  - 3f4c4032ed520f2dd10a81d58ef4f399c001c5cc Strip out eventmanager reference from release. by Gennadiy Rozental <rogeeff@google.com>
  - fb0f1c204793c3792bad101dbaa734e7c2a35887 Fix copybara strip comments by Gennadiy Rozental <rogeeff@google.com>
  - 3eaaac942f77c3d41d63d414630403bfd0f6b70c Strip out style guide waivers. by Gennadiy Rozental <rogeeff@google.com>
  - 020e045058173178b51266b99a2a5dc9ed921960 substitute_test portability | MUST_USE_RESULT cast-to-voi... by Juemin Yang <jueminyang@google.com>
  - 86c093bf81d80ff537ed5e8b89225ce75a636220 Internal change. by Derek Mauro <dmauro@google.com>
  - 330375eb952fe78276e75631a28e750d5bfdb198 Prefer absl::FixedTimeZone() over loading ""Etc/GMT[-+]<N>"". by Abseil Team <absl-team@google.com>
  - 2e07ebee46a8201adc0dfd2c4ddb3df76e524357 Internal change. by Derek Mauro <dmauro@google.com>
  - 1f0c8b78c8ebd66f14cdf39fcba9f4c9986dcdca ::absl -> absl by Gennadiy Rozental <rogeeff@google.com>
  - ad163566d12ea08f1da2c23931eeacfffc564139 Avoid old style loops where possible. by Gennadiy Rozental <rogeeff@google.com>
  - bce2108818fe57b5617ce0090ddd4f753808f0a1 Update comments in str_cat.h in line with recent changes. by Abseil Team <absl-team@google.com>
  - cfd593a80f4897256f2ce1ea0be55dc14e3fcad4 Copybara-out gtl aliases. by Gennadiy Rozental <rogeeff@google.com>
  - 584f1524d717993c1a16093caccd9ed2b1e5409e Fix a warning for Windows/Kokoro time_test.cc. by Daniel Katz <katzdm@google.com>
  (And 562 more changes)

GitOrigin-RevId: 06c8c67f5a564d00696e023060f05a5c34e7e164
Change-Id: I89907a6188fe7de05da400bf49ddfeba242aff8e",Unsure
55,https://github.com/yoyz/picoloop/commit/89bcad18f14c1b5de93891bfeb8e67a5d43431c6,yoyz/picoloop,refactoring code,Yes
56,https://github.com/chiragsakhuja/lc3tools/commit/829a9683793068570f876831f33fbe0e14bb6476,chiragsakhuja/lc3tools,[back] Continue major refactoring of simulator,Yes
57,https://github.com/ekstrand/ESP8266wifi/commit/ebbe712d19347c1f5a10edcba9c9212823c2103d,ekstrand/ESP8266wifi,"refactor: send() now uses default value for sendNow argument.

Also changed strcat() to strncat() to avoid mem overwrites.",No
58,https://github.com/DinoTools/sslscan/commit/860148c5a2cfad8ef51eb78b6ea96fe6e2135640,DinoTools/sslscan,tls renegotiation refactor (now with more Tor code),Yes
59,https://github.com/ponchio/untrunc/commit/5da81d201581bbbd2553b73e81193ecbeb1e16dd,ponchio/untrunc,"a lot of things I don't remember: mostly refactoring, cleaning and
start and length stasts for guessing (and backtracing)",Unsure
60,https://github.com/retrodeluxe/rlengine-msx/commit/33e32a2eb07e971f441eceaea22a684e15f5d29d,retrodeluxe/rlengine-msx,game_test: refactor room generation,Yes
61,https://github.com/anrieff/libcpuid/commit/779b403aa0029fb170fa5873e7fb5220fc28b969,anrieff/libcpuid,Matchtable refactoring for AMD (see previous commit).,Yes
62,https://github.com/AVbin/AVbin/commit/b0f104c6fe1377956295753b71c2f327b48940fe,AVbin/AVbin,Cherry-picked the runtest.sh improvements from the refactoring attempt,No
63,https://github.com/corneliusmunz/legoino/commit/0ad9ca4341fa15f83d5047fb9fb74010190ad08c,corneliusmunz/legoino,refactoring,Yes
64,https://github.com/RigoLigoRLC/LC2KiCad/commit/ff56a3fe57e932f853ad9925e080d90fb49abca0,RigoLigoRLC/LC2KiCad,refactor mess progress dont touch,Yes
65,https://github.com/raaxis/nds4ios/commit/61b851e80c8b0eacbfe171db74b4a3d24dc7041a,raaxis/nds4ios,Minor code refactoring and UI updates,Yes
66,https://github.com/thunil/mantaflow/commit/859aa0f153c56ef0ac327512eaa1cc43c7ffe626,thunil/mantaflow,refactored parser works,Unsure
67,https://github.com/buglloc/brick/commit/70278bb537a82e540db4b52c11452ac3abc9e327,buglloc/brick,"BXAway переехал на событие с возможностью управления через D-BUS. Not completed, wait for refactoring...",Unsure
68,https://github.com/Proxmark/proxmark3/commit/d1300b47ae47db3fef504d414cd0e86729234f85,Proxmark/proxmark3,apdu sending refactoring,Yes
69,https://github.com/OpenMined/PSI/commit/87db1807a9bd330ecf7c4a76a6ceaabbb09f6b94,OpenMined/PSI,"Typescript (#20)

* chore: add typescript dependency

* chore: add non-strict tsconfig

* refactor: convert js src files to ts

* refactor: convert js test files to ts

* chore: add @types/jest and ts-jest deps

* chore: add .editorconfig

* chore: update jest config

* refactor: convert js index file to ts

* chore: remove babel

* chore: turn on strict mode in ts config

* chore: add @typescript-eslint deps

* chore: update eslint config

* refactor: add strict types to ts code

* chore: add ts format and lint scripts

* chore: add eslint override for js files

* chore: move tsc output dir inside javascript dir

* chore: add js compile script

* chore: add tsc-out to .eslintignore

* fix: fix eslint complaints

* refactor: adjust file structure for jest/ts

* refactor: improve cpp library types in ts

* refactor: make Loader types clearer

* refactor: move ts error message into constants file

* refactor: use camelCase for ts method names

* refactor: use camelCase for ts property names

* test: nest ts test code in describe blocks

* refactor: improve ts naming

* fix: tidy up bazel vs ts types

* fix: remove unused default export

* fix: fix test name SPAG

* feat: throw if deleting twice in ts impl

* fix: fix client method types

* test: improve ts tests

* docs: Update README for TS

* chore: only lint/format ts src files

* refactor: fix ts types in index files

* chore: update tsconfig with paths

* refactor: update benchmark script

* feat: generalize psi_cardinality type definitions

* fix: fix types in ts tests

* chore: add @babel/preset-env dependency again

* chore: update jest config

* chore: add eslint override for test files

* chore: remove eslint env options

* chore: update eslint parser ecmaVersion

* chore: add @rollup/plugin-typescript dep

* chore: add @babel/core dep

* WIP: chore: update rollup config",Yes
70,https://github.com/yushroom/FishGUI/commit/5b34cb899c7e5d1903589b4c967c0bc33a53d126,yushroom/FishGUI,refactor and rename,Yes
71,https://github.com/jchavanton/voip/commit/28dca1b1962b18237eb697bf7a30a716ee5754e5,jchavanton/voip,mos score refactoring to postprocess them,Unsure
72,https://github.com/sciplot/sciplot/commit/2a179c444f16c75d161faa80067ed7f0744f220c,sciplot/sciplot,"Merge pull request #10 from HorstBaerbel/master

Add multiplot support and refactor plot.hpp",Yes
73,https://github.com/raspberrypi/weston/commit/c7b45f68e629dd5f92f10411f97bfa862a7baf5e,raspberrypi/weston,"compositor: clear surface damage on draw

Commit a0d6dc4f26c95ae08ffff7d5f1ee7c1f53bdf545 lost one line of code in
the refactoring, and so did not reset the surface damage on repaint
anymore. This causes damage to only accumulate, leading to a full
display redraw every cycle and hiding damage tracking issues.

Put the damage clear back.

Signed-off-by: Pekka Paalanen <ppaalanen@gmail.com>",No
74,https://github.com/aosp-mirror/platform/commit/77aad34c941403c657786a15103c50ab55ee4dd7,aosp-mirror/platform,"refactor to use normal warnings for entities problem and not straight SAX

* SAX2.c: refactor to use normal warnings for entities problem
  and not straight SAX callbacks.
Daniel",Yes
75,https://github.com/gin66/FastAccelStepper/commit/2b7bb3d45e82ba63ca1608c8c97bfe67b0e893d2,gin66/FastAccelStepper,wip: refactor ramp generator,Yes
76,https://github.com/legimet/nPDF/commit/642f1c2cee919841ed2a0c026e02b208c50e764a,legimet/nPDF,"Squashed 'mupdf/' changes from 02786068..2adce98d

2adce98d Bump version number.
b17a643a iOS: Let Xcode 8.1 perform it's recommended updates
714cb253 iOS: Build fix for fz_resolve_link API change
5f345714 iOS: Fix use of fz_buffer internals.
2c916aa7 Fix pdf-write bug when ascii encoding.
34731835 Fix a few cases where pdf_unmark_obj wasn't always being called on errors.
bff572a7 Harden viewers against failures when loading outlines.
ac6ebbe3 Build Java viewer with libcrypto support if available.
cdcbbde9 Retain only necessary files for curl support.
2840bc52 Detect openssl to support https when using curl.
9b5735e5 Update to curl 7.51.0.
6c9851c0 Do cleanup when dropping curl stream.
276d97cb Rename openssl flags to libcrypto.
207b2a0f pdf: Add x and y output parameters to pdf_lookup_anchor.
0c3e1ee3 Bug 697301: Fix ""crash"" in epub.
14187050 pdf: Use '#page=N' for remote destination pages.
ce90119c Fix 697334: disable text input in x11 viewer permanently.
adaa08a9 Fix 697335: Handle links with content in nested tag.
00043f2f Fix warning.
fa9cd675 pdf: Add 'compressed/raw' flag to pdf_add_stream.
5ed7e6c2 move the definition of GSDLLCALL to a different spot, above where it's first used.
8bbd1395 adapt to api change for toStructuredText.
3416574c Android example - smoother flinging
4ba86853 Android example - update gradle version.
3512a02e Android example - fix to maintain vertical center when zooming.
d11ed8c4 Fix Java 32/64bit detection.
0c28c2aa Update JNI code to load 32 or 64 bit DLL as appropriate.
e84b0b03 Fix compiler warning.
9f1372db Fix android build after fz_buffer internal hiding.
99a2242e Bug 697045: Bring in fix to let openjpeg skip some bad data.
5ee3e196 MSVC: Fix Commercial build locations.
55b20c34 pdf: Don't pass form UI events to link annotations.
0666bc34 pdf: Use URI dictionary for relative URIs.
ecba03d2 gl: Only force a ui redraw when link is clicked, not just highlighted.
9387c2e7 js: Update docs for annotation functions (WIP).
e906a182 Fix return in void function.
e70dcdfb Continued Layer API work.
7703ad8b More API tweaks.
37f95f87 Make fz_buffer structure private to fitz.
c0e1dfda Workaround 0 line-width strokes in svg output.
7e3600ef Bug 697336: Be more explicit about where to edit config.h
2216f940 Add/fix page coordinates to link targets.
018253cf gl: Add macOS support.
f0690e5d Add optional 'object' argument to pdf_add_stream.
7c6c6a58 API improvements.
099a0806 Update JNI code to compile on Win32 and Win64.
b00200eb Add simple layer configuration feature to mutool draw.
da50c6f3 Add pdf_layer configuration API.
a1d18b80 Add mutool option (-l) for setting the minimum line width.
4a4d48cb Add some more lines to .gitignore
c88fa306 Add minimum line width configuration option.
4e1a495e Clean up braces and indentation in fz_paint_affine_near/lerp.
79c4478f Change access to protected on parts of Image.java to allow AndroidImage to build.
15a76c5a fix iOS app issue where deleted annotations don't properly disappear.
a5f105a2 Fix android warnings.
be56635e Move fz_new_draw_device_with_options within file.
657a90eb Bug 697241: Fix blending through clips.
7456ccc6 Default background of luminosity masks should be black.
ac56cc72 Fix DUMP_GROUP_BLENDS debugging code.
4ccd0b52 Fix Memento bug.
21368c7c Avoid warning in memento builds.
749f6482 Avoid warnings in 64bit windows builds of luratech bindings.
bfc95aa9 Disable 64bit OpenSSL builds as we have no lib.
5186e4c3 Squash 64bit warning in Commercial JBIG2 bindings.
3b98c025 MSVS: More solution fixes.
55e65ef3 MSVS: Remove superfluous configurations from libfonts.vcproj
0f58532e MSVS: Remove superfluous configurations from generated.vcproj
40bebd3a MSVS: Add libluratech to project.
d44c0142 GProof: Silence warning seen in MSVC x64 builds.
a420ccd1 Fix MSVC build of JNI native code.
228249a4 Memento: Silence MSVC warnings
b70ddad9 Fix Luratech builds on MSVC.
6e2a71d0 Fix signed/unsigned and size_t/int/fz_off_t warnings.
0289421f Fix DebugGProof builds on windows.
aba49e43 Update JPEG lib with fix for Bug 697186
39aa1377 iOS app: adapt to the latest API changes, and fix display issue introduced in 1dec53c.
c973d21e Use pdf_annot_border to get the border width of an annotation.
9e2a8b67 jni: Make it easy to use stext without options.
afc21e2a jni: Only release stext options when present.
0a1a2b01 Fix 697284: The origin was incorrectly calculated for rotated pages.
858ac10c android: Don't bound twice in update_changed_rects.
3a0cd035 android: Fix spelling error.
076780b0 android: Fix screen updates when deleting annotations.
7eb87f94 Don't check for NULL before calls to fz_free.
caea7384 Do not drop compressed buffer twice in case of error.
1db2d649 jni: Add AndroidImage, using Android Bitmaps to create Images.
a605a0ef Explain conversion to RGB in jpx/jxr image loading.
feee1fce Don't dereference NULL subarea when rasterizing display list images.
fd197603 When hinted object is not found, avoid return from within fz_try().
a7d88907 tiff: Plug leak where superflous pixmaps was created.
240cf324 gl: Use MessageBox for GLFW initialization error messages on windows.
a03b212d Fix android build.
6f5b0eb9 Update MuJS.
9f7ce175 epub: Add links to XHTML and FB2 formats.
cc3bbe49 epub: Add 'id' attribute to all HTML elements, not just <a> tags.
8a07b7fb Clean up link destination handling.
4029b45e Update CHANGES.
cc54ce0e win32: Clean up namedump.obj and namedump.exe in generate.bat
c991e3ca Bump version number to 1.10.
8e57258b Update jbig2dec.
64b8d6f4 Update harfbuzz to version 1.3.2.
df2629b5 Update MuJS.
74a8ad5f js: Update docs with PDFObject accessor functions.
51d070b6 epub: Fix link bbox when it contains spaces that have been justified.
097e4ff7 Fix 697233: Add FB2 file type to mobile viewers.
e8a15044 Fix 697215: Script specific punctuation blocks.
343abcf4 Change space detection heuristic.
7025f65f gl: Show more search result hits.
de085341 Update ios/android to use new way of passion stext options.
841c4309 tiff: Drop pixmap when exception is thrown.
32ba1eb9 tiff: Always set colorspace when reading image info.
e7875fcd Introduce options for structured text.
04760747 Don't use local function, use fz_option_eq().
42ad2777 js: Handle null for all options supplied as strings.
023555b7 Don't return overlapping search results.
fbc45bbc Use correct coordinates for synthesized space characters in stext device.
25837ec9 Fix 697236: Don't update pen position inside clusters in stext device.
d81f9236 Bug 697235: Change default values for stext options.
e4714719 When not preserving stext whitespace, only emit space character.
161b834c When not preserving stext ligatures, remember actual character added.
a76bbd0f Bug 697226: Fix SEGV in Android viewer.
afaf3dc8 Fix cluster timeouts with test file.
956b4f19 Bug 697234: Fix slow rendering.
01f6954b epub: Set link height to the font size.
057d2228 epub: Don't call strcmp for quick tag name checks.
92900198 Update docs/naming.txt
12134a5b jni: Update mupdf_native.h.
d3412757 Clean up pdf_add_image to handle unknown image formats more robustly.
374d2290 Clean up FZ_IMAGE_XXX enums and purge unused FZ_IMAGE_JBIG2.
a804e349 Move headers to make svg_document an internal type.
9b66be81 Move headers to make xps_document an internal type.
fcbec57a Rename internal headers to follow pattern *-imp.h.
1678d060 Make document handler declarations internal.
8a102a68 Internal drop functions don't need to check for NULL.
ce82537d All external drop functions handles NULL.
23ac5691 Avoid checking argument to fz_drop_*()/fz_free().
6dcf860e Drop scaled pixmap later in draw_fill_image_mask().
b90748a7 gl: Add reload key binding: 'r'.
aea9f031 Remove unused luminosity.
d30765c4 tiff: Support stripped YCbCr images.
f0a7eb18 tiff: Cosmetic cleanup of code.
b63de11e tiff: Plug pixmap leak should conversion fail.
1528a595 gif: Do not paste frame data if frame and image do not overlap.
48338e8e gif: Handle frames bigger than image correctly.
17920571 gif: Constrain frames to image boundaries.
6b3af91f Avoid casting when dropping super objects.
d19274fa Only check digital signature when mouse button is released.
1d5c5234 Link with OpenSSL if present on system.
189b6cb8 epub: Add hyperlinks.
4ef5e67c gl: Do document layout before loading outline, to prevent laying out twice.
992e8385 Be stricter when parsing css length units.
c3f0d8a4 Drop all contexts the same way.
160369e8 pnm: Workaround for b/w PAM images with packed samples.
ed229f9a pnm: Support b/w PAM images with alpha.
126565f0 pnm: PAM images have component inverted compared to PNM.
9a87ef85 pnm: Premultiply alpha for use in pixmap.
1e7f53ba pnm: Better guesses when tuple type is not specified.
18f07aea pnm: Interpret binary b/w image samples correctly.
552d78ba pnm: Prefer enum to strings when parsing tuple type.
13ec7478 pnm: Prefer enum to strings when parsing header tokens.
0a9480a1 pnm: Throw exception if image is too big.
de508427 pnm: Cosmetic reordering of code.
1b1be5c7 Bug 696885: Handle subsampled components in openjpeg decoder wrapper.
3c2917d8 Optimise fz_new_buffer_from_image_as_png.
a0aa734d crypt: Handle null pointer when dropping crypt object.
ded36857 Bug 697065: Fix bug in CMYK -> RGB pixmap converter.
f9bab4a5 Fix leak in fz_load_jpx_info.
59f74777 Bug 697151: Pacify valgrind when reading padding while unpacking tiles
ffd0a70e css: Remove unused variables.
d72708a3 svg: Remove newlines from fz_warn messages.
177f4b7d Remove unused function.
69c37999 Use pool allocator when parsing CSS.
cf94c2a1 Bug 696958: parse css hex colors that are missing the '#' prefix.
ca8f5547 Bug 696958: Workarounds for 'rem' and 'ch' units in epub.
0bb6e0b1 Remove superfluous context null checks.
ca8d9898 Fix (harmless) typo in function prototypes.
69de38b8 Split fz_html into fz_html and fz_html_box for nodes.
e06eef11 Bug 697012: Avoid overflow in xps_parse_real_num.
d64a4eab Bug 696939: Fix mutool info -I flag.
798aaf5a Change code from using bandheight to using band_height.
80308eae Regularize band writer interface.
7de80f5e Android: Bug 697054: Increase zoom limit
91ac75c6 Always call fz_drop_document() to drop the document.
28d9c75e Free document in fz_drop_document(), not in subclassing documents.
34b5ec0c Bug 697094: Disable viewer text input on linux.
150e83b8 Bug 697050: Allow mutool extract to keep JPEGs as JPEGs.
e0505043 PDF Images: Add a flag for if we need to apply the decode array
bc9fdb01 Remove unused variable.
ed7fdb2a Bug 697075: Fix tile repeat calculations.
f22be2b8 Bug 697123: epub: Adjust anchor positions using fragments.
b2a895f6 Simplify linked list handling in epub-doc.c
ab368c95 Remove needless parameter passing.
2d81bb7e HTML: Keep 'Anchors' in the html box list.
8b541992 Use more bitfields in HTML.
fa931629 Change HTML agent to use bitfields rather than chars.
402a98ce Update VS solution with new font.
f3947006 Open document file in fz_open_document().
d34d3b12 html: Fix leak of buffer when opening as stream.
22552818 html: Add missing function pointer when opening as stream.
86828fab cbz: Remove unused variable.
f0dbccef Fix HAVE_JPEGXR and HAVE_LURATECH code for colorspace changes.
858b661a Ensure we always layout the document before loading the outlines.
fb6ccf6b Update Android build with fz_font/fz_colorspace API changes.
365ecd71 More SWAR optimisation in plotters.
aec11fac SWAR optimisation in plotters.
c5f8d745 Correct maths error in painters.
7836643e Optimise painters: Use SWAR to accelerate plotting.
a9543691 Tweak painters: If painting 0 alpha, skip it.
e28172f2 Tweak painters.
0e84c79e Fix signed/unsigned warning in filter-thunder.c
e173e021 Rename fz_process_mesh to fz_process_shade.
c571af66 Add API comments for fz_shade.
f5263de2 Add ctx to fz_font functions.
21b695f4 Add comments to API declarations.
09f246ba Fix HAVE_JPEGXR code for colorspace changes.
7b1308f9 Fix link in documentation.
38ea4bf7 Update Noto fonts.
b18795e1 pdf: Support UTF-8 encoded text strings.
420bd4b2 gl: Set glfw error callback before initialisation to catch setup errors.
5ae898c4 pdf: Separate functions to read text strings and text streams as UTF-8.
85e0700f js: Add PDFObject explicit accessors.
4e1e13c9 pdf: Remove unneccessary document argument to pdf_to_utf8 etc.
a1e70133 Add annotation editing functions and clean interface of existing ones.
8e244f7e Remove separate tmp/deleted/changed annotation lists.
170f35a5 js: Make PDFDocument, PDFPage, and PDFAnnotation subclasses.
7dc52788 Squash compiler warning.
80d6490e Hide internals of fz_colorspace
994770e2 Bug 697159: Fix memory leak in CBZ error handling.
6870dfec Only build murun if we have mujs enabled.
b22c54d4 Squash warnings in cluster builds.
bcd4c4b4 Update Xref reading code to cope with 19 byte entries.
a5abafc7 Bug 697194: Document -gggg in muclean.
61eff09d Bug 697182: Fix memory leak in html-layout.
6aa13c72 Bug 697196: Add missing openjpeg file to Android Makefiles.
87524fa1 Bug 697177: Avoid SEGV in Epub file.
9be02aad Add a const to a lookup function.
da940e1c Simplify fz_new_type3_font
c2901d60 Uncouple font shaper data from harfbuzz.
9e88b088 Move fz_font definition to be private.
14109acf Add some more comments to API headers
54fb65fa Fix typo in fz_valgrind_pixmap
a059e8c2 Move thirdparty/openjpeg onto the correct SHA.
793c1360 tiff: Do not clobber input buffer if fill order is reversed.
2738bc06 tiff: Do error handling for decoders in a single place.
c8b65916 tiff: Validate that tag/tile/strip offsets are within bounds.
c60de04f Bug 697166: tiff: Avoid freeing offset/bytecount arrays twice.
717f2a55 Bug 697165: tiff: Do not allow duplicate array tags.
9eb9cee0 Bug 697155: tiff: Drop stream if compression is unknown.
e07b6fdd Bug 697157: tiff: Rational tag denominators may not be zero.
3f4746d0 Bug 697156: tiff: Free tile arrays after use.
47f73a28 Bug 697154: tiff: Detect error when decoding strip/tile data.
8aa2fca1 Bug 697153: tiff: Image dimensions must always be bigger than 0.
2945b540 Bug 697152: jpeg: Use correct macro to get client data.
cf2272c6 Bug 697163: gif: Fix integer overflow in image dimensions.
1bebb9fe Bug 697162: gif: Color index must be inside color table.
651c9f1d Bug 697161: gif: Frames may not be bigger than the image.
2eaa779a Bug 697160: gif: Transparency index must be inside color table.
3dd90d46 Update OpenJPEG to the latest (git) version.
eedec442 tiff: Fix typo in thunder decoder.
d72b1b06 Add newly added files missing from VS project.
aa2a7bcc tiff: Support tiled images.
321103e3 tiff: Estimate uncompressed strip sizes if missing.
3059b690 tiff: Reorganize code, preparing for tiled image support.
b70ce7de tiff: Add support for thunder decoding.
81b4cd57 tiff: Support flate compression under differnent name.
79467b42 tiff: Support images with 2 and 16 bits per palette color.
b776317b tiff: Support images using Lab colorspace.
0ec9f922 gif: If decompression fails, don't rely on uninitialized buffer data.
6c6c5c66 gif: Use frame size when parsing a frame, not size of entire image.
c2acdba7 pnm: Interpret b/w image colors correctly.
ecc5c28e Fix memory leak when opening html/loading raw stream.
df6fca4d Make git ignore optional thirdparty libraries.
8e6c5ce4 JNI: Improve string/name encoding handling.
bb4daf44 GProof: Fix typos in gs invocation
e615e660 Android example: Make selected display profile persistent
a1d40f89 Android example: add embedded profile to print profiles list
9dd552b0 Android example: tweak Apply button in proofing dialog.
a5db7f3b Android example: move kankan module.
4af3e0db Fix leak in error case of pdf_add_stream.
2b43eac5 JNI: Fix typo in logic.
eef63823 JNI: Rework conversion functions and nulls.
32131a60 Java code to get embedded profile name from a PDF.
ca8f1107 Clean up annotation enum names.
3a29d83d Check for buffer overflow in strtod ascii division.
9a443ad5 Fix warning: set but unused variable.
0bf90ea8 Add 'make android' target to build android viewer.
840f1e55 Update MuJS.
1e08b3d9 GPROOF: Modify gs invocation.
446097f9 Bug 697021: Count used string space correctly.
cfe8f35b Bug 697020: Remove variable only ever written to.
d5f302b8 Include Java files when creating source tags.
fadb7c18 tools: Prefer fz_atof() to atof().
1c46ee8d GProof: When invoking gs, redirect gs stdio to local stderr.
1e03c064 Bug 697015: Avoid object references vanishing during repair.
fdf71862 Bug 697018: Avoid recursing infinitely on dicts in mutool info.
19effcbc fix the quotes fix
84909fb7 Bug 697106: Mark 64bit constants as such.
9dbd14a9 Gproof GS invocation: Only quote profile names if required.
33e49c43 Update GPRF invocation of GS
80ba0e2a Android example - don't do any layout after the document has been destroyed.
cf371385 Fix Memento crash
4d6d027d Sync Memento with gs.
e1a0ad27 Avoid signed/unsigned warnings.
8b112b32 SVG: If no width/height given, then guess from viewBox.
352efd64 Update SVG document handler; circles.
9d430e88 fz_store: Reap passes.
e22bf36d Make fz_printf() handle %lu.
73613ba7 jpx: Fix off by one in palettized images.
9d8ab86f svg: Throw on nonconforming transform attributes.
5f07a4df svg: Use fz_atof() and fz_strtod().
4f798091 Make printing empty hash table entries optional.
c53182ca Fix printing of hash table.
c798eb4f Make fz_printf() support %p.
1823fa38 svg: Ensure that read svg file is null-terminated.
6c170bfb svg: Fix typo in opacity attribute variable name.
c76f6c68 Free fz_tree nodes when dropping tree.
c7a7471c tiff: Do not assume that images always have alpha component.
a7376dbd JNI: Finalizers must be able to run with pointer being null.
aba9c533 Squash some memento warnings in MEMENTO_LEAKONLY builds.
31e0785e Android app: Update rgba -> bgra.
ea3da99f Java bindings: Improve exception messages
b83ae278 Remove unused variable.
b0d3b475 Correct assertion in pdf-store.
86fdaa19 Add some missing #ifdeffery for Memento.
514508fc More tweaking of gproof device gs invocation.
dc05813d MSVS: Make libfonts consistent with other projects
3711d72c Bug 695988: Avoid sending image data multiple times.
1d2dfa7e Call Memento_fin in java Document_destroy().
28b71d67 Silence some warnings.
5ab4dc1d MSVS: Correct paths to java files and add missing ones.
eeffd8b9 Android JNI context fixes.
08dd88ba Improve fz_filter_store speed.
117b8a8a Tweak store handling of PDF document destroy.
7b9eb0d5 Tweak gprf-doc.c to avoid warnings.
8db74090 JNI: Handle the case where an object's native pointer is NULL.
a60deabe JNI: Do not fail on using null as a value in a dictionary.
c9e3eb6f JNI: Check if get_context has thrown exception,
3dc9cfd2 JNI: Avoid throwing IllegalargumentException.
284976bc JNI: Avoid getting context if not needed.
e04e8c7c JNI: Remove forgotten FIXME.
3de83b0d Extend store to cope with references used in keys.
3a1ae9b3 Update gproof device to invoke gs better.
daf99a04 fz_unpack_tile now skips extra input components.
2b22d3bf JNI: Ensure that BufferInputStream position is in range.
c04373e6 JNI: Catch fitz exceptions and convert to Java exceptions.
e21a1dc6 JNI: Don't replace Java exception with one from fitz.
446aead5 JNI: Throw IllegalArgumentException for null arguments.
ef667139 JNI: Delete global ref to Separation class after use.
bcaf68e8 JNI: Rename member variable to fit with usage.
ad1b0d94 JNI: Check context in consistent way.
01ee5a28 JNI: Fix compiler warning about unused variables.
bf633140 Redirect fprintf to android logcat in debug builds.
ee714b54 Rename helper function in mupdf_native.c
f66bcef7 Don't report addRef/dropRef events to Memento twice.
d096489b Fix typo in Memento header.
49ed7cd9 Android example - delete temp files after proofing, destroy the document and pages after use.
71ecb46b Android example: add options argument in calls to Page.toStructuredText
2369a34a Android example - Add proofing support.
ffbe3db7 Android example - drawing ink annotations
e18d11b6 Android example - add button for toggling annotations.
7d42acdd Android example - file toolbar icons, password dialog
c315d719 Android example - hook up the back button to finish the activity.
6273edc2 Add scripts to remove/replace 'static' from functions.
d79f7236 Fix clang compiler warnings.
58bb37c2 Update android logging code within Memento.
e31c88f5 Table should be static const.
a1a5fc2d Fix Memento Android backtrace code.
725a38a6 Update MuPDF Android build for Memento.
9c592542 Update Memento for Android.
59255f66 Add missing include.
6446ad77 Bug 696984: Type 3 fonts bbox fixes.
bf8e4dea Fix compiler warning.
ff5f8814 Add UsePDFX3Profile option to gproof device
fe2d1608 Correct rounding in gproof skeleton files.
85f03730 Fix incorrect type usage.
2e6ccc6c Fix VS2005 build; missing stat definition.
69a3f74d Add newly added files missing from VS project.
88f2231b Use fz_vsnprintf() in x11 viewer.
2c7a17ac Limit length of fontfile name in fontdump.
0c61b573 Add options to control heuristics in structured text.
dc2c7735 Make fz_option_eq() available outside of pdf-writer.
5e81ff34 Handle too big pixmap by printing error message in X11 viewer.
b3194c73 JS: Add Path.bound() and Path.transform() similar to JNI.
2e4504f5 EPUB and XPS may only be zip archives or directories.
8264d496 Add support for GNU tar archives.
15cab201 Make fz_archive a generic archive type.
793ae6a3 JNI: Separating big fz_try()s into smaller scopes.
e6fbde08 JNI: Remove redundant cleanup.
5667550e JNI: Delete local reference to text span font.
ad3d2d60 JNI: Copy data back to Java arrays.
a7f20b00 JNI: Make sure to keep fitz objects passed to Java objects.
0f27e8fe JNI: Handle errors from AndroidBitmap_unlockPixels().
32e97868 JNI: Move failure testing code outside of fz_try().
b49db07c JNI: Use Android enum for detecting failure.
f4961c39 JNI: Add a number of new to_*() C to Java conversions.
a5fb2250 JNI: Handle exceptions from JVM properly.
d03d46d4 JNI: Cosmetic reordering of code.
b2048e4e JNI: Throw OutOfBoundsException for out of range values.
f690e82b JNI: Throw IOException when Buffer fails to read/write.
4eb7cd5b JNI: Make exceptions unchecked.
9c1db67e JNI: Check arguments and throw suitable exceptions.
d887bdc9 Devices now handle colorspace being NULL as alpha-only.
2d3eca6d Luminosity transparency group must have colorspace when used as softmask.
c648955c Mutool clean: Avoid ""Not a dict (<NULL>)"" error
796be86b mutool clean: Fixes seen as part of bug 697092 investigation.
fff28aaa Use fz_convert_color().
24be8aa1 JNI: Support size() and push() for arrays.
841fae6c JNI: Keep arguments before giving them to constructor.
9699fc92 JNI: get_context() may throw error and should be handled separately.
b71976cf JNI: Do not check self pointer, it is always valid.
7b6bc6ed JNI: Check for exceptions after calling method.
339fa94f JNI: Use short form of NULL checks.
44348926 JNI: Use jboolean/JNI_TRUE/JNI_FALSE everywhere.
9ccbd3fc JNI: Whitespace/comment/error message cleanup.
77d455f8 JNI: Remove unused nativeAnnots/-Links.
23b92cc2 JNI: Remove unused variables and cast byte array region.
e88785ca JNI: Update to new pdf_load_stream interface.
b1a4f1a1 Always use glyph aliases when creating encoding tables.
960cd3d0 pdf: Load/open streams by indirect reference object when possible.
f86e9738 Simplify PDF resource caching table handling.
1000326a Don't try to copy a NULL dictionary.
594968c5 Fix pdfextract for optional pixmap alpha changes.
85ee8799 Use U+FFFD instead of '?' for bad encodings in text extraction.
bf321630 js: Add PDFObject.length and PDFObject.push() to handle arrays.
d88fc90e Add pdf_array_find to look up the index of an object in an array.
7bb57105 Bug 696983 - Fix bidirectional XPS spacing.
8fa9a79d When NULL is added to PDF dicts/arrays, insert null objects.
de6e3889 Be stricter in what can be added into arrays/dicts.
a667ff91 Do not resolve PDF dict keys before using them.
c875791e Always check that PDF dict keys are names in same way.
a92f0db5 Add macros for checking PDF object type.
92867463 Turn warnings in dict/array functions into exceptions.
9d304f9a Java - correct the JNI signatures for bbox fields in StructuredText inner classes.
cb375a3b Document part of fz_stream interface.
269f40b7 Fix typo in document creation macro.
db4b628f Android example: added text searching.
9f457e6f Java - change contains() in Rect and RectI to properly handle empty rects.
d1ad269c Android example - add first page and last page buttons
7f2c7259 zip: Used unpacked entry size, not listed entry size.
81037acb Android example - update gradle version
2c663a64 Android example - remove isBlank, start2=afterFirstLayoutComplete, ul/dr=upperLeft/lowerRight
89c8b216 Java/JNI - add TextChar.isWhitespace
76cdf0cd Android example - simple implementation of reflow.
07a60a0e Android java - ad textAsHtml() to the Page class.
786057a2 Android viewer: get experimental proofing to build again.
c8665eae Android example: fix initial layout timing issue.
f1b8593a Android example - fix a crash bug by recycling bitmaps between documents.
e7fa2ff8 Android example : improved text selection.
1bc2b725 Java/JNI - Add empty ctor and union method to Rect and RectI.
3a8037e3 JNI: Add finalizers for Shade and PDFGraftMap.
14ba33d1 JS: Push null if image lacks an image mask.
83d88f19 JNI: BufferOutputStream should only be used for writing.
5e6e1793 Android example - collected changes
d0fcfca2 Java/JNI: Added blocks/lines/spans/chars to StructuredText.
25486676 android java - add ""contains"" function to Rect.
20f54e49 Fix fz_vsnprintf() so it prints %zu.
9110e5d8 JNI: Only store links/annotations if all are successfully handled.
6372d8c0 JS: Add Path.curveTo*(), similar to JNI.
e669037e JS: Add several Image.get*() methods similar to JNI.
7111d625 JS: Add Pixmap.getX() and .getY() similar to JNI.
147ce438 JNI: Add/change PDFDocument.save() related methods.
6d07cc05 JNI: Delete forgotten global references to classes.
7e0a20de JNI: Put all Pixmap.clear() in a single location.
baafc0a1 Re-add line endings for mutool show grep.
b136e23b Remove function not being called.
e80a476c Parse more fz_document_writer() options.
b73d7cab Move to bitfields in fz_font rather than chars/ints etc.
b08617e1 Bug 696984: Badly rendered characters.
f496b715 Java: Add import of ByteArrayOuputStream.
03e6d710 Make mutool clean only iterate over valid link annotations.
39b0f07d Make sure that number of colors in mesh params is valid.
fa193640 Bug 696941: Fix use after free.
e98091d5 Move hash calculation outside locked region.
629d8446 Speed tweaks to muraster.
2f991445 Fix pixmap and reference leak in pdfextract.
79170894 Fix memory leaks during annotation synthesis.
545bd060 Add char encoding to produced SVG files.
c3d9f08d Fix memory leak in fz_new_buffer_from_image_as_png.
f6792a3e Fix missing alpha only plotter.
03909b0f Fix timing (-st) reporting for muraster and default to no BGPRINT
d7dd1e0e JNI: Add PDFDocument methods for grafting objects onto documents.
7b40777c JNI: Add DisplayList.toStructuredText().
3eb6111b JNI: Implement PDFOBject.write*() methods.
a638d20e JNI: fz_var()/return to make behavior correct upon fz_throw().
fe2c7e0e JNI: Check more JNI arguments for null.
25929104 JNI: Declare methods for internal use private.
aa2fc75f JNI: Fix local ref leaks in methods using object arrays.
023c272c JNI: Fix bug in Document.loadOutline.
de034659 Bug 696927: Move debug printfs to fz_warn.
537a467d Bug 696662: Android viewer: data from URI stream fix.
cb62fbac Attempt to fix PWG output.
6baaf58e JNI: Fix typo in Pixmap.getSample() interface.
c15b5a6f JNI: Implement document Outline.
9500e155 JNI: Implement Link for hyperlinks in document.
014fb58f JNI: When adding stream/page contents, accept String.
bbb324fa JNI: Validate that page indicies are always positive.
8b6cc5f0 JNI: Add BufferInputStream, BufferOutputStream.
90bf2e01 JNI: Extend Buffer interface, especially for reading.
8625af9d JNI: Cleanup of Annotation and PDFObject_toByteString.
ab9415f2 android example - fix whitespace issue.
1d847853 android example: An attempt to improve the fluttering at the edges while zooming and scrolling.
599f15e3 android example - add cacheing of page contents and annotations.
c845fe96 android example - add a button to toggle annotations
bc7dd5e1 android example - VERY brief build instructions.
6fb868c1 android desktop view - add a button to toggle annotations on/off.
cb78b5c6 java - move fitz sources into a 'src' subfolder.
e47769cf Android viewer - fix bugs in mupdf.c associated with changing APIs.
07bf093b Fix indentation for Java sources.
e21010d7 Fix bug in .gitattributes pattern.
3de927cc Add -P flag to muraster.
510110eb Fix build breakage in Android viewer jni code.
182c2b42 Bug 696493: Fix typo in earlier commit.
bd3988a1 Support changing reflowable font size in JNI sample viewer.
48b7d735 Adding missing JNI interfaces.
9f3f059c Cleanup of JNI code for consistency.
a39339c8 Add interface indicating if a document is reflowable.
e4f522c2 Simple update due to API change
c805c460 Fix typo in fz_new_stext_page_from_page.
c1901196 Update android viewer with fz_close_device.
ca4840a5 Update iOS code to call fz_close_device.
de4a540e Fix whitespace and indentation.
b8aeced9 Add editorconfig and update gitattributes.
37071d23 Update MuJS.
00569342 x11: Update x11/win32 viewer for fz_close_device changes.
caafb37d Bug 696699: Fix Text extraction mediabox information.
ed8501ed Bug 696493: Fix MINGW build of viewer.
21e18801 Bug 696892: PDF annotation appearance stream synthesis SEGV
ab770bef Use fz_malloc_struct rather than fz_calloc.
42bb12c4 Bug 696910: Fix MINGW build.
ff7608ff Fix memory leaks in SVG device.
fea3e483 Bug 696846: Fix badly formed SVG output.
70afff08 Fix knockout/mask interaction.
3f361e35 Fix MSVC build of murun
1072077d Fix Memento builds; static references were upsetting refcounting.
6153a076 Fix typo in comment.
3e11ae39 js: Add doc.loadOutline and page.getLinks functions.
6a4f5d72 Android JNI Annotation fix.
efaf3b16 js: Update DrawDevice example.
ddc05633 js: Check if some arguments exist before converting to boolean/number.
e3d769c1 Fix typo in fz_new_image_from_pixmap.
111dee34 Fix bugs in pdf_add_image.
5d70d34f js: Fix memory leak in new Image().
8abdcfd3 xps: Only recognize <dir>/_rels/.rels type paths, not any .rels file.
fdda43df Zero terminate fz_vsnprintf output when formatting warnings and error messages.
4a2b261f Java desktop example: detect retina and scale accordingly
8d4b16f4 android desktop viewer: scale the page box before making the pixmap in imageFromPageWithDevice
0c10b5d6 JNI: Fix annotation crashing problem.
e427d432 MSVC: Add DebugJava/ReleaseJava configurations.
b02392be Update mupdf_native.c for Windows.
1dec53cf Fixes to iOS application for recent API changes
67af3ff2 Add documentation for exposed LAB function.
cd826c85 Avoid warnings in non-Memento builds.
16c8afb8 Bug 696872: Avoid trying to paint with zero alpha.
d08fbf57 Fix Windows builds.
e44262b2 Bug 696911: muraster with no threads lib.
2be507bf Use fz_keep_imp and fz_drop_imp for all reference counting.
27915512 git stripspace
10d6eaa7 Separate close and drop functionality for devices and writers.
b53e7a42 Slim pdf_xobject: remove cached colorspace field.
a2ee9c14 Slim pdf_xobject: remove cached document field.
7340ec1d Slim pdf_xobject: remove cached transparency/isolated/knockout fields.
81fa4dab Slim pdf_xobject struct: remove cached matrix field.
14a052d2 Slim pdf_xobject struct: remove cached bbox field.
a7c01fa4 Slim pdf_xobject struct: remove cached resources field.
84ae15f2 Slim pdf_xobject struct: Rename me to obj.
9afbc5e8 Slim pdf_annot struct: remove cached page_ctm field.
8162e484 Slim pdf_annot struct: remove cached inv_page_ctm field.
5b029fe5 Slim pdf_annot struct: remove cached annot_type and widget_type fields.
adc4932a Slim pdf_annot struct: remove cached matrix field.
048948c9 Slim pdf_annot struct: remove cached rect field.
5f11fd5e Slim pdf_annot struct: remove cached pagerect field.
e8291077 Safe defaults for pdf_to_rect and pdf_to_matrix.
af338676 js: Add wrapper for fz_stext_page to search, select and copy text.
174cc975 Use fz_vsnprintf to format warnings and error messages.
93456e1c android: Fix mixed tabs/spaces in DocViewActivity.java.
f2f26550 Ignore duplicate character in structured text extraction.
01d5f0bc Android example: modify to use new JNI, N-up page display
cb894e71 Proofing - fix a bug in the use of gswin32.exe.
99f3402f Android viewer - replace missing build.gradle file
294178d7 Android viewer: add mupdf_native.c to build
e2a85460 x11: Fix segfault when creating presentation transitions.
f0eabc17 Start slimming pdf_page.
c3944e2e Add fitz to pdf downcasting functions for pages and annotations.
467af4f7 Update luratech jbig2 function prototype with int to size_t change.
4d13ba9a Add annotations to murun.
7a8be5d4 Remove premature optimization: don't bother to resolve page objects.
5983a7de Fix garbage collection and page grafting for indirect reference chains.
255776a7 pdf: Drop generation number from public interfaces.
b644ed13 pdf: Increment generation number in the xref when deleting an object.
74627fe0 pdf: Flatten inheritable page properties when copying pages.
944a6aff pdf: Check ownership when adding objects to a document.
6e9c02ab gl: Fix buffer overrun when there are too many annotations.
507d3198 Add support for decoding pbm/pgm/ppm/pam images.
40dc2fab Add optional support for JPEG-XR.
41014a23 Some minor optimizations.
b03381ad Add optional support for Luratech JPEG2000 decoder.
10c89458 Expose LAB colorspace
82a12b50 Fix Java makefile to link to system freetype library.
d42362b3 Support J2K/JP2 files in CBZ.
653e62cf cbz: Use case insensitive comparison for extension.
502e5624 Fix bug in optimized clearing of CMYK pixmaps.
5da66a0f Fix bug when opening small PDF-files.
df3c7813 Handle alpha-only PAM output as grayscale.
363f51b3 Output only as many components for PAM as exist.
4ccea914 JBIG2 is supported by jbig2dec/luratech decoders.
feea0676 Make docs/thirdparty.txt info current and accurate.
810aefd5 Print font encoding in mutool info.
c161c5d5 Update examples.
954e3bb1 Add Source Han Sans CJK per-language fonts.
cd100e90 Mudraw: Fix interation with banding and display list.
5c41dcd3 Fix inconsistency in band handling.
12aa6f72 MSVC: Add DebugGProof configuration
95e00288 Fix GProof operation.
6b056736 Always print filenames in mudraw.
1b1a87a5 Update muraster tool and add it to the unix build.
6e48c939 epub: Use markup language when shaping and selecting fallback fonts.
cf7b2cbb Update JNI code. Take explicit alpha argument in toPixmap functions.
38ffc7fe modified mupdf.c and mupdf_native.c to adapt to APIs that have recently changed.
9f88e9d9 Some Makefile cleanups.
51a31e82 Support TIFF files in CBZ.
834243db Tweak PDF annot API.
c92707fe Add support for getting additional annotation information
680bcf8d MSVC build: Fix build of noto.c
25d9cb88 Fixes needed for muraster to build
8ee6a93b Update font names in libfonts.vcproj
398b9126 Use vertical presentation forms.
937d5f23 epub: Expose Dingbats, Symbol, and Emoji fonts by name.
4133f882 Update cmap cleaning scripts.
82975b57 mudraw: Don't apply ctm twice when not using display list.
f4d07714 gl: Fix annotation textures that have alpha, while page textures don't.
bdc0b4b9 Transform device call scissor rectangles by device matrix.
12e17a2d Handle colorspaces correctly when writing pnm.
46f8fdf9 Fix typo due to switching from int to size_t.
e872f422 Bug 696835: Reverse zoom in/zoom out mouse controls.
cc4c0e6c Fix signed/unsigned warning.
a47aaea4 Bug 696839: Fix -I option to mudraw.
e9132f1d Bug 696847: Fix SEGV in svg device.
e1a63c0f Add simple muraster.
2372e997 Fix off-by-one error in split_at_script.
25144314 Update base 14 fonts to the latest release from URW.
4e8160a9 Set pixmap resolution when creating pixmaps for draw device.
8393f201 Add separate X and Y resolution to draw device options.
602cc736 Add mediabox argument to fz_new_display_list.
ccaf716d Add device space transform state to draw device.
27269d49 Allow PDF strings to be > 16bits.
5e5d9490 Fix fz_write_pam code.
f653eac3 Improve banding API.
77b12405 Add some quick notes on integer types.
4a4e6ada Use 'size_t' instead of int as appropriate.
c9bad4ef Fix MSVC build; PATH_MAX not defined.
0ab95475 Silence warnings.
adc06f3c Add PNG output for mutool convert.
000e932a Add fz_format_output_path function.
b8f6455d Return options struct argument from pdf_parse_write_options.
3ab49381 Add fz_draw_options struct for use with draw device.
5825ef88 Drop save_alpha argument from image writing functions.
840f6ab0 Split image output functions into separate files.
ae0e3854 gl: Add PDF creator and producer to info display.
bafc0350 Update JNI bindings for pixmap alpha changes.
fe02a527 Update getStride and add getAlpha to JS bindings.
c038cf4d Fix crash due to double closing output in pdf_save_document.
d4037cf3 MSVC: 64bit fixes.
d67f59b3 tiff: Add omitted static void return type.
b4d333f5 MSVC: Reorder objects in project file.
44d65838 Add TIFF SGI LUV decoding.
24c55cc6 Redo accidentally reverted mujs submodule change.
57a84448 MSVC 64bit fixes
c0759acc Update TIFF LZW decode.
60edbbde Add missing subtools to mutool manpage.
9c9fe1a6 Fix typos in various parts of the code.
4d7bf58d Add optional support for Luratech JBIG2 decoder.
163c30cf stext: Non-initial glyphs in ligatures must set start/stop.
46b75f28 Teach ""make tags"" target to be quiet.
b658cb54 bmp: Support arbitrary bit mask widths.
3aacd38b Add pdf_write_document.
d93f4d84 Fix VS2012 builds.
f408254b Update MuJS.
94b09b5e Add missing restrict.
092e97a3 Fix Android viewer build with js.
4766b286 Bug 696822: Refuse to save a pdf file incrementally if it would break.
2777fb92 Bug 696831: iOS/OS X support for size optimizations
a3ab5aa8 iOS: Run Xcode's ""Convert to Modern ObjC"" for ""ObjC literals""
641935ed iOS: Replace property like accessors with properties
3b9629fb iOS: Use modern instancetype instead of id for init return type
4129322d iOS: Fix a bad call to super in MuDocumentController.m
f53d79f0 iOS: Replace char * with NSString in ObjC APIs
917b8ef8 iOS: Remove some printfs
2fd7f11c Move to using size_t for all mallocs.
fea0f846 Bug 696826: Android Viewer: Cope with null item
d74b2a68 Fix subarea image calculations
ef6bc91b Bug 696810: Avoid integer overflows.
6df3706d Update MuJS.
cc1fd2ff Add FZ_ENABLE_JS configuration define.
ae64e558 Minimize the number of CMaps built in to the ones listed in the spec.
238ade12 Add build=small target, optimizing for size.
45d59d1c Fix broken ARM implementation of scale_row_to_temp3.
fb2cae0c Fix problem with FZ_PLOTTER_G only builds.
445cf546 Android Viewer: Fix jni code w.r.t pixmap alpha API changes.
3e8ce4d9 Change ARM assembler to be compatible with Xcode/clang
7db12511 Bug 696813: Fix Lab colorspaces.
1385f91e MSVC: Enable Function level linking
3f9d9ffb Update test device with passthrough option.
00993710 memento.h: Replace memory.h with stdlib.h
5aaf35d6 Fix some ""defined but not used"" when FZ_PLOTTERS_RGB is 0.
61cb26c8 Avoid fz_font pulling harfbuzz in.
2ba534c2 Link tools via libmutool.
48722a72 Respect FZ_ENABLE_SVG=0 in HTML/EPUB.
e74df981 Respect FZ_ENABLE_PDF=0 to allow dropping all PDF specific code in tools.
0b73a8dd Add TOFU_BASE14 option.
846a8a68 Ensure that we can use FZ_PLOTTERS_N instead of FZ_PLOTTERS_RGB.
ba5dd08d Add config.h include file.
19c07d7c fix usage vcproj
1c716190 Accelerate common n=3 color case.
28a1ee75 Tweak plotter code slightly for speed.
388e34e4 Improve speed of fz_paint_solid_color and friends.
6ac98437 Split draw-paint.c plotters out into separate functions.
37dbda63 Improve speed of fz_paint_affine_N_near and friends.
02299d99 Rejig draw-affine.c for improved profiling.
dba5c020 Add facility to track usage of functions.
0a4ebf51 Mudraw: Move halftoning into render threads.
1be9d93e Fix ARM code for bitmap scaling
4862df32 Bug 696803: Fix pam output.
0a764b98 Optimisations in draw-affine for 0 alpha pixels.
82b600da Cope better when asked to plot alpha only pixmaps.
ee972fbf Avoid unnecessary alphas when decompressing images from streams.
dff58514 Ensure fz_invert_pixmap can cope with no alpha.
b2772f40 Update bitmap scaler to cope with lack of alpha.
6d3c81d9 iOS: Update after pixmap alpha made optional
e0a658df Skip alphas for ""loaded"" JPXs (where possible).
37bcf35c Fix fz_decode_tile in the absence of alpha.
8d50d642 Fix plotters; alpha being dropped.
69db6d1d Fix optimisation in fz_paint_affine_N_near
38c45fc5 Skip alphas for ""loaded"" JPEGs.
9245cd0d Fix 696796: clamp color values in PDF to valid range.
b18626a2 Fix issues uncovered by coverity.
28827a69 Sprinkle some consts and restricts in plotters.
3d5c48db Silence ""Variable might be used uninitialised"" warning.
c80baca3 Fix ARM code in light of plotter changes.
d0b78f41 fz_pixmap revamp: add stride and make alpha optional
841952db Fix -p password option for MuPDF on Windows.
a0a9ce48 Bug 696795: Proper fix.
36f41bc1 murun: Add Buffer#writeBuffer to allow for concatenating buffers.
0528bc57 murun: Add graftObject to javascript bindings.
a4b7981d html: Add SVG image support.
c04aa7a8 Add images based on display lists.
fb0d12c6 Fix typo.
52b0e6eb Remove voodoo from draw-affine.
3cfdde1c Fit another mistake in cmyk plotters.
6bff94b4 Fix error in CMYK plotters.
8d8816cb Fix potential double free in pdfmerge.
4ce9b5a1 Add common page range parsing function for tools.
ae978058 murun: Add document writer object.
b557ece7 Reference count fz_device.
51bd5ba7 Fix double free and memory leak.
0d342fb6 Add pdf write support to mutool convert.
9dda5aa7 Add long output option parsing.
74d75a7a Update script that generates browsable hyperlinked html source.
5660bef0 Update MuJS.
c79c663a Remove fz_lookup_device_colorspace().
21116fe8 Make document handler reference counting thread-safe.
b994d720 Introduce a general output context.
e67981e7 Makefile: list all source dependencies for cmapdump.
049164b3 Move string compare helper to other string functions.
c99afdde Add variadic versions of fz_throw and fz_warn.
ea2b0bff Fix Mudraw timings when using -P (bgprint).
fca826d4 Fix race condition in bgprint.
1a6b5b8b Enable ARCH_ARM on ARM platforms.
ecda9f94 First implementation of parallel rendering (""bgprint"")
8b08ca29 Bug 696759: Fix pdf image subregion decode.
336a0ba8 Fix pdf_delete_page_range.
53d94f4c Mutool clean: Fix sanitisation of pages with Content arrays.
f24fd137 Mutool clean: Copy OCProperties when subsetting.
694642bc Update mupdf-curl to cope with https.
afe9bc8f Make minimum line thickness dependent on AA level.
ce55bef1 Avoid using unnamed semaphores.
81b2f10e muclean: Avoid warning when no Outlines present in document.
722dfa0e Improve header documentation.
858d56ff Fix JPX breakage caused during refactor.
ad13312f Add FZ_ERROR_OOM, and make fz_malloc & co call it.
44fff08d Refactor fz_image code cases.
88e9fd50 Tweak fz_image in preparation for things to come.
3dc16d54 Introduce tuning context.
b944f16a Partial image decode.
6ab23206 Mudraw: In low memory mode, flush the store after each page.
4355fda4 Tweak pdf-write option handling.
a1c86cfc murun: Add pdf.deleteObject().
9b4acc78 Add fz_close_device function.
ed763d50 Fix exception bug: rethrow without a caught exception!
d6813444 Remove useless try/catch/rethrows.
29d53a0a Fix 696649: remove fz_rethrow_message calls.
4d9c36cf Fix 696543: Don't launch search with empty string.
c9686452 Guard setting pkg-config variables with --exists.
18924b2f Don't return a void function.
6bf5a0ac Mudraw: Set AA level in context before cloning context.
4ecec105 Allow text/graphics aa levels to be controlled separately.
26f4d19a Improve fz_new_document
a2fc54fe MSVC: Fix MSVC builds.
a7c3d730 Add 'mutool run' documentation.
ccba5ca5 murun: Don't use 'mupdf' object; make constructors and functions global.
47fb8ab2 murun: Print result of evaluating a line in interactive mode.
a2f62569 murun: Support 'lineCap' to set start, end and dash caps together.
bd1609f3 murun: Automatically convert object argument to obj.writeObject().
f730023f murun: Add wmode and bidi-level arguments to text walker callback.
c304a128 Change order of arguments to pdf_add_page etc.
34bf8641 pdfcreate: Use industry font name for built-in fonts.
e9f53724 pdfmerge: Clean up error messages and fix try/catch variable error.
35d56cac Update CHANGES.
c9143d10 Optimize pdf_lookup_agl.
38d0278f Add 'mutool convert' and new document writer interface.
ebba90e5 fb2: Add image support.
63689cbb fb2: Add basic FictionBook support.
445bcc8f Add base64 string decoder.
f0d993da Rename fz_write_int32be to fz_write_int32_be to be consistent with fz_read_int32_be.
6c696437 epub: Support page-break-before/after: always, left and right.
b9353349 epub: Add matching for [att], [att=val] and [att~=val] css selectors.
1c7e4d15 svg: Add fz_new_display_list_from_svg function.
e6d0412c Fix refcounting on SVG documents.
d8ebcc7b svg: Add SVG parser.
1b16995f Fix fz_store thinko.
f4a365df Update mutool clean sanitize to clean annotations too.
4584bb1f pdf: Handle implicit identity crypt filters
f9f14484 pdf: Remember to drop objects inserted into dicts.
f88bfe2e thirdparty: Update to openjpeg 2.1.0.
b26c446d bmp: Support alpha for 16- and 32-bit uncompressed images.
df930534 gif: Render image into pixmap instead of temporary buffer.

git-subtree-dir: mupdf
git-subtree-split: 2adce98dac58fa8ec8a01f0a10d3d7cdc535223d",Unsure
77,https://github.com/simulationcraft/simc/commit/211820dceeae0ecc25a57e2f01e2a291a4d1577e,simulationcraft/simc,"[Druid] minor refactor automatic buffs effect parsing

* fix debug message being displayed for some unparsed effects
* allow conditional effects to apply to flat-add effects like crit%",Yes
78,https://github.com/wwwg/wasmdec/commit/579275ccde79a9e41e96d8fc72c945246d9f36da,wwwg/wasmdec,refactor tests script,Yes
79,https://github.com/cierelabs/boostache/commit/436ae31fcb4b68469a99e85001233194b3947f6a,cierelabs/boostache,Adding vector support to the model.  The printer needs a bit of cleanup and refactoring.,No
80,https://github.com/DiligentGraphics/DiligentTools/commit/7d7fb358bac4b62448a51be713691463284c36d7,DiligentGraphics/DiligentTools,GLTF Loader: refactored material textures loading,Yes
81,https://github.com/openai/triton/commit/539961072c277221e4e1dfda81e718daf9bbc1c7,openai/triton,"[FRONTEND] Semantic analysis refactor (#473)

Moved dispatch.cc to semantic.py
Integer signedness now moved from C++ to python
Cleaner frontend type

Co-authored-by: Phil Tillet <phil@openai.com>",Yes
82,https://github.com/OpenWaterAnalytics/epanet-rtx/commit/62b18200f033a21896957716132059d52386c2f1,OpenWaterAnalytics/epanet-rtx,refactors shareable macro properties,Yes
83,https://github.com/nomovok-opensource/wrath/commit/05e6e253d4e80ee844dc6b95675459851b7c8abd,nomovok-opensource/wrath,WRATHTextureFont header + WRATHShaderSpecifier refactored,Yes
84,https://github.com/doe300/VC4C/commit/37c3421eb612e6d96677944b6a6c8ae5d810cd27,doe300/VC4C,"Enhance general porpose optimization (#55)

* Add: enhance general porpose optimization (move, bitOp)

* Fix: fix `InstructionWalker::replace` and `optimizations::eliminateRedundantBitOp`

`InstructionWalker::replace` was wrong if forward is false.
`optimizations::eliminateRedundantBitOp` lacks for ""or"" cases.
And, it didn't care for flags, conditions, pack-mode, and unpack-mode.

* Fix: `optimizations::translateToMove` lacks care for condition and setFlags

* Fix: refactoring codes

* Doc: add documentation

* Fix: revert DEFAULT_PASSES

* Fix: surpress in dangerous case

* Add: construct generalOptimizations loop

* Fix: remove unnecessary functions

* Fix: fix the missing flag check

* Fix: simplify optimizatio pass

* Add: add a option to surpress moving of constant load to the outer-loop

* Fix: limit the number of repeatition

* Add: add options

* Fix: fix missing check side-effects",Unsure
85,https://github.com/DeepVAC/libdeepvac/commit/a15f5042f2a9a22c5d2ed1f5fc1eece09f6665b8,DeepVAC/libdeepvac,refactor service from has-a to is-a,Yes
86,https://github.com/alexhagiopol/cracking-the-coding-interview/commit/7c1afe6ecb1a0f72bafc2fda13d099e6df390d29,alexhagiopol/cracking-the-coding-interview,refactor tests,Yes
87,https://github.com/corosync/corosync/commit/6dee045326b6f7c695be53b40830161759b40b0f,corosync/corosync,"corosync-cfgtool: refactor cli parameters handling

use the idea from corosync-cmapctl to set ACTION and params in the first
swtich, and add another swtich to call function based on ACTION and the
params.

Signed-off-by: Bin Liu <bliu@suse.com>
Reviewed-by: Jan Friesse <jfriesse@redhat.com>",Yes
88,https://github.com/mattn/go-sqlite3/commit/32ab0d8730130a4e69e06861571a84bcba3c9955,mattn/go-sqlite3,refactoring,Yes
89,https://github.com/ellson/MOTHBALLED-graphviz/commit/391768f83a7529bf041454e670a10c918c976905,ellson/MOTHBALLED-graphviz,refactoring mapgen code for renderer plugins,Yes
90,https://github.com/leenjewel/openssl/commit/eca46daa606763f0b40abf9ae41bbe171fd27a6c,leenjewel/openssl,"Merge pull request #2 from davidshen84/master

Suggested refactor of android build script",Unsure
91,https://github.com/swiperproxy/swiperproxy/commit/7373bf560a34d1337a9bb9295eb21280f5aa7e92,swiperproxy/swiperproxy,"Bump year, some minor refactoring",Yes
92,https://github.com/stump/libsmf/commit/405e9a167bdcb4a0033eb635e494fbc80c2774c2,stump/libsmf,"refactor a little.


git-svn-id: https://libsmf.svn.sourceforge.net/svnroot/libsmf/trunk@21 bede6af4-a197-dd11-9785-00d0b7b2942b",Yes
93,https://github.com/ApolloAuto/apollo/commit/b8cd8a9c8c3aa6de116cfbddf6ecfbace16ee5ed,ApolloAuto/apollo,"planning refactor to prepare for change lane state machine (#1621)

* format a doxygen style in perception, serve as a template

* planning: relax change lane condition

* planning: move decider to reference line info",No
94,https://github.com/grpc/grpc/commit/d44b15a0c6f09024ce56d1609151c497cb607c09,grpc/grpc,"Merge pull request #6436 from jboeuf/credentials_refactoring

Refactoring the core security code.",Yes
95,https://github.com/lh3/fermi/commit/46fabba645a87b425e3c24bc082bb5b9fc39c4c7,lh3/fermi,refactor msg_print(),Yes
96,https://github.com/MediaArea/RAWcooked/commit/952eda50550a5a1ae2d83705ff39e2122e0f8447,MediaArea/RAWcooked,Fix wrong cast to 32-bit during refactoring,No
97,https://github.com/Mellanox/libvma/commit/1636a55720b8fba0121d67f9a30c621a04bf1d7d,Mellanox/libvma,"issue: 576219 enhance vma_list_t - refactor inconvinient members' names

Change-Id: I3ff6c935201d043fbdf46212b722366df2657f8e",Yes
98,https://github.com/philberty/gccpy/commit/8b1c301d2270a3742bee6311d843fdb00fadc041,philberty/gccpy,"gccgo: 	fixes to ast-dump, refactoring of export and ast-dump
        to implement a common interface for writing basic
        type literals and added flags for optimization.

	* lang.opt: Add fgo-optimize-.
	* go-lang.c (go_langhook_handle_option): Handle OPT_fgo_optimize.
	* go-c.h (go_enable_optimize): Declare.
	* Make-lang.in (GO_OBJS): Add go/go-optimize.o.
	(GO_EXPORT_H): Define.
	(GO_IMPORT_H): Add $(GO_EXPORT_H).
	(GO_AST_DUMP_H): Define.
	(go/ast-dump.o, go/statements.o): Use GO_AST_DUMP_H.
	(go/export.o, go/gogo.o, go/import.o): Use GO_EXPORT_H.
	(go/types.o): Likewise.
	(go/expressions.o): Use GO_AST_DUMP_H and GO_EXPORT_H.
	(go/go-optimize.o): New target.


git-svn-id: svn+ssh://gcc.gnu.org/svn/gcc/trunk@178046 138bc75d-0d04-0410-961f-82ee72b054a4",Unsure
99,https://github.com/moai/moai-dev/commit/93e52a7acd243562a85251603bb62c9ff55be2d7,moai/moai-dev,refactored MOAIInputMgr to prepare for implementation of internal input configurations,Yes
100,https://github.com/mkeeter/antimony/commit/8d9ec47a513621d3b4b95adb55a9628347f334fa,mkeeter/antimony,"Merge branch 'katydid'

Very large rewrite / refactor:
- Move graph view into a separate 2D view (rather than overlayed)
- Different window types for graph, 3D, and script editing
- Support arbitrarily many windows (e.g. quad view)
- Upgrade to Qt 5.4 and corresponding OpenGL fixes
- Switch to new-style signal-slot connections",Yes
101,https://github.com/Softmotions/iowow/commit/2263e2cd11a2f022809912a01768c82ced8d5aee,Softmotions/iowow,- iwfsm refactoring,Yes
102,https://github.com/resiprocate/resiprocate/commit/a855cdb2876dd5e5830ee496abf0dddb5c1d213a,resiprocate/resiprocate,"Some refactoring in preparation for threading work. Still need to change
how enableFlowTimer() is implemented to be threadsafe once transports are
in their own thread/s.


git-svn-id: https://svn.resiprocate.org/rep/resiprocate/branches/b-TKLC-perf_work@9208 ddefafc4-47db-0310-ae44-fa13212b10f2",Yes
103,https://github.com/andybarry/flight/commit/d18119a0761e28fdaa647ef05efcdd46ce0cde99,andybarry/flight,"Big refactor to move all of the recording and playback code into its on RecordingManager class.  Cleans up the code a lot, but not tested yet (it does compile)",Yes
104,https://github.com/ring00/bbl-ucore/commit/b212d5ea0ee0489649f7451b5acde1718f2dd2e7,ring00/bbl-ucore,lab4 code refactor,Unsure
105,https://github.com/wojdyr/fityk/commit/cd51f6a52b3747f0247b82b9c7ea15795f4b75f9,wojdyr/fityk,refactored classes UserInterface and Commands,Yes
106,https://github.com/cityflow-project/CityFlow/commit/9459e9f1f2f483852c032aa89a492654d8d804f2,cityflow-project/CityFlow,"refactor: remove boost, improve include and drop support in python2.7 (#56)

* refactor: remove boost and improve include

* refactor: remove boost in CI & drop support for Python 2.7

* refactor: update the docs",Yes
107,https://github.com/buxtronix/am43/commit/b3cacfc15c1607a51b402112f5b9300df0ebf0f7,buxtronix/am43,refactor to one mqtt client per device,Yes
108,https://github.com/SINGROUP/SOAPLite/commit/2087729e131a848bf1bf6436f845e21077b43211,SINGROUP/SOAPLite,"Polynomial branch works, but prefactor is missing and weights for the rbfs are numerically calculated.",No
109,https://github.com/smuellerDD/libkcapi/commit/45321e772b6cdeb141909bd0942026b5d080f50c,smuellerDD/libkcapi,"test: Allow running tests outside of build environment

This patch slightly refactors the test scripts so they can be installed
along with the binaries and ran on the installed system. The old way of
running test-invocation.sh in the build environment still works.

The test scripts are installed into %pkglibexecdir%, along with the test
binaries (so that the test scripts can easily find them). Note that the
test binaries are also still installed in %bindir% to not break the
backwards compatibility.

Distribuitons are recommended to put the test files into a separate
subpackage that can be installed for debugging/QA purposes.

Signed-off-by: Stephan Mueller <smueller@chronox.de>",Yes
110,https://github.com/josephg/librope/commit/344aa92ba916859f06c335f66437f3fb99989ddf,josephg/librope,"Big refactor. Rolled the head list node into the rope itself and added a rope iterator. Improved rope_check, removed lines and gained a 16% speedup",Yes
111,https://github.com/intel/libipt/commit/cda671e97ceb4f76bc7b59ca29f85b6e1d975da0,intel/libipt,"libipt, ild: refactor length check in sib_dec()

Check the length at the beginning and return on failure.  This is to prepare
for indicating errors in the return value.

Change-Id: I0cdc16983839e7129fc2d6a4013a177014efe715
Signed-off-by: Markus Metzger <markus.t.metzger@intel.com>",Unsure
112,https://github.com/microsoft/IPC/commit/86df124c5f2a0447d6ec56af7a506dc41bbf5546,microsoft/IPC,[examples] Minor refactoring (#38),Yes
113,https://github.com/hyrise/hyrise/commit/bc84ed4bfd28d4dac7ea3682c0e070ffbaa264a2,hyrise/hyrise,"Add optimizer rule to create IndexScans (#661)

* Commit to transfer to pella

* Make initial version work

* LQPTranslation

* LQPTranslatorTest

* Between

* Minor

* Format

* ScanType -> PredicateCondition in comments

* Rename scan_typee

* Some cleanup

* Some refactoring

* Add test

* Minor

* Lint + Format

* Address review issues

* Add IndexInfo type",Unsure
114,https://github.com/rrthomas/lrexlib/commit/676724f7b9ca9c3373e11cdb19f39ebae1b89840,rrthomas/lrexlib,refactoring,Yes
115,https://github.com/awthwathje/SteaScree/commit/da79aac749f26b710cfc8c3bcf31afddd372e9f2,awthwathje/SteaScree,"Fixed a bug when sometimes keys get repeatedly added to screenshots.vdf
during multiple add/remove cycles and if this VDF-file has been modified
externally. Removed ""FirstStart"" from saved preferences. Removed unused
signals and slots. General refactoring.",Yes
116,https://github.com/libretro/gambatte-libretro/commit/d21f4d5f9119ca07e8add343b548935df479ca10,libretro/gambatte-libretro,"- one more decimal position in refresh rate representation.
- use xrandr screen names
- hide empty full mode comboboxes
- windowed resolution -> window size
- lots of refactoring.


git-svn-id: https://gambatte.svn.sourceforge.net/svnroot/gambatte@247 9dfb2916-2d38-0410-aef4-c5fe6c9ffc24",Yes
117,https://github.com/kiedtl/huxdemp/commit/84daeaa034af32e9001caa3eb337f8f39f5afa9d,kiedtl/huxdemp,refactor: use enum variants instead of function pointers for deciding ordering,Yes
118,https://github.com/agra-uni-bremen/metaSMT/commit/71098615fb449a46b68d08815d02f633958a9547,agra-uni-bremen/metaSMT,"refactored smt2operator and OperatorMap utilizing a compile-time index lookup template
the indices are the positions of the tags in the AllTags vector and the string-names are taken from the SMT_NameMap",Unsure
119,https://github.com/Autonomous-Racing-PG/ar-tu-do/commit/e37b7a70786a418541e3fa5ce077a51720bef81d,Autonomous-Racing-PG/ar-tu-do,"Merge pull request #175 from Autonomous-Racing-PG/marian-dms-refactor

Refactor Dead Man's Switch to publish its state as a boolean",Yes
120,https://github.com/ecocurious2/MultiGeiger/commit/38b04a528be3d8cd0870b295d6ff5870c93a37c3,ecocurious2/MultiGeiger,"Merge pull request #261 from ThomasWaldmann/fix-clearline

fix/refactor clearDisplayLine",Yes
121,https://github.com/tensorflow/ngraph-bridge/commit/2929d1dc300272224c5a495fabe96cf22b8c7b40,tensorflow/ngraph-bridge,padding refactor (#96),Yes
122,https://github.com/pgbackrest/pgbackrest/commit/d89a67776cfbb7b3047dbe297cc0c768e5c670e8,pgbackrest/pgbackrest,"Refactor restoreManifestMap() tests in the command/restore unit.

Add test titles, new tests, and rearrange.

Also manifestTargetFindDefault(), which will soon be used by core code in a refactoring commit.",Yes
123,https://github.com/github/libprojfs/commit/4b45594f9e568f9d815ee149209ffac9d1c357ec,github/libprojfs,refactor to use common test error exit functions,Yes
124,https://github.com/eclipse-iceoryx/iceoryx/commit/d2077643407c93aa6b3bea020d305bde6bd7d79c,eclipse-iceoryx/iceoryx,"iox-#32 fixed semaphore tests for linux, refactored ctor tests and fixed timedwait

Signed-off-by: Christian Eltzschig <christian.eltzschig2@de.bosch.com>",Yes
125,https://github.com/vrubleg/soundkeeper/commit/323638c360bfafe2c7a7e31950e2e26d4eaa3bb5,vrubleg/soundkeeper,Small refactoring of the CKeepSession::Render().,Yes
126,https://github.com/vmcall/nt-mapper/commit/b1c09fcb2c16095fe7db7ca1b0ee445f051712eb,vmcall/nt-mapper,noexplicit and inline refactor,Yes
127,https://github.com/TheFoundryVisionmongers/KatanaUsdPlugins/commit/4a7e97c5629bb39e1efa86ab42de8073e7d7ff82,TheFoundryVisionmongers/KatanaUsdPlugins,"TP 439864 - refactoring installation locations for python modules to allow for re-use outside of UsdExport work

Summary: Refactored the install locations for python modules so we can re-use them in other areas of the code base.",Yes
128,https://github.com/novelrt/NovelRT/commit/17758b276b07ce31000a26154b66dd264c7a8b70,novelrt/NovelRT,"Merge pull request #284 from novelrt/misc/ecs-refactor

Updated ECS namespace to follow new header pattern.",Yes
129,https://github.com/kripken/BananaBread/commit/bf8db8d188c6c9902f5b6f82286b5ef585705929,kripken/BananaBread,refactor benchmark main loop interaction,Yes
130,https://github.com/vsrinivas/fuchsia/commit/139b4cd48ef6aa5512a5fe676ee7c57e27428077,vsrinivas/fuchsia,"[testrunner] Use sshutil.Client

testrunner now uses sshutil.Client and its methods rather than a raw
ssh.Client. This means testrunner no longer needs to use an SSHRunner,
since sshutil.Client encapsulates everything that SSHRunner provided on
top of a raw ssh.Client.

The equivalent change has already been made for botanist
(http://fxrev.dev/379818) so after this lands SSHRunner will no longer
be load-bearing and can be deleted, along with all the deprecated
sshutil utility functions that operate on raw ssh.Clients.

I intentionally kept the functional changes minimal (for example,
testrunner will still use the same backoff strategy for connecting and
reconnecting after losing the connection). So this change should
hopefully be pretty safe.

There were a couple of functional changes that I didn't think were worth
trying to avoid:

1. testrunner will now *always* disconnect and reconnect the SSH client
  after a test fails with a ConnectionError, whereas previously
  testrunner would send a ping to check the connection and only
  disconnect and reconnect if the ping failed. Maintaining this behavior
  would require some moderately invasive changes to sshutil.Client, and
  I'm not convinced that it's necessary; I suspect that ConnectionErrors
  only occur if the client is in an unrecoverable state where it needs
  to be disconnected and reconnected anyway. If I'm wrong it's also not
  the end of the world, since ConnectionErrors should be quite rare, so
  it shouldn't be too costly to do an occasional unnecessary disconnect
  and reconnect.
2. I had to change the way the DataSinkCopier handles disconnects and
  reconnects. Previously, a DataSinkCopier only lived as long as its
  corresponding ssh.Client, so testrunner had to create a new
  DataSinkCopier whenever it disconnected and reconnected. It's possible
  to mimic this behavior with sshutil.Client, but it would have required
  some refactoring of the testrunner and data_sinks tests. So instead, I
  added a Reconnect() method on DataSinkCopier that creates a new sftp
  client using the reconnected ssh client. testrunner now calls
  copier.Reconnect() after reconnecting the ssh client.

Bug: 48042
Change-Id: I3d642f4884ba44db77f5842b843a7df678fdaf58
Reviewed-on: https://fuchsia-review.googlesource.com/c/fuchsia/+/403557
Commit-Queue: Oliver Newman <olivernewman@google.com>
Reviewed-by: Ina Huh <ihuh@google.com>
Testability-Review: Ina Huh <ihuh@google.com>",Unsure
131,https://github.com/netoptimizer/network-testing/commit/13a6ecc88f5e922df5bea6a86b4c91259b453376,netoptimizer/network-testing,"udp_client_echo: refactor, splitup {send,recv,validate}_packet

Signed-off-by: Jesper Dangaard Brouer <brouer@redhat.com>",Yes
132,https://github.com/etaler/Etaler/commit/73ceac2355064838dfa438a90c4240ac34669b8c,etaler/Etaler,refactor SDRClassifer and add test for SDRClassifer,Yes
133,https://github.com/abhriyaroy/WallR2.0/commit/7b757029c458a035631ea20114c324a62c8a6f8e,abhriyaroy/WallR2.0,"Update  headings

Remove usage tips and refactor heading sizes",Unsure
134,https://github.com/eurecom-s3/symcc/commit/d8d13de313ae11c074c8648d836b43b05b0dda75,eurecom-s3/symcc,"Move the pass to the middle of the optimization pipeline

The change set looks big, but it really mostly consists of refactoring to make
the change possible:
- Instead of inserting the prototypes of run-time functions once when we start
  working on a module, insert them before processing each function (they may be
  optimized out in between).
- Move the pass to just before the vectorizer. Going further would require
  support for LLVM vector types.
- Fix a test where the improved optimization would remove a conditional.",Yes
135,https://github.com/secretlocation/azure-kinect-unreal/commit/f40187be5e59ec9e92e989c598d27f391ccefc28,secretlocation/azure-kinect-unreal,"- Added comments for the joint orientation mapping
- Some more refactoring, formatting, clean up",Yes
136,https://github.com/effolkronium/random/commit/a5f588143c7317095b84cc6cdf8b6744732be955,effolkronium/random,small refactor,Yes
137,https://github.com/H2CO3/Sparkling/commit/695fde2bcb01eb2a37beaa205e598e3218b477a9,H2CO3/Sparkling,refactor all the things 'cause I felt bad,No
138,https://github.com/gnif/LookingGlass/commit/cd4dfd725222355e380bd2ee5660e85b390a680d,gnif/LookingGlass,[client] egl: cleanup/refactor of cursor texture code,Yes
139,https://github.com/dylanaraps/eiwd/commit/bc17925f3a8ea20f47af7c843384cc369e71bbb3,dylanaraps/eiwd,"manpage: Fix section naming

The previous refactoring somehow changed the 'Settings' section name
into 'General'

Fixes: ac53239109fc (""doc: Split network configuration description into separate manpage"")",Unsure
140,https://github.com/CZ-NIC/knot/commit/1ee49daba115d636fb7ac2a9b29269cbc7c36da4,CZ-NIC/knot,"Merge branch 'master' into dname_refactor

Conflicts:
	src/knot/zone/zone-load.c
	src/tests/xfr_tests.c",Yes
141,https://github.com/sg-s/xolotl/commit/6fa845f8735dba98ffaeb0bd4789b55d81630a86,sg-s/xolotl,"Merge pull request #516 from sg-s/refactored-mexing

Refactored mexing",Yes
142,https://github.com/roberthawdon/dfshow/commit/fd00a1dbcde51146008bbacc643793b652ccf13b,roberthawdon/dfshow,"V0.9.0 to master (#125)

* Cut branch for 0.9

* Started adding acl/xaddr support

* Added definitions for acls

* (Not working) ACL work

* Initial working acl flag on MacOS

* Added xattr support for MacOS

* Swapped to ifdef

* Added ACL for Linux

* Added dummy -l flag for accidental `ls` muscle memory human (PEBKAC) related issues

* Testing SELinux checks

* Adding display test for SELinux acl

* Added flag for showing security context

* Adding context to struct

* Add Context Text to struct

* Actually copy the value to the variable

* Added libselinux

* Reworked automake linkers

* Handle -1 size

* Show stopping memory issues

* Fixed memory issue with attr field

* Starting work adding context to file output

* Added context header on -Z

* Added emacs files to ignore list

* Adding length of context and cleaning print entry

* Reverting printEntry change, adding contextlen

* Buffer overflow for perms

* Buffer overflow driver/size

* Buffer overflow driver/size - again

* Added context on -Z

* Fixed heading spacing for context

* Added missing padding on context larger than header

* starting work on segments

* Added segment pointers

* Added context segment

* Fixed padding on segments

* Made selinux optional

* Added extra memory for log10 calculations

* Context doesn't follow symlinks

* Switched attrs and hlink to segmemts

* Configured Travis to use SELinux as part of testing

* Sorting by name first before date and size

* This is to give the same results as ls if two files have the same
datestamp or size.

* Added handling if hard link count is less than 1

* Owner Segment implemented

* Date segment implemented

* Made marked a segment

* Fix hiding owner column

* Defined column names

* Add context to default conf file

* Fix issue where Driver header is shown when reading simlink to device.

Addresses #114 which happens when color mode is enabled.

* Added Mac theme

* New segment print system (buggy)

* Fix issue in new segment print system

* Updated mac theme

* Further fixes to new print segment routine

* Added default

* Fix driver/size display issue

* Removing entryMeta

* Preping for name segment

* Added Name Segment system

* Finishing name segment system

* Fix buffer overflow issue when displaying some directories

* Added TI theme inspired by NET-DFEDIT

* Started work on segmenting headers

* Completed working segmented headers

* Initalising header

* Updated copyright

* Allow reordering of segments

* Initialising memory in write segment routines

* Add one item per line option from ls

* Fixed segment size for name. Also cleaned up getseglength routine

* Made length of array dynamic

* Stopped --no-sf flag defaulting back to sf if no PAGER env is set

* Fixed header posiitoning if marked segment isn't shown

* Fixed size header justification

* Fixed header positioning when scrolling side ways

* Fixed over scrolling issue

* Making blank headers match data alignment

* Started working on skipping to first file

* Fixed skippable funtion to work on correct directory

* Added skip to first file option to config

* Fixed trailing slash issue.

Addresses issue #121

* Added skip to first file option argument

* Store xattrs in struct

* Freeing memory for xattrs

* Fixed memory issue with xattr storage

* Get size of xattr

* Corrected positioning of selected item

* Fixed issue where show segfaults if the directory it was launched in is
removed.

* Addresses issue #116

* Added skip-to-first option to default config file

* Further fixes to skip to first file

* Started work on the -@ flag

* More -@ work

* Further work on Xattr Mac support

* Fixed refresh issue, committing before possible refactor of display_dir

* Added entry line index struct

* Refactoring old functions

* Refactoring old functions further

* Fixed page down issue

* Displays xattrs

* XAttr segments and config settings

* Re-added support for GNU/HURD

* ACL work, reordered axFlag

* Disabling ACL view for now

* Set layout in config

* Fixed memory allocation issue with launch executable

* Made sys/xattr.h optional

* Removed xattr call when xattr not present

* Changed errorno output

* Added definitions for setting types

* Started work on moving files between devices

* Finished work moving files between devices

* Added find next on CTRL+F

Added feature for #119

* Fixed typo in help section

* Added initial autocomplete

For issue #108

* Completing autocomplete work for sf

Finishing #108

* Updated documentation

* Added SELinux support in documentation

* Reordered axFlag setting

* Fail config on missing acl library

* Reworked acl detection

* Further ACL work

* Fixed acl column not showing

* Fix incorrect disk space on some systems

Addresses #124

* Removing dev tag, prepairing for release",Unsure
143,https://github.com/ClusterM/famicom-dumper/commit/4e4ca3f1f4d976f90084e128209000bd87d036a0,ClusterM/famicom-dumper,COOLBOY refactoring,Yes
144,https://github.com/amslabtech/dwa/commit/b132392bb7d1cf6056b93e058fe1be3a817a4933,amslabtech/dwa,refactor,Unsure
145,https://github.com/facebook/squangle/commit/c90d51732f5847e661b361f5e3cff91f87699ccc,facebook/squangle,"Reformat and minor refactoring

Summary: Prior to updates to support MySQL 8.0.17, reformat and do some minor refactoring to make the code simpler to work with.

Reviewed By: yichenshen

Differential Revision: D20677104

fbshipit-source-id: 66fd84867111b82be9c73807a1c16caa4dbc2488",Yes
146,https://github.com/darrenjs/wampcc/commit/b201b96b445697e086d4753e7d41c57365373135,darrenjs/wampcc,minor refactor,Yes
147,https://github.com/LabSound/LabSound/commit/71d42886cd1fedbec3ef96ed8b0582c651006adc,LabSound/LabSound,[not compiling] heavy work-in-progress refactoring towards configurable audio devices,Yes
148,https://github.com/hunspell/hunspell/commit/609fa1bf2dbd82a25bb2c03bb7a993c02735f848,hunspell/hunspell,Some refactoring on string_utils.hxx,Yes
149,https://github.com/OndrejTexler/Neurally-Guided-Style-Transfer/commit/14b4103e372b2678a1b7c918da74b882461a9a41,OndrejTexler/Neurally-Guided-Style-Transfer,Code refactor,Yes
150,https://github.com/drons/nbody/commit/adcbe4cadb85935fde93ee5dc856868dc6150c20,drons/nbody,Merge branch 'engine' (engine&solver refactoring),Unsure
151,https://github.com/ShikOfTheRa/scarab-osd/commit/1e30f20bbbfb389c167b19f40db7532bbe3ba67e,ShikOfTheRa/scarab-osd,refactored font update,No
152,https://github.com/dvarrazzo/py-setproctitle/commit/7badb79d26601b32001da22c0d64e1c2f9683567,dvarrazzo/py-setproctitle,"refactor: convert the module to package, add typing info

Close #101",Yes
153,https://github.com/gheinrich/bibnumber/commit/bd406ad1a63e2bad2a3e9701961bc31e5668a7d1,gheinrich/bibnumber,"Code refactoring, moving various stages of processing into
different files",Yes
154,https://github.com/Ubpa/UDRefl/commit/6fe89726965c9fa820577801e9d7c7ff444fd3c0,Ubpa/UDRefl,refactor FieldPtr,Yes
155,https://github.com/ccdevnet/openc2e/commit/b51bc44ea43a935b00fd3db2a244eadafe567fd2,ccdevnet/openc2e,"incomplete refactoring of main.cpp/backend code, adding an unfinished event system and creating a new Engine class",Unsure
156,https://github.com/HandBrake/HandBrake/commit/84b4d057e2af8b185050b2e6c86160748d48d547,HandBrake/HandBrake,"MacGui: fix memory leak, more refactoring, bugfixes.



git-svn-id: svn://svn.handbrake.fr/HandBrake/trunk@5132 b64f7644-9d1e-0410-96f1-a4d463321fa5",Yes
157,https://github.com/jleb/pyaudio/commit/742b3b3781d1c88ebadfe94306678e29da704669,jleb/pyaudio,Non-blocking: refactor C callback error handling.,Yes
158,https://github.com/tekknolagi/carp/commit/fd5b6a2aeb89f8752f95d4ed2817b5c52a5daefa,tekknolagi/carp,refactor header files and include directives,Yes
159,https://github.com/altera-opensource/u-boot-socfpga/commit/57567361769bfa02d0622c06e5e9f66392e2593a,altera-opensource/u-boot-socfpga,"powerpc/8xxx: Remove dependency on <usb.h>

We used <usb.h> for USB_MAX_DEVICE.  However this requires we actual
build in support for USB into u-boot (which should not be required for
device tree fixup).

At this time no FSL SoC that utilizies this code (83xx/85xx) has more
than 2 USB controllers.  So we replace USB_MAX_DEVICE with a local
define FSL_MAX_NUM_USB_CTRLS.

If/when a device shows up with more than 2 controllers we can easily
bump this value or refactor into a proper define per SoC.

Signed-off-by: Kumar Gala <galak@kernel.crashing.org>",No
160,https://github.com/LK8000/LK8000/commit/d31e5cd5824876837b7164b22c6361ac862d280b,LK8000/LK8000,refactor Vario Bar Drawing : simpler & resolution free,Yes
161,https://github.com/spheredev/neosphere/commit/e242ee5e058fcf27245cb64bf5412f30676f8b5a,spheredev/neosphere,"Use build visor for all messages

This is just to test out the visor and make sure everything is working.
The codebase still needs a bit more refactoring before 4.4.0 can be
released.",No
162,https://github.com/sgallagher/sscg/commit/12632d46f63a1bb76e99768a9ebc00fd8187fd91,sgallagher/sscg,"Add support for writing CA private key

Also refactor the file-writing to be reusable.",Yes
163,https://github.com/Audio4Linux/JDSP4Linux/commit/82c2b6b27d7c116d0ec317ed9ae824ae7b76d0a2,Audio4Linux/JDSP4Linux,Merge branch 'refactor' of github.com:Audio4Linux/JDSP4Linux into refactor,No
164,https://github.com/oggy/looksee/commit/8706533843abf2b32d0d8ff5cbb613ed4f18f938,oggy/looksee,"Make looksee work on ruby 1.9.3 with falcon patch and ruby 2.0.0 (everything needs to be refactored, though)",No
165,https://github.com/ghostplant/web-openssh/commit/ac376b50f918bd7c1a2de813a78fd895bf1bb507,ghostplant/web-openssh,"Initial commit

first version of shellwithwsshd

update readme

update readme

fix utf-8 display

send user data inside tunnel instread of url parameters

fix a bug

update project name

change project name

change style

bug fixed: recv incompleted utf-8 chars

update doc

fix a bug: bg black color and white color from top

optimizing efficiency and prompt method

extend static file support

add http ssl notes

bug fixed: wrong indent

update git source

alpha version of websocket-ssh migrate based on python3

add automatical resizing request to pty when browser is resized.

fix showing utf-8 charactors

add beep sound support;
fix utf-8 encode crash;

add base http server daemon to get access to index.html

migrate completely to python3 and new comments added

update displayment of README.md

convert sound to html5 inner source code

hiding password input and parsing arguments from window href

fix setting ending of audio tag.

detecting connection error and send reason

security consideration -> put resources to an isolated directory

add ssl support for connection

update README.md about service port
drop support for python2 version

add dockerfile to build a single service

fix a bug in docker: put html into a single directory

update README.md

fix path parsing for HTTP GET method

async waiting tasks: huge file downloads

filtering via blacklist for better security

update README.md

automatically detect websocket port

add sftp get/put method

update README.md and button displayment on screen

add base64 encode to fix utf-8 text transfer

ui bug fixed on chrome browser

update security.lst

renaming project name

extend method field

fix leak: cancel worker resource after session close

replace port 8022 with 443

push unstable

dist update

update

dirty commit

refactor

update DOC

update source

collecting zoombie processes

keep collecting wnohang

update UI

replace window.websocket

use screen session by default

update

prevent self-process to be root process

update Dockerfile

add clipboard config

don't change title; autofocus clipboard.

update base64 encoder/decoder

add python2 compatibility

use agetty as default session manager

update beep sound

add LICENSE

new upgrade

new materials

new

image

add docker info

fix source locale",Unsure
166,https://github.com/johnlane/grub/commit/3bca85b4184f74995a7cc2791e432173fde26d34,johnlane/grub,"devmapper: check for valid device abstraction in get_grub_dev

This was lost when code was refactored. Patch restores previous behavior.

It is still not clear whether this is the right one. Due to the way we
detect DM abstraction, partitions on DM are skipped, we fall through to
generic detection which ends up in assuming parent device is BIOS disk.

It is useful to install GRUB on VM disk from the host. But it also means
that GRUB will mistakenly allow install on real system as well.

For now let's fix regression; future behavior needs to be discussed.

Closes: 45163",No
167,https://github.com/intel/vbh/commit/db084eaba1c81c6f3fc36b61707aee96d54bf015,intel/vbh,"Merge pull request #4 from rliu88/master

refactor guest_info.c to support query on remote cpu.  Also refactor …",Yes
168,https://github.com/multipath-tcp/mptcp/commit/23cd573b46c1f90645023ca2989bc041a0fcf38c,multipath-tcp/mptcp,"ceph: refactor readpage_nounlock() to make the logic clearer

If the return value of ceph_osdc_readpages() is not negative,
it is certainly greater than or equal to zero.

Remove the useless condition judgment and redundant braces.

Signed-off-by: Zhang Zhen <zhenzhang.zhang@huawei.com>
Reviewed-by: Yan, Zheng <zheng.z.yan@intel.com>",Yes
169,https://github.com/statismo/statismo/commit/ce65d4452b57a8a83dcffece0957249dab1d7bd7,statismo/statismo,"Introduced Posterior Model Builder, which replaces the PartiallyFixedModelBuilder.

We have refactored the PartiallyFixedModelBuilder such that the code closely corresponds to the theory and notation used in our Media paper ""Posterior Shape Models"". To make the connection more clear, we have saved it under the new name PosteriorModelBuilder. The PartiallyFixedModelBuilder is deprecated and will in future versions be removed.",Yes
170,https://github.com/siemens/jailhouse/commit/5c2c2445bec063443072559395127703c5222287,siemens/jailhouse,"TODO: Add item for config generator refactoring

Based on http://thread.gmane.org/gmane.linux.jailhouse/4893.

Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>",Unsure
171,https://github.com/jc-kynesim/rpi-ffmpeg/commit/00a63bfb87af6cf7bcdf85848830a90c7e052d41,jc-kynesim/rpi-ffmpeg,"matroskaenc: Fix stray pointers left over from av_reallocp_array refactoring

Signed-off-by: Diego Biurrun <diego@biurrun.de>",No
172,https://github.com/JoshuaSenouf/gl-engine/commit/fb4a62af3607a5a1817ee53bab54d2865b6ec849,JoshuaSenouf/gl-engine,"Major project refactor

- Classes are now using a ""source + header"" form factor instead of a header only, reworked and cleaned many things.
- While I had my doubts for some time now, it seems that declaring OpenGL objects inside a constructor is indeed a (very) bad thing to do. Now we have to call a function which will do the same things as before, and we don't need to send potentially useless data at the moment when creating an object using the constructor.
- Removed texture support from the Shape and the Model/Mesh classes, better use the upcoming material system.",Yes
173,https://github.com/cmcqueen/simplerandom/commit/17654c0e14d1fbce12c1a436367b98322d7865e6,cmcqueen/simplerandom,"Update Cython code to indicate language_level 3

Small refactor of BitColumnMatrix.__mul__() use of len(x).",Yes
174,https://github.com/docker-rpm-builder/docker-rpm-builder/commit/a9bdb26103d41df8a30f7ee832747d219a8045fc,docker-rpm-builder/docker-rpm-builder,Enh: preliminary work for OSX support. We need to refactor tests into python before we can call this done.,No
175,https://github.com/unicorn-engine/unicorn/commit/249e2ac0a03bdaa0db5f85e0abbc1c4529c0fc0d,unicorn-engine/unicorn,Merge branch 'hook-refactor' of https://github.com/lunixbochs/unicorn into lunixbochs-hook-refactor,Yes
176,https://github.com/STM32-SDR/STM32-SDR/commit/7cb3ab5a8a09712a847f1bd3d48533c0b9c13eb3,STM32-SDR/STM32-SDR,"Version 1.029-2Captured Experimentation and Merged with FFT_Widget
refactor",Yes
177,https://github.com/EBIvariation/vcf-validator/commit/0d53d5a9a5e13e403041aefc7dd9844815ea9707,EBIvariation/vcf-validator,refactor,Yes
178,https://github.com/nh13/DWGSIM/commit/aef7fcc8e17698d176519bc7917ad2018a026ebe,nh13/DWGSIM,* refactor to make options more easily accessible,Yes
179,https://github.com/ths-rwth/smtrat/commit/a2ce244420feaeed1caafb3be70f59145a74bdb7,ths-rwth/smtrat,"Removed log4cplus as a ginacra dependency for now, as well as some minor refactoring.",Yes
180,https://github.com/anko/hudkit/commit/85b667482d411cd8282b9d5660ff4ab04147f555,anko/hudkit,"Cleanup: comments, refactors, breaking long lines",Yes
181,https://github.com/BlackMATov/promise.hpp/commit/b6f5f36dc47999b3d11818b8132e9d63bae06e37,BlackMATov/promise.hpp,"C++17 refactoring, reference support",Yes
182,https://github.com/ps2homebrew/Open-PS2-Loader/commit/3f4eef0c858f69c1d7e67307bb14486a15581dfb,ps2homebrew/Open-PS2-Loader,iosupport: refactor 3 functions doing the same thing into one,Yes
183,https://github.com/tenzir/vast/commit/c3812ab7cc1f98bc91dcfcb179cd7adb13cd8182,tenzir/vast,"Include optional semantics into the value class.

Up to this point, a value could either be ""invalid"", ""nil"", or one of the
existing value types. These semantics have now been changed as follows: a value
is either invalid or typed. If it is typed, it can have two states, similar to
std::optional: when it is engaged, one can access the underlying type via
get<T>. A disengaged value has a type, but does not describe an accesible
value. In a sense, a disengaged value is a disengaged optional<T> with T being
the underlying value type.

This commit also removes sets and vectors from the list of containers. We do
not really need them and can express these constraints implicitly via STL
algorithms that operate on a std::vector<value>. Besides, the code needed
refactoring anyway.",Yes
184,https://github.com/mattn/mruby-require/commit/412dbbdd8c75bc34e5bb203bc3bf34978572cf76,mattn/mruby-require,"Merge pull request #42 from mattn/small-refactoring

small refactoring",Yes
185,https://github.com/Allexin/TrackYourTime/commit/acf691f309aa7eb4c4f3cd228e80691c992a6103,Allexin/TrackYourTime,"Add changelog
Small refactoring
Add external tracker for chrome
Add title parser tracker for Skype",No
186,https://github.com/tekknolagi/tekknolagi.github.com/commit/211729cd18495ce54b74efccfa28753fce94cf37,tekknolagi/tekknolagi.github.com,Small eval refactor for IC posts,Yes
187,https://github.com/openDsh/dash/commit/c83a6fb81c4af664f2057dd7a09358c989e77776,openDsh/dash,refactoring additional files; restructuring widgets,Yes
188,https://github.com/dmlc/experimental-lda/commit/0406f97f4a0d7447c77ffedf8efa7ba545726c33,dmlc/experimental-lda,Adding documentation and refactoring,Unsure
189,https://github.com/cuspaceflight/m3-avionics/commit/1bdbf55d44cc1c143d735ce0e005701d6ce74376,cuspaceflight/m3-avionics,refactor m3flash out of m3fc,Yes
190,https://github.com/malb/m4ri/commit/147f44b83cefa5f4c3e7c8f6e22804b4e818631d,malb/m4ri,refactored test_ple slightly + added explicit test which exposes a bug,Yes
191,https://github.com/dgcor/DGEngine/commit/1e92d9eaa11093f2c1a05d0598482cc8499aab04,dgcor/DGEngine,"- add action to set multiple variables
- add actions to set cursor position
- add eval to levelObject's getProperty for Players, Items, SimpleLevelObject
- add level.enableHover
- add new random number generator (with normal distribution)
- add prefix/suffix price classifiers to ItemClass
- add relativeCoords to drawable.setPosition action
- add spell level to spells
- fix saving empty inventory removing it from player
- fix trim functions
- Formula refactor to support dynamic formulas
- increase item properties size
- refactor item price
- rework useItem to use random in formulas instead of having value and ValueMax
- save player's selected spell
- update canUseObject to use formulas for items too
- update Formula class
- update gamefiles
- update gamefiles (cathedral map)
- update gamefiles (item prefix/suffic prices)
- update gamefiles (spell book UI)
- update gamefiles (spell UI)
- update GameUtils::replace* functions
- update loadJson to load from file and use parameters
- update Spells
- update TextUtils
- update variable.set* actions",No
192,https://github.com/meganetaaan/m5stack-avatar/commit/86e82ef3231eb972d4cb24d8678edf61d07a0ee1,meganetaaan/m5stack-avatar,"Merge pull request #24 from meganetaaan/dev-refactor

Dev refactor",Yes
193,https://github.com/cdev-tux/q3lite/commit/c0cca7a0a8a01d7f20fe980423f78432d5acaa0a,cdev-tux/q3lite,"- Fix potential out-of-bounds read in files.c, fix by using new FS_IsExt
- Add capability to load demos with com_protocol suffix, partially applied patches from Simon McVittie
- Fix demo loading if protocol number has more digits than 2
- Minor refactoring, replace all occurances of suffix ""dm_"" with global macro DEMOEXT",Yes
194,https://github.com/crossroadsfpga/pigasus/commit/1e517859a71273f6c61d792823ca10f85be499c9,crossroadsfpga/pigasus,"documentation clarifications

improved documentation for customizing Pigasus, refactored Fluid directory hierarchy description into its own file",Yes
195,https://github.com/KDAB/kuesa/commit/9687188c1bcffed37b6fa7f11eed43d7ca06c3be,KDAB/kuesa,"Add basic planar reflection support to ForwardRenderer

The rendering goes as follow:
1) Render scene reflected against a plane normal (straight to color buffer)
2) Clear Depth Buffer
3) Render scene from camera point of View

This required a slight refactoring of the way we handle rendering stages.
We now have the ReflectionStages which perform the reflected rendering
of the non frustum culled scene followed by the clearing of the depth
buffer. Next, we perform the SceneStages to render the scene from
the current point of view.

The reflection content is not clipped and no fall off is applied.
This will be improved upon in following patches.

Note: RHI doesn't allow to only clear the depth without also clearing
the color buffers. This might force us to render this step into a
texture and composite it later on in the scene.

Task-Id: KUE-1074
Change-Id: Ie01c8ef1b98362248fe26cb971bbfcf8a1c35dee
Reviewed-on: https://codereview.kdab.com/c/kuesa/kuesa/+/85189
Reviewed-by: Mike Krus <mike.krus@kdab.com>",No
196,https://github.com/alexgkendall/caffe-posenet/commit/f4727dcfee2658a59accbb0bf612dda60a6111db,alexgkendall/caffe-posenet,"Merge pull request #955 from kloudkl/data-layers

Further simplify the data layers and extend the MemoryDataLayer.

- design BaseDataLayer and BasePrefectingDataLayer for simplification
- refactor DataLayer, ImageDataLayer, and WindowDataLayer
- pull up `transform_param` into layer message for de-duplication
- add transformation to MemoryDataLayer",Yes
197,https://github.com/P2PSP/core/commit/628200127163a87eabcb0e95294fbf16a24d80ea,P2PSP/core,some refactoring and added strpeds logging and script,Yes
198,https://github.com/landley/toybox/commit/7aa651a6a4496d848f86de9b1e6b3a003256a01f,landley/toybox,"Reindent to two spaces per level. Remove vi: directives that haven't worked right in years (ubuntu broke its' vim implementation). Remove trailing spaces. Add/remove blank lines. Re-wordwrap in places. Update documentation with new coding style.

The actual code should be the same afterward, this is just cosmetic refactoring.",Yes
199,https://github.com/ajg/synth/commit/5b3d957cc1a6d295231d9ef95712f2c477a1e75a,ajg/synth,Major refactor of detail,Unsure
200,https://github.com/OpenVPN/openvpn/commit/4ada4a7d8b3db7ae9722624d745c220fef4c77fd,OpenVPN/openvpn,"mbedtls: don't print unsupported ciphers in insecure cipher list

Commit 447997dd refactored the --show-ciphers code, but introduced a bug
in mbedtls builds where non-AEAD/CBC cipher were printed too.  Those are
however unsupported (as openvpn will tell you when you try to use them).

This fixes that bug.

Signed-off-by: Steffan Karger <steffan.karger@fox-it.com>
Acked-by: Gert Doering <gert@greenie.muc.de>
Message-Id: <1539242400-27614-1-git-send-email-steffan.karger@fox-it.com>
URL: https://sourceforge.net/p/openvpn/mailman/message/36438012/
Signed-off-by: Gert Doering <gert@greenie.muc.de>",Unsure
201,https://github.com/benquach16/bgfx-PlanetShader/commit/b0d7b62688b42e2afdbd557ec53d15d963ab30d1,benquach16/bgfx-PlanetShader,refactor mesh code,Yes
202,https://github.com/i-rinat/fragview/commit/f65229d854c43a9cac3a3d133c5490b08bea5ecf,i-rinat/fragview,"refactored __fill_clusters a bit

chaged variable names so hopefully I'll be able understand them month
later.",Yes
203,https://github.com/XLabsProject/iw6x-client/commit/687afee5309845d4a58f8c6b7be9a5ecb6761687,XLabsProject/iw6x-client,More demonware refactoring,Yes
204,https://github.com/DQLin/RealTimeStochasticLightcuts/commit/25eb4ad53db368ab9e24f1bee505486f2481d4a3,DQLin/RealTimeStochasticLightcuts,"Add gitignore file, some refactors and bug fixes",Yes
205,https://github.com/muttleyxd/arma3-unix-launcher/commit/d28f011d1f2555fb91fccde8e299608ed5ca8043,muttleyxd/arma3-unix-launcher,"library: steam_utils: refactor GetCompatibilityToolForAppId and GetInstallPaths

GetCompatibilityToolForAppId - now tools from compatibilitytools.d
are searched first, which should yield better success rate

GetInstallPaths - libraryfolders.vdf is used instead of config.vdf",Yes
206,https://github.com/Enlightenment/efl/commit/bd818f7eca3c21f0d58adc81b499d37a4c937f86,Enlightenment/efl,"Evas render: Remove useless code

While invesigating some clip & map issues, I found some very
strange piece of code:
{
  tmp = a;
  a = c;
  a = tmp;
}

This actually comes from a very old code refactoring where a
line in-between was removed:

   tobj = obj->cur.map_parent;
   obj->cur.map_parent = obj->cur.clipper->cur.map_parent;
 - evas_object_clip_recalc(obj);
   obj->cur.map_parent = tobj;

Adding this line back there doesn't seem to do anything anyways.
So, let's just remove useless code.

For the record (legacy evas):
  commit e1f6f3c5f239dfd95a307949acd5f98831c0c3c0
  Date:   Fri Aug 17 06:16:04 2012 +0000
  evas/render - code refactoring.
  SVN revision: 75351",Yes
207,https://github.com/jdupuy/opengl-framework/commit/894316a5d1a67dcdc806314c314917e843c48a5c,jdupuy/opengl-framework,minor refactor for mesh shader support,Yes
208,https://github.com/ElDewrito/ElDorito/commit/8a9aa20c9a726b327ea8dc93522ffab3f3266ed9,ElDewrito/ElDorito,"add auto announcing/unannouncing to master server when game server is started/stopped
also refactor HttpRequest class a little bit, still need to test to make sure it didn't break communicating with info servers",No
209,https://github.com/letmaik/pyvirtualcam/commit/b8bb625e3912800acb682c23f29ab5d002d43401,letmaik/pyvirtualcam,"Improved backend mechanism, multi-camera support for v4l2loopback, refactoring and cleanup (#37)",Yes
210,https://github.com/BigEvilCorporation/Beehive/commit/ab325d911df0bd37a13cbdad875f7e83c97c0892,BigEvilCorporation/Beehive,MDStudio: OpenGL rendering refactor - picking working,Yes
211,https://github.com/agordon/datamash/commit/758994d9ddb11154a07b90185e01867dffdc5824,agordon/datamash,src/field-ops.c: refactor free() code.,Yes
212,https://github.com/leanstore/leanstore/commit/7db080b2ec86b217016379eda3646001e7b85940,leanstore/leanstore,* code refactor,Yes
213,https://github.com/daos-stack/daos/commit/af860160212288e985fff258b169309beff1b5b7,daos-stack/daos,"CORCI-918 build: Refactor Jenkinsfile (#2640)

This is a major refactoring of the Jenkinsfile to reduce the size
of the code and hopefully make it easier to maintain.

This commit mostly moving inline scripts into the DAOS repository.

Signed-off-by: John E Malmberg <john.e.malmberg@intel.com>",Yes
214,https://github.com/uglide/RedisDesktopManager/commit/06fe5bc31e1742f3bbbcec18542d434b604c5c8c,uglide/RedisDesktopManager,Merge branch '0.7.7' into connections-tree-refactoring,Unsure
215,https://github.com/maxim2266/FFP/commit/cfccc6f450009f3e2ecb9149eab53564cad90165,maxim2266/FFP,Test code refactoring,No
216,https://github.com/facebookresearch/habitat-sim/commit/f10579b0187f934cf6a144a0944b3a04b769c9dd,facebookresearch/habitat-sim,"[esp/bindings] fix a bunch of pybind11 doc reference issues (#456)

This does not fix all pybind11 doc errors. There are still a few
unresolved due to cross-references between some namespaces.

The cross-references can be avoided and I think the architecture
will benefit as a result. I hope to address this as part of the
sensor refactor.

Remaining errors:

WARNING:root:cannot parse pybind11 function signature bind_render_target(self: habitat_sim._ext.habitat_sim_bindings.Renderer, arg0: esp::sensor::VisualSensor) -> None
WARNING:root:cannot parse pybind11 function signature draw(self: habitat_sim._ext.habitat_sim_bindings.Renderer, visualSensor: esp::sensor::VisualSensor, scene: habitat_sim._ext.habitat_sim_bindings.SceneGraph) -> None
WARNING:root:cannot parse pybind11 function signature get_default_render_camera(self: habitat_sim._ext.habitat_sim_bindings.SceneGraph) -> esp::gfx::RenderCamera
WARNING:root:cannot parse pybind11 function signature set_default_render_camera_parameters(self: habitat_sim._ext.habitat_sim_bindings.SceneGraph, targetSceneNode: esp::sensor::VisualSensor) -> None
WARNING:root:cannot parse pybind11 function signature get_observation(self: habitat_sim._ext.habitat_sim_bindings.Sensor, arg0: esp::sim::Simulator, arg1: habitat_sim._ext.habitat_sim_bindings.Observation) -> bool
WARNING:root:cannot parse pybind11 function signature get_observation(self: habitat_sim._ext.habitat_sim_bindings.Sensor, arg0: esp::sim::Simulator, arg1: habitat_sim._ext.habitat_sim_bindings.Observation) -> bool
WARNING:root:cannot parse pybind11 function signature get_observation(self: habitat_sim._ext.habitat_sim_bindings.Sensor, arg0: esp::sim::Simulator, arg1: habitat_sim._ext.habitat_sim_bindings.Observation) -> bool",Unsure
217,https://github.com/ktoonsez/KT-SGS4/commit/e04f428573b3930b9651e55f289a1a925c9326c0,ktoonsez/KT-SGS4,"drivers: dma-contiguous: refactor dma_alloc_from_contiguous()

The dma_alloc_from_contiguous() function returns either a valid pointer
to a page structure or NULL, the error code set when pageno >= cma->count
is not used at all and can be safely removed.

This commit also changes the function to avoid goto and have only one exit
path and one place where mutex is unlocked.

Change-Id: I6de94bd6fbe2288382ca9b5e5a1f691aabe0bae5
Signed-off-by: Michal Nazarewicz <mina86@mina86.com>
[fixed compilation break caused by missing semicolon]
Signed-off-by: Marek Szyprowski <m.szyprowski@samsung.com>
Signed-off-by: Laura Abbott <lauraa@codeaurora.org>",Yes
218,https://github.com/leios/simuleios/commit/bcd5da5553db6a4ef9f94126e54cef9050810718,leios/simuleios,"fixed sorting and did some refactoring

replaced range based for with iterating version
moved variable declaration down
fixed sorting
replaced std::endl with '\n'
used continue to skip loops
skipping a bit earlier
replaced tabs with 4 spaces",Yes
219,https://github.com/X-CASH-official/xcash-dpops/commit/e8b79374c90a031a2ac867d5ca72e2f94efcdf2e,X-CASH-official/xcash-dpops,"refactor: Optimized receive_data

Optimized receive_data.",Yes
220,https://github.com/AlanFord/self-balancing-stick/commit/8dc8ad58c659eff8c15e2572515f17a7853f9c4d,AlanFord/self-balancing-stick,refactor for clarity and add more comments,Yes
221,https://github.com/Mellanox/libvma/commit/1636a55720b8fba0121d67f9a30c621a04bf1d7d,Mellanox/libvma,"issue: 576219 enhance vma_list_t - refactor inconvinient members' names

Change-Id: I3ff6c935201d043fbdf46212b722366df2657f8e",Yes
222,https://github.com/bbenchoff/Dumb-Badge/commit/67ed3f150a324ee133130ac15707b7c3c48ca980,bbenchoff/Dumb-Badge,start refactor on initLCD,Unsure
223,https://github.com/Clover-EFI-Bootloader/clover/commit/350fa618000abfe8085d679c711497f0022f3bae,Clover-EFI-Bootloader/clover,"BootArgs refactoring

git-svn-id: svn+ssh://svn.code.sf.net/p/cloverefiboot/code@2579 52d7a1c0-eba5-4e63-a9d7-e3186cd7c462",Yes
224,https://github.com/OpenZWave/ozw-admin/commit/a688cda5b64a0e28dbf62da1fcf9990fbed31ec8,OpenZWave/ozw-admin,"more work on the QT wrapper - Basic Node Info is done, and Remote GUI's working thanks to the QTRemoteObjects support. - we will eventually split out the qt-openzwave to a separate library... and this will eventually become the ozwcp replacement. Lots of refactoring going on right now",Yes
225,https://github.com/wanji/caffe-sl/commit/653aa25c262080e1b8a6fdf30e9d0dc4b1cfa6f9,wanji/caffe-sl,refactor Net::Init to call helpers AppendBottom and AppendTop,Yes
226,https://github.com/temisu/ancient/commit/4687986324475ebeba51ee80dc89af7fcf458803,temisu/ancient,"Major refactoring on stream reading to unify it across all decompressors. Also adding few more decompressors that are ready: Reduce, Shrink, Implode, LH1, LH2",Yes
227,https://github.com/horosproject/horos/commit/c72f1154f45796f0903a30e799b56334c7755b5e,horosproject/horos,"one more bug created by the fast enumeration refactoring

git-svn-id: https://svn.code.sf.net/p/osirix/code/osirix@3109 4e9e6e3d-4551-47eb-9dbe-a6127f9400a1",No
228,https://github.com/steinbergmedia/vstgui/commit/34873831f3097280416bb475b1e204acfa60e7ae,steinbergmedia/vstgui,refactor file selector to use new IPlatformFileSelector,Yes
229,https://github.com/vpetrigo/caches/commit/7de1efb30e55acb55b64f41c4233811526fba83e,vpetrigo/caches,"Remove separate caches implementation and add policies instead (#1)

* start refactoring

* switch to the C++14 standard

* Set up the interface for further caches policies

* implement FIFO cache policy

* clean up (remove dummy 'virtual')

* fix lack of virtual dtor in the base interface

* implement fixed_size_cache logic

* clean up

* change fifo tests for using new cache

* implement LRU cache policy

* template for no cache policy

* change default policy to NoCachePolicy

* clean up FIFO Policy

* add NoCachePolicy

* Implement LRU Cache policy

* add tests for LFU policy

* clean up

* remove old files",Yes
230,https://github.com/CMU-SAFARI/prim-benchmarks/commit/bab6c1ba39b7a00eccf3ecdcc7bd4560d2581d18,CMU-SAFARI/prim-benchmarks,"bs_refactor: Remove printf for logging

Signed-off-by: Yun-Ze Li <p76091292@gs.ncku.edu.tw>",Yes
231,https://github.com/vrpn/vrpn/commit/67b5a7895c8eaa264c0bb3d4096d83bd52e37901,vrpn/vrpn,"port liberty to new buffer utils

There is a lot of common code here with fastrak - would be good to refactor it out.",Yes
232,https://github.com/itisyang/playerdemo/commit/0cf8a2397c9085624a8cbfe16d6e0f7fb54c948f,itisyang/playerdemo,refactor: SettingWid,Yes
233,https://github.com/lvandeve/lodepng/commit/21bf7406cea85845da8686de9101ce3aa1013e02,lvandeve/lodepng,refactorings,Yes
234,https://github.com/facebook/yoga/commit/7eb8df2777477b6385777bb136f9a5045f17b71b,facebook/yoga,"Fix screenshot test due main axis justification refactor

Summary: There was a slight error in main axis justification which caused the regression

Reviewed By: emilsjolander

Differential Revision: D6923178

fbshipit-source-id: d8f81b06d9127c75daecffb73b5e6c5abbad8ade",No
235,https://github.com/FEniCS/dolfinx/commit/72c8dcde777c0629901a0d54b7cb803929b028cb,FEniCS/dolfinx,"Implement Gibbs-Poole-Stockmeyer graph re-ordering (#1804)

* Preliminary implementation of GPS algorithm

* Update and comments

* Algorithm fixes, and plug in to mesh and dofmap

* Add reference, remove some debug etc

* Use AdjacencyList and add some timers

* Use int8 instead of bool in a few places

* Deal with disconnected graphs

* Add tweak to algorithm, case where h0==l0

* Remove references to scotch

* Fix a few typos and shorten side selection for residual graph

* Use range iterator for ls

* Minor refactoring

* Re-name file

* Add header

* Update header name

* Simplifications

* CMakeLists.txt fix

* Minor edits

Co-authored-by: Garth N. Wells <gnw20@cam.ac.uk>",Unsure
236,https://github.com/jvm-profiling-tools/async-profiler/commit/78c501bceef31fc09d8f868908cf012c062ed5c4,jvm-profiling-tools/async-profiler,[refactoring] Named palette,Yes
237,https://github.com/serge-sans-paille/pythran/commit/e6438319840eee06ad47fd2cc772698eb372a713,serge-sans-paille/pythran,"Update Pythran interface

* ToolChain is fully stateless, then it has only static methods.
* ToolChain offers multiple entry points: compile a pythran code as
  a string, compile a cpp file, etc.
* Update the unittest according to the new interface
* Introduce a TestFromDir(TestEnv) class for the different test
  suites that are based on individual directory. More consistent
  behavior through code refactoring.
* Raise ToolChain.Compile error instead of CalledProcessError
* Exclude current directory from import when launching unit tests
  using setup.py",Unsure
238,https://github.com/syoyo/tinyexr/commit/0bc96c9ee2efcd9a6fa0308d52dc1da5ec13a6fc,syoyo/tinyexr,"Added: saving tiled images (single/multi-resolution, single/multi-part); some tests and refactoring..",Unsure
239,https://github.com/trevorcampbell/dynamic-means/commit/c6171839f9d2034b215c8c3506e34410a1c9179b,trevorcampbell/dynamic-means,"did some small refactoring, nothing major yet",Yes
240,https://github.com/mate-desktop/marco/commit/6f33395c69550e1fad6aa49d52e1284ca89f88c1,mate-desktop/marco,"Only shadow ARGB windows with a frame outside the frame

An ARGB window with a frame is likely something like a transparent
terminal. It looks awful (and breaks transparency) to draw a big
opaque black shadow under the window, so clip out the region under
the terminal from the shadow we draw.

Add meta_window_get_frame_bounds() to get a cairo region for the
outer bounds of the frame of a window, and modify the frame handling
code to notice changes to the frame shape and discard a cached
region. meta_frames_apply_shapes() is refactored so we can extract
meta_frames_get_frame_bounds() from it.

https://bugzilla.gnome.org/show_bug.cgi?id=635268

NOTE: Applied only partially, compositor part is still missing...

upstream commit:
https://gitlab.gnome.org/GNOME/metacity/commit/0f2e32d1",Yes
241,https://github.com/Mictronics/readsb/commit/e243a2bf1a9068b4237fd9f60f8774e11c30abf6,Mictronics/readsb,Clean up and refactor unit conversion logic,Yes
242,https://github.com/contiki-ng/contiki-ng/commit/30bb899f7c19d630a5cd5c2638c633830d8b02d9,contiki-ng/contiki-ng,"Merge pull request #32 from simonduq/pr/refactor_tcpip

Refactor tcpip",Yes
243,https://github.com/Noahdw/Strauss/commit/c50941d1b6a880772b46fe72f3a8c54143048872,Noahdw/Strauss,UI overhaul and major track refactoring,Yes
244,https://github.com/immortalwrt/padavan/commit/efc917e88141bfd93e0d3298968092c1bf87f9fb,immortalwrt/padavan,"mtd_write: add support write to NAND flash and UBI partition, code refactoring",Yes
245,https://github.com/khanzf/opengit/commit/5f84ed2b77df503f46068863dd54f367c84cff67,khanzf/opengit,"git-index-pack: Generates crc32 values for idx files
This required manually adding a crc32 value for the zlib decompression
GNU git stores this value in a file-scope variable. Given that a single
value is semi-arbitrarily updated, that may be the best approach and
require a light refactoring. The downside is that it requires multiple
zlib deflation blocks because the crc32 value is not always updated.",No
246,https://github.com/BLumia/pineapple-pictures/commit/c9dadcbcad9f293f28b04e81c39a67bc5423550b,BLumia/pineapple-pictures,refactor: use QMetaEnum,Yes
247,https://github.com/y-a-v-a/node-gd/commit/0feb1b66be1faa916836b80448ddfc45bb09ed44,y-a-v-a/node-gd,"refactor workers, add more promises, simplify api, update docs",Yes
248,https://github.com/xmfbit/warpctc-caffe/commit/9767b99fa7351914715c81c985a0e3422fa0a30d,xmfbit/warpctc-caffe,"Merge pull request #1615 from longjon/deconv-layer

Add deconvolution layer with refactoring of convolution layer to share code",Yes
249,https://github.com/Francesco149/oppai/commit/e44eeabc9420aeda2cae816f4179fdecb777ca3d,Francesco149/oppai,lib mode draft + misc bugfix and refactor,Yes
250,https://github.com/cpputest/cpputest/commit/a5d1488f8acb2597008f4849d9a5d80d278dea70,cpputest/cpputest,SimpleString Binary and MemCmp tests refactored,Yes
251,https://github.com/RVillani/UE4Duino/commit/5f5152110bf9473c5054afb6f130225421595aec,RVillani/UE4Duino,"Fix shameful bug that prevented port from opening because when I refactored the code to 4.20, I deleted the port number from the string that requests the port to Windows. Thanks yuanny on the forums for pointing that out!",No
252,https://github.com/otland/forgottenserver/commit/e9046abf11e818ff3140a480094c4e80196fb878,otland/forgottenserver,"Fileloader refactor (#1984)

The map loading function will now use the new simplified loader.
It has also been split into multiple functions to make it easier to
read. Use mmap to load the OTB file. This improves load time slightly
by mmaping the loaded map file into memory to reduce unnecessary
copying. Moved OTB loader related code to the OTB namespace which makes
it clearer that the OTB submodule is mostly indepenent from the rest of
the application.

Signed-off-by: Damian Jarek <damian.jarek93@gmail.com>",Yes
253,https://github.com/krakjoe/sandbox/commit/c6d970f5d052d6748d2f47f9bea8df2fdc0b9c3b,krakjoe/sandbox,refactor,Yes
254,https://github.com/nintymiles/CGLearning/commit/4c120ac69d7f303b136b21a70da8d03ad60cdf41,nintymiles/CGLearning,refactor assignment2 project file structure and create ex.31-33,Yes
255,https://github.com/gammu/python-gammu/commit/6a8604dcb9ab8aacd7f72f535ca74d7f915131a0,gammu/python-gammu,Fix typos in ReadPhoneBook refactoring,Yes
256,https://github.com/tbeu/matio/commit/7a1831b94a73f2cd665bd48f65c8516509d0740e,tbeu/matio,"Check read success and refactor inflate.c

As reported by https://sourceforge.net/p/matio/discussion/609376/thread/75fd85fa8b/ and https://github.com/tbeu/matio/issues/120",Yes
257,https://github.com/siemens/fluffi/commit/8495894a40d8dbc9d04394ec9bd61d921c79be80,siemens/fluffi,fix(web): improve pagination and refactoring,Yes
258,https://github.com/mitsuba-renderer/nanogui/commit/2d195a80cbb972cee715df7dcdbb1aebed3c6e19,mitsuba-renderer/nanogui,"Build system refactoring (contributed by Daniele Panozzo)

- The build system now relies on add_subdirectory() instead of
  ExternalProject_Add(), which enables simultaneous debug and release
  builds on Visual Studio

- Added a few other tweaks: shared library builds, removed ugly
  include guards throughout the project",Unsure
259,https://github.com/cyberegoorg/cetech/commit/086d1a80daddf00ef35f6bae6e8284a324537445,cyberegoorg/cetech,ENGINE-219 - Big refactor - cleanup versions,Yes
260,https://github.com/yshui/deai/commit/154d74c3a023918a208cbbd8fa0614557ba388c2,yshui/deai,"utils: refactor integer conversion

Signed-off-by: Yuxuan Shui <yshuiv7@gmail.com>",Yes
261,https://github.com/mattgodbolt/xania/commit/27e78fe4bd4e66a641ea8727e31313fc5d2687eb,mattgodbolt/xania,"Part 2b of refactoring fight.cpp dam_message()...
Move send_dam_messages() into an anon namespace and pass messages by reference.
Add tests to check damage amounts appear in damage messages for L20+ chars.",Yes
262,https://github.com/path64/debugger/commit/c54e2a80eab7ba461c50dd549669f7945e0aa35b,path64/debugger,Work-in-progress refactoring of the target stuff.,Unsure
263,https://github.com/rhdodds/warp3d/commit/1fce604ff160f4b1d270b663ef40c99ac8b3d537,rhdodds/warp3d,add SMCS Type 5 (Sandia/Wellman) tearing factor + some refactoring,Unsure
264,https://github.com/fsaadatmand/Cpp-Primer/commit/40b6a64ed85ac2fc98d39c70ce688f1704355ef4,fsaadatmand/Cpp-Primer,refactor code,Yes
265,https://github.com/pbatard/winpatch/commit/721acd8ed082d88ccc64a56e1064e7e7b2d02a19,pbatard/winpatch,"Beautify output and refactor

* Also add -s (silent) and -v (options)",Yes
266,https://github.com/MediaArea/RAWcooked/commit/952eda50550a5a1ae2d83705ff39e2122e0f8447,MediaArea/RAWcooked,Fix wrong cast to 32-bit during refactoring,No
267,https://github.com/jackyf/cupt/commit/592afa5904f5628dc7b0ac641e1960c8c6399fa3,jackyf/cupt,lib: internal: nativeresolver: solution: Solution: prepare: refactoring: less lines for 'already prepared?' check,No
268,https://github.com/lttng/lttng-ust/commit/a4e2c093247d929471eae2f16fa7c4e799eedfe3,lttng/lttng-ust,"fix: use configured python when building the examples

Prior to the refactoring of the autotools setup we used different python
detection mechanisms for the python agent feature and the example code.
The example code detection was flawed as it would only work with a
python binary named exactly 'python'. Wire the detected python binary in
the examples Makefile integration.

Change-Id: I07b9222a8869ff154073e5b72fb2ac0d70f14896
Signed-off-by: Michael Jeanson <mjeanson@efficios.com>
Signed-off-by: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>",No
269,https://github.com/NVIDIA-Merlin/HugeCTR/commit/8e940780192d377a6d57035a5d1ba077387d16f3,NVIDIA-Merlin/HugeCTR,"Merge branch 'refactor-auc-p2p-minseokl' into 'v2.2-integration'

Move P2P enabling logic to gpu_resource with its refactoring

See merge request zehuanw/hugectr!134",Yes
270,https://github.com/unbit/foohid/commit/028531f8a6ed9cd7778872260f769c3ee91e523a,unbit/foohid,"Huge code fixes/refactoring

This commit refactors and reworks most of the `foohid` code:

* Fixes a few memory leaks happening in case of bad memory allocation,
(specifically inside the `foohid/foohid_userclient.cpp` file).
* It provides a better logging format.
* It allows creating virtual keyboard devices.
* It fixes an error that was not allowing to notify the caller
    in case of bad report descriptors

Please note that this is also not backward-compatible.
The CREATE, DESTROY and SEND user client methods do not require any
output buffer now, because the result of the operation is directly
returned to the caller.

Sorry for the non-atomic commit :)",Yes
271,https://github.com/MathWebSearch/mws/commit/0dbe9b02f00ddc4de5b014120cb81b30e00918e4,MathWebSearch/mws,Minor refactoring.,Yes
272,https://github.com/cdemu/cdemu/commit/6a9c656133a6eb7cfcff09d6caf1f1bfc480de45,cdemu/cdemu,Client: big rewrite: moved from getopt to argparse; refactored code to use callable command objects (each implementing its command-line subparser) instead of using one central object; moved from C-style error reporting via boolean return values to exception-based one,Yes
273,https://github.com/blender/blender/commit/b99798832300b40bcae87725d7e35321966e394c,blender/blender,"Cleanup/refactor: Add new BLI_string_util.

Things like `BLI_uniquename` had nothing, but really nothing to do in
BLI_path_util files!

Also, got rid of length limitation in `BLI_uniquename_cb`, we can use
alloca here to avoid overhead of malloc while keeping free size (within
reasonable limits of course).",Yes
274,https://github.com/fastvideo/gpu-camera-sample/commit/c2ba2e55092ecd07c78d0ff9ccc29da2659e4050,fastvideo/gpu-camera-sample,"added nvidia cuvid decoder
refactor RTSPServer",No
275,https://github.com/greenplum-db/gporca/commit/f520f6134b05dd9ee99691b90e48be83bab409b6,greenplum-db/gporca,"Refactor III - Make SubqueryHandler methods non-static

This simplifies the existing code by eliminating the need of passing
subquery handler around.

Also a minor refactor has been added in
CXformSubqueryUnnest::PexprSubqueryUnnest() to remove unnecessary checks
around the context.

Signed-off-by: Dhanashree Kashid <dkashid@pivotal.io>",Yes
276,https://github.com/GTAmodding/VCSPC/commit/64aa4a6d9a4dad93f976c8c9e0317ca9355fac83,GTAmodding/VCSPC,Extra readability refactors,Yes
277,https://github.com/godmodelabs/ejecta-v8/commit/51ca140937d9bc2b660361b7ceeea75707ff8168,godmodelabs/ejecta-v8,merged refactoring branch,Yes
278,https://github.com/eao197/so-5-5/commit/81ef1844e5cdbacd85c6395e956524a90b307694,eao197/so-5-5,"Code refactoring for dispatcher's binders.


git-svn-id: svn://svn.code.sf.net/p/sobjectizer/repo/branches/so_5/5.4-unstable--new-disp@745 1d1731ae-3f85-447d-88f8-c72b288064d1",Yes
279,https://github.com/bjornblissing/osgoculusviewer/commit/f794efe3df90c6a813bd9233794f6d240e438a7a,bjornblissing/osgoculusviewer,Some code refactoring regarding the createRTTCamera function.,Yes
280,https://github.com/JamesYang007/FastAD/commit/15de0c2207bc05ee16fab02cf48561745252e142,JamesYang007/FastAD,"Merge pull request #10 from JamesYang007/james.yang/exgen_memory_issue

Fully refactored version 2.0",Unsure
281,https://github.com/Barracuda09/SATPI/commit/95a739e590200a1e8cb4bbbbf25ee0c5330f507d,Barracuda09/SATPI,"Add parsing of User-Agent and SDT, and show it in WEB Interface. And again some refactoring",Yes
282,https://github.com/MaKiPL/FF8/commit/9b217abd0dad80e81f82c77ab67cff04c16075dd,MaKiPL/FF8,field bg refactored and optimized maplist fetching,Unsure
283,https://github.com/ulfjack/ryu/commit/8149d33324ae61ff68adb0c5331c3407df10553b,ulfjack/ryu,"Remove unnecessary casts.

d2s.c: After the recent refactoring, output2 is always uint32_t,
so we don't need uint32_t casts for expressions involving it.

f2s.c: This expression was already uint32_t.",Yes
284,https://github.com/thelink2012/gta3sc/commit/8ac96612b1d1c4e42e74aa4c2b82e1a2dddeb427,thelink2012/gta3sc,More refactoring,Yes
285,https://github.com/AutonomyLab/libcreate/commit/44a6f809e80190ecc430a64af844c271f93da5ac,AutonomyLab/libcreate,Minor refactor,Yes
286,https://github.com/Xerbo/LeanHRPT-Decode/commit/e1c1464983d1cfadc3d0c3b1de99e83ed2586ea6,Xerbo/LeanHRPT-Decode,"Add basic geometry correction
And a bit of a refactor...",Yes
287,https://github.com/dloebl/cgif/commit/ade05ecfe216c709b1dcd092caaa375fcec77ad3,dloebl/cgif,"Merge pull request #36 from dloebl/cgif-raw-refactor

Refactor: Add internal raw GIF API",Unsure
288,https://github.com/vadz/libtiff/commit/b9a670096f52d6870826f0d4b833a2f3213a0b24,vadz/libtiff,minor refactoring of tif_getimage.c to accomodate planed functionality extension - no functionality change at this time,Yes
289,https://github.com/k06a/Cliple/commit/0b266b0be8fd81c338676f08647033ebbd9ab530,k06a/Cliple,"Added comments and some refactorings. Added Cmd+1, Cmd+2 ... hotkeys",Yes
290,https://github.com/jebreimo/Argos/commit/80c43df01ce266865299f9fa6f83ab9c9b0e9fdf,jebreimo/Argos,Minor refactoring.,Yes
291,https://github.com/zeux/qgrep/commit/1ea0469d34dee109ac4e3cfe8172fdd5ee3e4e12,zeux/qgrep,"vim: Minor refactoring, global mappings are mapped before user-specified ones",Yes
292,https://github.com/moteus/lua-lluv/commit/c23da9250c6ddb5405b0d6fccd88b24ab41ad151,moteus/lua-lluv,Small refactoring.,Yes
293,https://github.com/eliasdaler/imgui-sfml/commit/2eaf1fdef077e0d06b88819e29a042038a7f19ca,eliasdaler/imgui-sfml,"(#133) Add multiple SFML window support / multiple Dear ImGui contexts

Co-authored-by: Elias Daler <eliasdaler@yandex.ru>

Big refactor to support multiple ImGui contexts so that you can create
different SFML windows. Still probably has some bugs and seems like
""viewports"" from Dear ImGui's ""docking"" branch might be much better, but
I didn't get to trying them out yet",Unsure
294,https://github.com/aterrien/forp-PHP-profiler/commit/cfe659d8b41cda5765e8e5ca186da84f0397c0b8,aterrien/forp-PHP-profiler,fix shell / fix prepend / refactoring forp_inspect / fix test 003,Unsure
295,https://github.com/uael/sv/commit/9612f621ae2fa7f7c474327fb1d3a7e78e41b142,uael/sv,malloc cast and style refactoring,Yes
296,https://github.com/Spritetm/hadbadge2019/commit/517d38244b13b587160fe94302883aea3dae9d86,Spritetm/hadbadge2019,"video/verilator: add comments to verilator test bench

Add comments to code in order to assist with future refactoring.",Yes
297,https://github.com/sgallagher/sscg/commit/12632d46f63a1bb76e99768a9ebc00fd8187fd91,sgallagher/sscg,"Add support for writing CA private key

Also refactor the file-writing to be reusable.",Yes
298,https://github.com/Quuxplusone/from-scratch/commit/a8b04e6636a4ced393cb7385e9b83fb2dc4d1ec2,Quuxplusone/from-scratch,"Add Anthony Williams' atomic_shared_ptr.

I still don't fully understand all the counters here, but at least I've
figured out what's going on with `m_index` versus `m_ptr` (the former is
just a lossless version of the latter that fits into fewer bits, so that
we have some bits left over for the access count).

This is a direct copy from Anthony Williams' bitbucket,
https://bitbucket.org/anthonyw/atomic_shared_ptr/src/7bdef03/atomic_shared_ptr
but I have heavily refactored it to use consistent names (e.g. `m_header`
for a pointer to a control block no matter where it appears; and the names
`expected` and `desired` for the arguments to compare-exchange no matter where
it appears) and to remove dead code (e.g. `struct shared_ptr_data_block_base`).

I also fixed a bug where `atomic_shared_ptr::operator=(shared_ptr)` was
returning a null `shared_ptr` by value, instead of returning `*this` by
reference.

Notice that Anthony Williams' `atomic_shared_ptr` does not work unless
you also use his `shared_ptr`; the structure of the reference count in the
control block is more complicated than just a single atomic integer. Also
notice that it requires a 16-byte (double-wide) compare-exchange instruction.
If you get weird linker errors when compiling this header, try adding
`-mcx16` to your compiler's command line options.",Unsure
299,https://github.com/otcshare/automotive-message-broker/commit/e243ee781676b2a9479b1ae627ec3f88c70bab3c,otcshare/automotive-message-broker,"Merge pull request #13 from timkoma/MasterPropertyList

ambd Core refactored",Yes
300,https://github.com/intel/ad-rss-lib/commit/f748a0f676bf2b513dc30d4c0bea0e1879f5dd53,intel/ad-rss-lib,"Fixes in unstructured constellation polygon creation (#87)

- Add several parameters to adjust polygon calculation
- Rename parameters:
  vehicleFrontIntermediateRatioSteps -> vehicleFrontIntermediateYawRateChangeRatioSteps
  vehicleBackIntermediateRatioSteps -> vehicleBackIntermediateYawRateChangeRatioSteps
- code refactoring (pedestrian and vehicle calculations now use common functions)",Yes
301,https://github.com/douban/beansdb/commit/9b6811cc5a1e44ed22f37fe6a130f4129b7f7363,douban/beansdb,refactor fast_read_recored,Yes
302,https://github.com/tgfrerer/ofxPlaylist/commit/dd435dd000107bd605ee5a02186fa45927b20472,tgfrerer/ofxPlaylist,"small internal refactor

* better names
* getting ready to add xml exporter.",Yes
303,https://github.com/UnfoldedInc/deck.gl-native/commit/9ec196e7e6e314f70179091844f9224e07f2448e,UnfoldedInc/deck.gl-native,"Matrix Accessor Conversion (#119)

* Initial accessor conversion

* Implemented private helper methods (at) - returns location/value of position passed

* Remove matrix indexing in private helpers - refactored m -> _m to show private",Yes
304,https://github.com/IOTA-Ledger/blue-app-iota/commit/73a8f9d74dfddc6e7fc965f8c4623d8e297993c5,IOTA-Ledger/blue-app-iota,"Working version on X +blue/nano

Might still apply a bit more refactoring before PR but this should be working fully on all 3 devices (no known issues at time of commit).",No
305,https://github.com/pikhq/musl-nscd/commit/11798e348c21463cc4e91cb3a61ef8206cd5bfa8,pikhq/musl-nscd,"Obtain sysconf values just once.

Instead of querying sysconf once per loop for a value, we should just
store it during initialization, since it's environment information whose
value won't change during runtime.

Even so, since most of the time we are on musl, this function always
returns -1 and we end up using the BUF_LEN_DEFAULT buffer size.

For now, actually using these buffer lengths isn't implemented, because
the code that uses them is being refactored.",No
306,https://github.com/sahlberg/libnfs/commit/d6ced294d8121778f23965c7b0e431ee0e05fd2b,sahlberg/libnfs,"- refactored parametername from reserved keyword ""export"" to ""exportname""",Yes
307,https://github.com/ouxianghui/janus-client/commit/cc6eb31d154d6dbbc465e3cad14d339d612565c5,ouxianghui/janus-client,refactor phase 1,Yes
308,https://github.com/ZeusYang/TinySoftRenderer/commit/775b39fc17ff725fe029949a0ec15a8e5e3047fd,ZeusYang/TinySoftRenderer,refactor,Unsure
309,https://github.com/madMAx43v3r/chia-plotter/commit/c96f4c8cb63db20dbfda36101aafa630dbb098cb,madMAx43v3r/chia-plotter,refactor,Yes
310,https://github.com/cmderdev/cmder/commit/4c1f96c51daec2f45f8996664b2553e39e41bfda,cmderdev/cmder,"Adjusted the build script behavior

Removed some absolute path, and refactored the code so
it handles the nested folder archives",Unsure
311,https://github.com/Thog/oss-rtld/commit/cfe65ac8a5b417df2ecef1fcaf3e2ab03f2c329e,Thog/oss-rtld,"Start refactoring module object

This makes it more c++ like",Yes
312,https://github.com/libMesh/libmesh/commit/2687bcf7ead35bdf1bbf70a8d29cf897cd4eecd4,libMesh/libmesh,"Add missing return in switch statement

Previously all the many many people who use VTK output of infinite
quads would hit errors!

This bug dates back to the 4859f74, a refactoring in July 2004.

Hopefully this record for ""longest unfixed libMesh bug ever"" will
never be beaten.",No
313,https://github.com/wolfSSL/wolfssl/commit/34c9367cbef2592e8df9b294f9528c25cc4b387c,wolfSSL/wolfssl,refactor location of error queue count and consolidate no error queue macro,Yes
314,https://github.com/jashmenn/apriori/commit/b0332d599fa7c0b7d2471be56623a93dddc12bbb,jashmenn/apriori,"realized that the 'itemset' class should actually be called the AssociationRule class. todo, refactor",Unsure
315,https://github.com/dfu-programmer/dfu-programmer/commit/9a2e6e736e084861cd59a37f0aced621c795f759,dfu-programmer/dfu-programmer,"2007-01-06 Weston Schmidt <weston_schmidt AT alumni.purdue.edu>

    * config.h.in: added the autogenerated information from
      autoheader.
    * configure.ac: added checking for errno.h stdarg.h and
      stddef.h to be more thorough in checking for required
      headers.
    * src/dfu.c: added an #ifdef around the EREMOTEIO case
    * src/intel_hex.c: refactored intel_read_data() to not
      use getline(), but to simply walk the file via fgets()
      and fgetc().  As it turns out, getline() wasn't really
      adding much value.",Yes
316,https://github.com/mackron/dred/commit/82acc96c5cd904a26fee24feea4eec043eb96859,mackron/dred,"Early work on shortcut refactoring.

With this change the main way to reference a shortcut is through an
integral ID. These IDs are tied to a human readable name, command
string and accelerator chord.",Yes
317,https://github.com/zoogie/seedminer/commit/23cbc78f425361c41dcd839cfce902bbf01be415,zoogie/seedminer,"2.0 changes

- lfcs from mii qr option added
- seedminer_launcher refactored
- more error checks
- about 30 more msed_datas",Yes
318,https://github.com/TUD-OS/seoul/commit/805c33a1b4759d4bd150efbae12279db171f88ab,TUD-OS/seoul,"Introduced sigma0::repeat, which does what you think it does. Also cleaned up part of the 3-fold overloading of the word ""module"" and did some refactoring.",Unsure
319,https://github.com/rcr/rirc/commit/a8d39e5f34c6d4f44b38aa5cc5a14d5c832bc035,rcr/rirc,refactor draw_status to use drawf,Yes
320,https://github.com/RTXI/rtxi/commit/9c2c9d66602245976c0d0dab0d7eff9c6d1fd02d,RTXI/rtxi,refactoring,Unsure
321,https://github.com/stratum/stratum/commit/66b892900250f1a257fd525241298ea88456b19c,stratum/stratum,"Improve bmv2 support

 * Refactor PINode so that the node id is not required when creating the
   PINode instance (the node id is meant to be set when pushing the
   chassis config).
 * This refactoring required a few changes to bmv2 & Tofino code.
 * Add chassis manager for bmv2; at the moment it handles port oper
   status and port stats.
 * Add sample chassis config for bmv2.
 * Update supported versions for bmv2 & PI for stratum_bmv2.",Yes
322,https://github.com/ImpalaToGo/ImpalaToGo/commit/8567b51f8c38bd389a338c761242a316d8ffe5c8,ImpalaToGo/ImpalaToGo,"Expr refactoring

This patch changes the interface for evaluating expressions, in order
to allow for thread-safe expression evaluations and easier
codegen. Thread safety is achieved via the ExprContext class, a
light-weight container for expression tree evaluation state. Codegen
is easier because more expressions can be cross-compiled to IR.

See expr.h and expr-context.h for an overview of the API
changes. See sort-exec-exprs.cc for a simple example of the new
interface and hdfs-scanner.cc for a more complicated example.

This patch has not been completely code reviewed and may need further
cleanup/stylistic work, as well as additional perf work.

Change-Id: I3e3baf14ebffd2687533d0cc01a6fb8ac4def849
Reviewed-on: http://gerrit.sjc.cloudera.com:8080/3459
Reviewed-by: Skye Wanderman-Milne <skye@cloudera.com>
Tested-by: Skye Wanderman-Milne <skye@cloudera.com>",Yes
323,https://github.com/Milerius/shiva/commit/c5719d3152ef67a20b2468d4dd0e69a267c30373,Milerius/shiva,update documentation and refactor code,No
324,https://github.com/openastroproject/openastro/commit/6d24203602685b3ec91aecb19d8a1d8a102b0713,openastroproject/openastro,Start on refactoring code for initialising camera data structures.,No
325,https://github.com/szellmann/visionaray/commit/c893ef123ab90af9c2351a9a5c73bc14e79057f2,szellmann/visionaray,More refactoring,Yes
326,https://github.com/judnich/TupleMarkup/commit/bbc60a84d5a014ad8e5c6ebd915f9873afc5fc3b,judnich/TupleMarkup,Added many more parser unit tests. Minor refactoring.,Yes
327,https://github.com/jgaeddert/liquid-usrp/commit/f03450856e2a366e9b9d40ecb35946c14baf02d0,jgaeddert/liquid-usrp,"iqpr: refactoring interface

  * abstracting from hardware
  * need to add higher-level of functionality
  * need to move to polymorphic class",Yes
328,https://github.com/vallentin/glText/commit/be896eb8f8534ca5c1b2eac6942f09f4e98bb36d,vallentin/glText,"glText 1.1.0

This update is mainly refactoring, but a few new functions and features
was also sprinkled on.",Yes
329,https://github.com/Ubpa/Utopia/commit/aed3b0b55589ea5f80d91032f60ce9a157a72437,Ubpa/Utopia,refactor AssetImporter,Yes
330,https://github.com/kamalmostafa/minimodem/commit/1e96d42d1699d71f63dc093ec080a60340c90b39,kamalmostafa/minimodem,fsk_bit_analyze refactor,Yes
331,https://github.com/haikarainen/light/commit/1aa2b217eb6024285aa8bc826b20fa955b7f535b,haikarainen/light,"Coding style: de-camelize, simplify and refactor

Signed-off-by: Joachim Nilsson <troglobit@gmail.com>",Yes
332,https://github.com/adnanaziz/EPIJudge/commit/05f345dc668e596faa0916cd67a0cc1d541a40aa,adnanaziz/EPIJudge,Rename refactoring,Yes
333,https://github.com/intel/metrics-discovery/commit/069b9c68d8513099d9dc1982735209b671656765,intel/metrics-discovery,"ACM open sourcing (#39)

* ACM open sourcing

New platform support added.
Metric set adding has been refactored. Single per platform function was too large for compilator to handle.

Change-Id: Ief3b9043796fb7f141385be9c58e5adc0117f9de

* Device id update

Change-Id: Ib684b130b56e0568688df1b3d6ddf2828e848948",Yes
334,https://github.com/Velaron/tf15-client/commit/3f4aacf0260daf2dedfcb3167d90a26c35a3159c,Velaron/tf15-client,ci: small workflows refactoring,Yes
335,https://github.com/clostra/newnode/commit/5dc8f79d7552b0b10bc23a55be2bcb45a32517db,clostra/newnode,refactor evcon_is_local_browser,Yes
336,https://github.com/nullworks/cathook/commit/b50375374d64c6b29a7590e3927ae933d7f8d0c4,nullworks/cathook,"Merge pull request #396 from thinkingmaster/master

Internal changes, hook refactoring",Unsure
337,https://github.com/david-c14/SubmarineFree/commit/dc3709e57bd8e97ad6b86952c02118ac1761c7f3,david-c14/SubmarineFree,refactor TD2 to have more accurate mouse handling,No
338,https://github.com/intel/tinycrypt/commit/fa4b82caa6f9af831bda1565542322cc0b2a3902,intel/tinycrypt,"test_cmac_mode: Update test case

This commit solve some style issues found at the CMAC mode test
application.

Return codes are homogenized to 'int' and lines over 80 chars are
refactored.

Change-Id: I931d2f06233e3f714e18f03fefe46ebaaade2ab6
Signed-off-by: Flavio Santes <flavio.santes@intel.com>",Yes
339,https://github.com/stephengold/Libbulletjme/commit/5aa9b14e3044a4d6ee9e9707753c59a4f57c721c,stephengold/Libbulletjme,MyQuaternion:  refactor the isZero() method,Yes
340,https://github.com/antirez/stonky/commit/e3f0ca98b6dc8b140a5e4b10edca09c02bff8b09,antirez/stonky,"Emoji refactoring and supprot for ""last"".",Yes
341,https://github.com/OndrejTexler/Neurally-Guided-Style-Transfer/commit/14b4103e372b2678a1b7c918da74b882461a9a41,OndrejTexler/Neurally-Guided-Style-Transfer,Code refactor,Yes
342,https://github.com/kbladin/ElkEngine/commit/25f8cdd5c684a2782cf6783393f50e2aa3b207bf,kbladin/ElkEngine,Major update and refactoring,Yes
343,https://github.com/Reisyukaku/ReiNX/commit/cee0a212de65569d8ef323dc4006fc6349eccbba,Reisyukaku/ReiNX,refactor,Yes
344,https://github.com/noisebridge/rfid-access-control/commit/fc434b91dab242b5cd99e3b78a792d129a50028e,noisebridge/rfid-access-control,"Expose events optionally over TCP

Very similar to the HTTP server interface at the moment. Definitely some
future refactoring to these.

Moved the Event list code into its own module to share between the two.

tcp server is exposed w/ -tcpport= when running earl",Unsure
345,https://github.com/nspire-emus/firebird/commit/81456a507d72744e594f76e2967874ff89d59746,nspire-emus/firebird,"Fix sending and receiving files over NNSE

- Add support for big (>254 data bytes) NavNet packets
- When sending the OS, there are multiple 04 packets now
- Needs some refactoring and especially testing",No
346,https://github.com/grassator/mass/commit/59dfcef7514e768129877e5423029b616d454054,grassator/mass,Finish refactoring of `result_value` instead of return values,Yes
347,https://github.com/openbikesensor/OpenBikeSensorFirmware/commit/c8fdd902830ce136cd63c09e1989133eb1461c35,openbikesensor/OpenBikeSensorFirmware,"Merge pull request #204 from openbikesensor/feature/encapsulate-gps-code

refactor GPS code to use own class",Yes
348,https://github.com/Unidata/LDM/commit/89e08e0053a10fb60b176f9b38cd254d1d9760d3,Unidata/LDM,"1) Fixed logging levels and calls, 2) Some refactoring",Yes
349,https://github.com/Cyan4973/FiniteStateEntropy/commit/c6d306a2e966b82ae390fdabafa0267ff05bb7f3,Cyan4973/FiniteStateEntropy,streaming interface refactoring,Yes
350,https://github.com/daedric/httpp/commit/1fe9c9e2b57fdacf90fb23df3c77b1ddb0f400ad,daedric/httpp,"Improve cmake for allowing selecting the promise backend

I should work on refactoring the cmake files soon...",No
351,https://github.com/kaluma-project/kaluma/commit/3bb1f8f856e97ce3fa7f6b45f62b4afc22c36015,kaluma-project/kaluma,"Merge pull request #478 from kaluma-project/refactor-storage

Refactor storage module and lazy loading",Unsure
352,https://github.com/hslua/hslua/commit/f54ba99d8cd81f81fc09de6b4e7ee8d8e53af821,hslua/hslua,hslua-packaging: refactor function result handling,Yes
353,https://github.com/google/libcxx/commit/866569b8c31f680ce95fd403ac5e21bd4552a1b8,google/libcxx,"Attempted locale refactoring.  _LIBCPP_LOCALE__L_EXTENSIONS now should be defined if one has all of the xxx_l() functions.  I've defined this for apple, freebsd and win32.  _LIBCPP_HAS_DEFAULTRUNELOCALE should be defined if there is a _DefaultRuneLocale.  I've defined this for apple and freebsd.  The block of code we're trying to migrate away from is now under #ifdef __linux__.  I've tested only on OS X.  I hope I haven't broken things too badly elsewhere.  Please let me know.

git-svn-id: https://llvm.org/svn/llvm-project/libcxx/trunk@140734 91177308-0d34-0410-b5e6-96231b3b80d8",Yes
354,https://github.com/H-uru/Plasma/commit/2f1c126ee583dc82768259ebf5d3520d4535ddaf,H-uru/Plasma,"Fix wild camera LOS issues.

The camera LOS had two issues that could cause the camera to go to
either odd locations or swing wildly around 180 degrees near obstacles.
For the former, we were potentially leaking our internal state in LOS
miss responses, causing interesting camera goals. For the latter, we
were erronously reporting hits at a distance of zero. These hits mean
""you're on top of it."" In reality, we don't care about that. Besides,
what is a ray of length zero?

Anyway, this refactors the whole mess to be less fiddly and use only one
raycast instead of potentially two. I opted to not use the cache because
of some poorly phrased commentary in the API documentation indicating
the cache is basically never used.",Yes
355,https://github.com/MiguelMJ/Candle/commit/99d00a439bf26a8313540f2617c30f0aa3b38939,MiguelMJ/Candle,"refactor, feat: Make LightSource virtual, add RadialLight",Yes
356,https://github.com/VBrazhnik/Corewar/commit/2d20fd22a55d994480d6f2474215ce9d24aa1af1,VBrazhnik/Corewar,vm v0.5 [minor refactoring]; asm v0.3 [update]; disasm v0.1[minor refactoring],Yes
357,https://github.com/diharaw/hybrid-rendering/commit/9d911d37489c00ee05845331c5b8e1fd6f10ec4b,diharaw/hybrid-rendering,Common Resources refactor.,Yes
358,https://github.com/jvcleave/ofxOMXPlayer/commit/41ff1f5f92db3f6e58c20143cf47ba1515d98d4a,jvcleave/ofxOMXPlayer,refactoring,Yes
359,https://github.com/BeelanMX/Beelan-LoRaWAN/commit/3cd31bb4ef702eb39faa294d92d94f1068acb7bc,BeelanMX/Beelan-LoRaWAN,"Merge pull request #14 from BeelanMX/refactor_serial

Remove of  unnecessary serial printing",Yes
360,https://github.com/glynos/cpp-netlib/commit/b5a0f30e44cba8fa8387914f0378d89f59c378b3,glynos/cpp-netlib,"Merge pull request #631 from glynos/message_refactor

Message refactor",Yes
361,https://github.com/KevinOchs/hexapod/commit/f90f9bee9fd8cc6a5ddb79379a627ac80d3a4e75,KevinOchs/hexapod,Incremental push of refactoring.,Unsure
362,https://github.com/tuxd3v/ats/commit/fab389de066d50fb48cd48bd8353ba43f10f220e,tuxd3v/ats,refactoring..,No
363,https://github.com/creationix/node-gir/commit/bc33928fa2c1f45e26a61d7128ce8a5b40be91fe,creationix/node-gir,GValue corrections and refactoring,Yes
364,https://github.com/cloudbase/qemu/commit/3db3659bf60094657e1465cc809acb09551816ee,cloudbase/qemu,"apic: Resolve potential endless loop around apic_update_irq

Commit d96e173769 refactored the reinjection of pending PIC interrupts.
However, it missed the potential loop of apic_update_irq ->
apic_deliver_pic_intr -> apic_local_deliver -> apic_set_irq ->
apic_update_irq that /could/ occur if LINT0 is injected as APIC_DM_FIXED
and that vector is currently blocked via TPR.

Resolve this by reinjecting only where it matters: inside
apic_get_interrupt. This function may clear a vector while a
PIC-originated reason still exists.

Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>
Signed-off-by: Avi Kivity <avi@redhat.com>",Unsure
365,https://github.com/gwsw/less/commit/480c457d124ed5faaeab3a9207f7eb774d7acd16,gwsw/less,"lesstest: refactor; add struct LessPipeline;
add destroy_less_pipeline to improve cleanup on errors.",Yes
366,https://github.com/fwup-home/fwup/commit/39b39e1c26fcc4df7a0aed973f21fbfe981ec4b8,fwup-home/fwup,"Remove conditional when computing progress

This conditional was triggering a coverity error, but it also got messed
up during the progress computation refactoring. Even though it seems
harmless to skip progress computation when not outputing progress, since
this case gets less testing than the progress-printing cases, don't skip
it. Anyway, the progress computation is instantaneous compared to SDCard
programming, so this is useless optimization.",No
367,https://github.com/jonclayden/ore/commit/f16b7f92af81263782ac63c1b8f3f2dc6ab073b2,jonclayden/ore,Minor refactor of ore_build() C function,Yes
368,https://github.com/spatialaudio/python-rtmixer/commit/f2235d180cdfa3a54e6eaff9603290b47dab8924,spatialaudio/python-rtmixer,Some refactoring,Yes
369,https://github.com/simeonpilgrim/coab/commit/d38cd5a0710bb933fb2c7fd1dd3520d5138c937f,simeonpilgrim/coab,White space refactoring,Yes
370,https://github.com/MichaelMKenny/moonlight-macos/commit/29f676a6d119251d3258a274821e7bea718deb27,MichaelMKenny/moonlight-macos,refactored project directories,Unsure
371,https://github.com/espressif/esp-csi/commit/ae38e7496ca21ed6a4659d6b2018101da6bdceca,espressif/esp-csi,refactor: refactor the csi data plot tools,Unsure
372,https://github.com/cjlano/freertos/commit/f46b627464aa816b9b01adf3bb3c088fc0645ec9,cjlano/freertos,"FreeRTOS source:
 - Major refactor to consolidate the multiple places where a task is removed from a ready list and placed in a delay list into a single function, reducing code size, and enabling the easy addition of up-coming functionality.
 - Replace the enum used for task notification states with a uint8_t to reduce the TCB struct size with some compilers, and allow additional members to be added without increasing its size.
 - Rearrange FreeRTOS.h so all INCLUDE_ defaults are grouped together.


git-svn-id: http://svn.code.sf.net/p/freertos/code/trunk@2415 1d2547de-c912-0410-9cb9-b8ca96c0e9e2",Yes
373,https://github.com/ChungZH/notepanda/commit/22f3faece29710f0a023d55ac770b5245e471b17,ChungZH/notepanda,refactor: move sources to ui/ & core/,Yes
374,https://github.com/tue-robotics/ed/commit/0f59d2b808759655d4175b7b9faf1b04b130cf13,tue-robotics/ed,refactor(plugin)Some more cleaning up,Unsure
375,https://github.com/itszor/gcc-6502/commit/452659afd19793cef456ed9d607f88ed0106700d,itszor/gcc-6502,"Automated part of renaming of symtab_node_base to symtab_node.

gcc/

	Patch autogenerated by rename_symtab.py from
	https://github.com/davidmalcolm/gcc-refactoring-scripts
	revision 58bb219cc090b2f4516a9297d868c245495ee622
	with ChangeLog entry fixed up by hand.

	* cgraph.c (x_cgraph_nodes_queue): Rename symtab_node_base to
	symtab_node.
	(cgraph_node_for_asm): Likewise.
	* cgraph.h (symtab_node_base): Likewise.
	(cgraph_node): Likewise.
	(varpool_node): Likewise.
	(is_a_helper <cgraph_node>::test): Likewise.
	(is_a_helper <varpool_node>::test): Likewise.
	(symtab_nodes): Likewise.
	(symtab_register_node): Likewise.
	(symtab_unregister_node): Likewise.
	(symtab_remove_node): Likewise.
	(symtab_get_node): Likewise.
	(symtab_node_for_asm): Likewise.
	(symtab_node_asm_name): Likewise.
	(symtab_node_name): Likewise.
	(symtab_insert_node_to_hashtable): Likewise.
	(symtab_add_to_same_comdat_group): Likewise.
	(symtab_dissolve_same_comdat_group_list): Likewise.
	(dump_symtab_node): Likewise.
	(debug_symtab_node): Likewise.
	(dump_symtab_base): Likewise.
	(verify_symtab_node): Likewise.
	(verify_symtab_base): Likewise.
	(symtab_used_from_object_file_p): Likewise.
	(symtab_alias_ultimate_target): Likewise.
	(symtab_resolve_alias): Likewise.
	(fixup_same_cpp_alias_visibility): Likewise.
	(symtab_for_node_and_aliases): Likewise.
	(symtab_nonoverwritable_alias): Likewise.
	(availability symtab_node_availability): Likewise.
	(symtab_semantically_equivalent_p): Likewise.
	(fixup_same_cpp_alias_visibility): Likewise.
	(symtab_prevail_in_asm_name_hash): Likewise.
	(cgraph): Likewise.
	(varpool): Likewise.
	(varpool_first_variable): Likewise.
	(varpool_next_variable): Likewise.
	(varpool_first_static_initializer): Likewise.
	(varpool_next_static_initializer): Likewise.
	(varpool_first_defined_variable): Likewise.
	(varpool_next_defined_variable): Likewise.
	(cgraph_first_defined_function): Likewise.
	(cgraph_next_defined_function): Likewise.
	(cgraph_first_function): Likewise.
	(cgraph_next_function): Likewise.
	(cgraph_first_function_with_gimple_body): Likewise.
	(cgraph_next_function_with_gimple_body): Likewise.
	(symtab_alias_target): Likewise.
	(symtab_real_symbol_p): Likewise.
	(symtab_can_be_discarded): Likewise.
	* cgraphbuild.c (mark_address): Likewise.
	(mark_load): Likewise.
	(mark_store): Likewise.
	* cgraphunit.c (decide_is_symbol_needed): Likewise.
	(first): Likewise.
	(enqueue_node): Likewise.
	(referred_to_p): Likewise.
	(cgraph_process_same_body_aliases): Likewise.
	(analyze_functions): Likewise.
	(handle_alias_pairs): Likewise.
	(output_weakrefs): Likewise.
	(compile): Likewise.
	* gimple-fold.c (can_refer_decl_in_current_unit_p): Likewise.
	* ipa-inline-analysis.c (inline_write_summary): Likewise.
	* ipa-prop.c (remove_described_reference): Likewise.
	(try_decrement_rdesc_refcount): Likewise.
	(ipa_edge_duplication_hook): Likewise.
	* ipa-ref.c (ipa_record_reference): Likewise.
	(ipa_maybe_record_reference): Likewise.
	(ipa_clone_ref): Likewise.
	(ipa_clone_references): Likewise.
	(ipa_clone_referring): Likewise.
	(ipa_find_reference): Likewise.
	(ipa_remove_stmt_references): Likewise.
	(ipa_clear_stmts_in_references): Likewise.
	* ipa-ref.h (symtab_node_base): Likewise.
	(ipa_ref): Likewise.
	(ipa_record_reference): Likewise.
	(ipa_maybe_record_reference): Likewise.
	(ipa_clone_references): Likewise.
	(ipa_clone_referring): Likewise.
	(ipa_clone_ref): Likewise.
	(ipa_find_reference): Likewise.
	(ipa_remove_stmt_references): Likewise.
	(ipa_clear_stmts_in_references): Likewise.
	* ipa-reference.c (ipa_reference_write_optimization_summary):
	Likewise.
	* ipa.c (enqueue_node): Likewise.
	(process_references): Likewise.
	(walk_polymorphic_call_targets): Likewise.
	(symtab_remove_unreachable_nodes): Likewise.
	(address_taken_from_non_vtable_p): Likewise.
	(comdat_can_be_unshared_p_1): Likewise.
	(comdat_can_be_unshared_p): Likewise.
	(can_replace_by_local_alias): Likewise.
	(function_and_variable_visibility): Likewise.
	* is-a.h: Likewise (within example in comment).
	* lto-cgraph.c (input_cgraph_opt_summary): Likewise.
	(lto_symtab_encoder_encode): Likewise.
	(lto_symtab_encoder_delete_node): Likewise.
	(lto_symtab_encoder_in_partition_p): Likewise.
	(lto_set_symtab_encoder_in_partition): Likewise.
	(output_refs): Likewise.
	(compute_ltrans_boundary): Likewise.
	(output_symtab): Likewise.
	(input_node): Likewise.
	(input_ref): Likewise.
	(input_edge): Likewise.
	(input_cgraph_1): Likewise.
	(input_refs): Likewise.
	(output_cgraph_opt_summary): Likewise.
	(input_node_opt_summary): Likewise.
	(input_cgraph_opt_section): Likewise.
	* lto-section-in.c (lto_free_function_in_decl_state_for_node):
	Likewise.
	* lto-streamer-out.c (lto_output): Likewise.
	(output_symbol_p): Likewise.
	(produce_symtab): Likewise.
	* lto-streamer.h (lto_encoder_entry): Likewise.
	(lto_free_function_in_decl_state_for_node): Likewise.
	(lto_symtab_encoder_encode): Likewise.
	(lto_symtab_encoder_delete_node): Likewise.
	(lto_symtab_encoder_in_partition_p): Likewise.
	(lto_set_symtab_encoder_in_partition): Likewise.
	(lto_symtab_encoder_lookup): Likewise.
	(lsei_node): Likewise.
	(lto_symtab_encoder_deref): Likewise.
	* symtab.c (symtab_hash): Likewise.
	(assembler_name_hash): Likewise.
	(symtab_nodes): Likewise.
	(hash_node): Likewise.
	(eq_node): Likewise.
	(hash_node_by_assembler_name): Likewise.
	(eq_assembler_name): Likewise.
	(insert_to_assembler_name_hash): Likewise.
	(unlink_from_assembler_name_hash): Likewise.
	(symtab_prevail_in_asm_name_hash): Likewise.
	(symtab_register_node): Likewise.
	(symtab_insert_node_to_hashtable): Likewise.
	(symtab_unregister_node): Likewise.
	(symtab_get_node): Likewise.
	(symtab_remove_node): Likewise.
	(symtab_initialize_asm_name_hash): Likewise.
	(symtab_node_for_asm): Likewise.
	(symtab_add_to_same_comdat_group): Likewise.
	(symtab_dissolve_same_comdat_group_list): Likewise.
	(symtab_node_asm_name): Likewise.
	(symtab_node_name): Likewise.
	(dump_symtab_base): Likewise.
	(dump_symtab_node): Likewise.
	(dump_symtab): Likewise.
	(debug_symtab_node): Likewise.
	(verify_symtab_base): Likewise.
	(verify_symtab_node): Likewise.
	(verify_symtab): Likewise.
	(symtab_used_from_object_file_p): Likewise.
	(symtab_node_availability): Likewise.
	(symtab_alias_ultimate_target): Likewise.
	(fixup_same_cpp_alias_visibility): Likewise.
	(symtab_resolve_alias): Likewise.
	(symtab_for_node_and_aliases): Likewise.
	(symtab_for_node_and_aliases): Likewise.
	(symtab_nonoverwritable_alias_1): Likewise.
	(symtab_nonoverwritable_alias): Likewise.
	(symtab_semantically_equivalent_p): Likewise.
	* value-prof.c (init_node_map): Likewise.
	* varasm.c (find_decl): Likewise.
	* varpool.c (varpool_node_for_asm): Likewise.
	(varpool_remove_unreferenced_decls): Likewise.

gcc/c-family/

	Patch autogenerated by rename_symtab.py from
	https://github.com/davidmalcolm/gcc-refactoring-scripts
	revision 58bb219cc090b2f4516a9297d868c245495ee622

	* c-pragma.c (maybe_apply_pending_pragma_weaks): Rename
	symtab_node_base to symtab_node.

gcc/lto/

	Patch autogenerated by rename_symtab.py from
	https://github.com/davidmalcolm/gcc-refactoring-scripts
	revision 58bb219cc090b2f4516a9297d868c245495ee622

	* lto-partition.c (add_symbol_to_partition): Rename
	symtab_node_base to symtab_node.
	(get_symbol_class): Likewise.
	(symbol_partitioned_p): Likewise.
	(add_references_to_partition): Likewise.
	(add_symbol_to_partition_1): Likewise.
	(contained_in_symbol): Likewise.
	(add_symbol_to_partition): Likewise.
	(lto_1_to_1_map): Likewise.
	(lto_max_map): Likewise.
	(lto_balanced_map): Likewise.
	(privatize_symbol_name): Likewise.
	(promote_symbol): Likewise.
	(may_need_named_section_p): Likewise.
	(rename_statics): Likewise.
	(lto_promote_statics_nonwpa): Likewise.
	* lto-symtab.c (lto_symtab_merge): Likewise.
	(lto_symtab_resolve_replaceable_p): Likewise.
	(lto_symtab_symbol_p): Likewise.
	(lto_symtab_resolve_can_prevail_p): Likewise.
	(lto_symtab_resolve_symbols): Likewise.
	(lto_symtab_merge_decls_2): Likewise.
	(lto_symtab_merge_decls_1): Likewise.
	(lto_symtab_merge_decls): Likewise.
	(lto_symtab_merge_symbols_1): Likewise.
	(lto_symtab_merge_symbols): Likewise.
	(lto_symtab_prevailing_decl): Likewise.
	* lto.c (lto_wpa_write_files): Likewise.
	(read_cgraph_and_symbols): Likewise.
	(do_whole_program_analysis): Likewise.



git-svn-id: svn+ssh://gcc.gnu.org/svn/gcc/trunk@204279 138bc75d-0d04-0410-961f-82ee72b054a4",Unsure
376,https://github.com/pimoroni/picosystem/commit/cd638ae24cd9a25eadd900fca383ffa23af0317c,pimoroni/picosystem,"Merge pull request #19 from pimoroni/micropython-refactor

MicroPython: Refactor into multiple files.",Unsure
377,https://github.com/olilarkin/pMix2/commit/8d17bfd63c7cc3829a487e41d83da1a2a8ea53bc,olilarkin/pMix2,more refactoring,Yes
378,https://github.com/freddiev4/dailyprogrammerchallenges/commit/5b97e905e3df06ab586082dcdb090044b8b57e06,freddiev4/dailyprogrammerchallenges,"refactored solution.c, now more compete",Unsure
379,https://github.com/libinotify-kqueue/libinotify-kqueue/commit/0348f1c7d7fd596ea5ddc4535fe598fdbe837bd6,libinotify-kqueue/libinotify-kqueue,"Merge tests into master. Squashed commit of the following:

commit 8ec99153bddc11a3839c1fb69c24471ffb19486a
Author: Dmitry Matveev <me@dmitrymatveev.co.uk>
Date:   Sun Aug 14 20:23:47 2011 +0000

    Fixed tests to build on NetBSD

commit 22a23c9db7c0e0952041edaa071348fb8a36abe2
Author: Dmitry Matveev <me@dmitrymatveev.co.uk>
Date:   Sun Aug 14 20:14:21 2011 +0400

    Added Directory Flags Update test

commit ccf64bc69186aa7aada269cc739c854733f8d80b
Author: Dmitry Matveev <me@dmitrymatveev.co.uk>
Date:   Sun Aug 14 13:52:11 2011 +0400

    Added Update Flags test

commit 150d326a4c2c208b9397405a768143d1a375075e
Author: Dmitry Matveev <me@dmitrymatveev.co.uk>
Date:   Sun Aug 14 12:34:25 2011 +0400

    Added Fail Test

commit 1eb1c33fd7f5ace6cd23f5a52244dedd2e3327e0
Author: Dmitry Matveev <me@dmitrymatveev.co.uk>
Date:   Sun Aug 14 12:27:49 2011 +0400

    Updated tests names

commit 803aa3deab8540fd26f3a54712e2eccae0e58812
Author: Dmitry Matveev <me@dmitrymatveev.co.uk>
Date:   Sun Aug 14 10:41:34 2011 +0400

    Updated Directory Notifications test to handle directoy deletions correctly

commit 7b9541633428583c2a4bbba431d82571ef3ecc08
Author: Dmitry Matveev <me@dmitrymatveev.co.uk>
Date:   Sun Aug 14 04:26:20 2011 +0400

    Implemented Directory notifications test. Some cases fail even in Linux and should be reworked (probably)

commit fa7e102bca3f0f5b4121741fe801a0ec6a8aac4a
Author: Dmitry Matveev <me@dmitrymatveev.co.uk>
Date:   Sun Aug 14 01:54:16 2011 +0400

    Added tests on standard notifications

commit 82e832f75718284369b76984c6cde67e0306e9ab
Author: Dmitry Matveev <me@dmitrymatveev.co.uk>
Date:   Sun Aug 14 00:41:24 2011 +0400

    Enabled all tests by default, fixed some in the inotify_client

commit bfb2590c9dcfc155a2679fda8c1a3ae87145e8bf
Author: Dmitry Matveev <me@dmitrymatveev.co.uk>
Date:   Sat Aug 13 12:17:34 2011 +0400

    Fixed some bugs in the new producer/consumer synchronization scheme

commit acec36ea3bd1b73d9c3d95a7b71922e9361a3a1a
Author: Dmitry Matveev <me@dmitrymatveev.co.uk>
Date:   Sat Aug 13 11:28:05 2011 +0000

    Dropped pthread barriers from the core framework (it does not work well on NetBSD)

commit ac107bb55b65629a00aee7ae7e8c2d3d2081cf62
Author: Dmitry Matveev <me@dmitrymatveev.co.uk>
Date:   Fri Aug 12 23:44:31 2011 +0400

    Implemented the Start-Stop Directory Test, fixed some bugs in the core framework

commit 464c3ab9d7b79727b075bed02be0f98853fcbd9f
Author: Dmitry Matveev <me@dmitrymatveev.co.uk>
Date:   Fri Aug 12 16:15:41 2011 +0400

    Included start-stop test to run too

commit a8448a144320e51b5a69a79301081bb5093f76eb
Author: Dmitry Matveev <me@dmitrymatveev.co.uk>
Date:   Fri Aug 12 16:13:45 2011 +0400

    Introduced a start-stop test for a file, a start-stop test for a directory (to be continued), improved the test framework

commit abbf42747b7f21fa353267554567ddd6db060324
Author: Dmitry Matveev <me@dmitrymatveev.co.uk>
Date:   Thu Aug 11 23:57:42 2011 +0400

    Corrected matcher to match not only by a filename

commit c545f5d8b45f767f7e4a0150ed82a574e99e248f
Author: Dmitry Matveev <me@dmitrymatveev.co.uk>
Date:   Thu Aug 11 14:18:41 2011 +0000

    Fixed refactored tests to build on NetBSD

commit 3e6b7fbe678a81606b3cc02151b738fb976a041a
Author: Dmitry Matveev <me@dmitrymatveev.co.uk>
Date:   Thu Aug 11 14:15:36 2011 +0400

    Refactored the test framework, separated its sources from the tests

commit b6eddb570f397cb40fce28455dd28c13969d79bc
Author: Dmitry Matveev <me@dmitrymatveev.co.uk>
Date:   Thu Aug 11 12:02:29 2011 +0000

    Fixed again to build it on NetBSD

commit bc42ac3e3aca99d56374f2343283f2aafe236fda
Author: Dmitry Matveev <me@dmitrymatveev.co.uk>
Date:   Thu Aug 11 11:55:56 2011 +0400

    Completed the test framework

commit 773fad938fd14a6511777db2f765d651af0b3e5d
Author: Dmitry Matveev <me@dmitrymatveev.co.uk>
Date:   Thu Aug 11 10:14:12 2011 +0000

    Again, fixed it to build on NetBSD

commit 66b4ecee579f8a9c0fe4a30d91f78dfb0a75155c
Author: Dmitry Matveev <me@dmitrymatveev.co.uk>
Date:   Thu Aug 11 10:12:13 2011 +0400

    Fixed broken Linux compatibility

commit d1f3cf7901422720d8ba4babf7a54d5cfecae819
Author: Dmitry Matveev <me@dmitrymatveev.co.uk>
Date:   Thu Aug 11 09:59:21 2011 +0000

    Fixed test to run on NetBSD properly

commit d12b8baec9b6d391d9674fa9ca84adaed2c60f4f
Author: Dmitry Matveev <me@dmitrymatveev.co.uk>
Date:   Thu Aug 11 03:22:38 2011 +0000

    Added C++ linkage support to the library; ported tests to build and run on NetBSD with a library

commit 4d159a31d8ddc589f6f21f776f3ac88c4d5c3ec9
Author: Dmitry Matveev <me@dmitrymatveev.co.uk>
Date:   Thu Aug 11 02:57:16 2011 +0000

    Started working on inotify behavioral tests",Unsure
380,https://github.com/raspberrypi/firmware/commit/d659d1d1f25a3320f4918b0fc362349410012e4d,raspberrypi/firmware,"firmware: Adding support for frame packed 3D modes

firmware: video codec: preparatory change to handling of userdata for CFP2

firmware: video codec: refactor categoriser new_picture code

firmware: video codec: allow MBLoop to handle both dnri slots

firmware: arm_loader: Add support for the HAT setgpio and gpio_drive directives

firmware: dispmanx/hvs: Clear EOF callback state when the display is destroyed",Unsure
381,https://github.com/logrotate/logrotate/commit/01da0b608e59bfc61444aacd16ef34e742c9188e,logrotate/logrotate,New directives 'createolddir' and 'nocreateolddir'. Small refactorization of mode/uid/gid reading.,Unsure
382,https://github.com/Decawave/mynewt-dw1000-core/commit/84ecbd6a664f411d91d3ce12b5e8ec1db3a2ccf2,Decawave/mynewt-dw1000-core,Merge branch 'refactor' of https://github.com/decawave/mynewt-dw1000-core into refactor,No
383,https://github.com/lubosz/gst-plugins-vr/commit/f0ae3e4a834314f840a4d66d2408e4061e0a2c97,lubosz/gst-plugins-vr,vrcompositor+pointcloudbuilder: refactor to lib,Yes
384,https://github.com/ashe23/ProjectCleaner/commit/c305a4adfbe2f1cbc8df3be8ddc3b5ef0b2f3d9e,ashe23/ProjectCleaner,refactor,Yes
385,https://github.com/JayXon/Leanify/commit/88424a5f5d0472a25961dce1accff34e125ac746,JayXon/Leanify,refactoring,Yes
386,https://github.com/bxparks/AceTime/commit/0f29643a511e05693bb2eb36c1e9a82948918943,bxparks/AceTime,CHANGELOG.md: Update summary of documentation refactoring,No
387,https://github.com/vmware/concord-bft/commit/fb2b93322f0e273fb3b1277ede0cb263af1a28b2,vmware/concord-bft,"Replica config refactoring (#318)

* https://jira.eng.vmware.com/browse/VB-2168
Replica configuration code dedup and refactoring.

Deduplicate configuration fields which exist in ReplicaConfig from ReplicaImp.
Refactor ReplicaConfigSingleton for optimization and proper initialization.

* Small CXX flags refactoring:
CMAKE_CXX_FLAGS cmake variable is instantiated from the environment CXXFLAGS variable.
Removed confusing CXX_FLAGS.
Instead update directly:
CMAKE_CXX_FLAGS - for all build types;
CMAKE_CXX_FLAGS_DEBUG - for debug builds;
CMAKE_CXX_FLAGS_RELEASE - for release builds.
-D_FORTIFY_SOURCE=2 is used only in release mode in conjunction with the default -O3.

Since -DNDEBUG is used in release mode replace assert()
- by Assert in test with unused variables;
- by throw where control reaches end of non-void function [-Werror=return-type]",Yes
388,https://github.com/microsoft/lagscope/commit/07fd8c973687588d0341a6c58085c6f76d0e3a96,microsoft/lagscope,"Fixes: Timestamp refactor, default address for Windows client & Custom optget (#24)

* Refactor time code to use nano second resolution

* Default to 127.0.0.1 for client connections

* Dont accept space between option and its value

* Use custom getopt for both Linux & Windows for same behaviour",Yes
389,https://github.com/mdolab/dafoam/commit/2c8bcd53de1e5beb3aead1c971e1ea64a29e7200,mdolab/dafoam,"Cleaning up FSI Code Additions (#212)

* Refactoring getForces() routine.

Description: This refactors the getForces() routine to have the PETSc
Python version call a C++ wrapping function that calls an internal
function to perform the get forces. Now, the elements are sorted in the
C++ layer instead of in Python.

* Fix for setting non-differentiated integer value in getForces().

* Adding in differentiated routines for force calculation derivatives.

* Cleaning up and streamlining force calculation functions

* Adding test for force and force derivative calculation functions.

* Minor formatting fixes

* Setting random seed to make force derivative seeds consistent

* Removing random seed and using ones for force derivative seeds

* Correcting reference values for 4 procs",No
390,https://github.com/masroore/opentracker/commit/b38104b9862a57271567c3dcb7e004addbe70ffc,masroore/opentracker,"Added outbound part of sync Proposed format: d4:syncd20:<info_hash>8*N:(xxxxyy)*Nee, therefore had to refactor torrent cleanup now that it will hit all torrents once every OT_POOL_TIMEOUT units.",Yes
391,https://github.com/superctr/MDSDRV/commit/2d912a7f22de9f7656c55f59c7ddc0e8187a6f5c,superctr/MDSDRV,"Properly stop previous track when requesting new track

Some small refactoring and code updates",Yes
392,https://github.com/openETCS/modeling/commit/ba714da2b661f271ad22f9ccf4bdcd4758659b65,openETCS/modeling,Selection of level transition refactoring,Unsure
393,https://github.com/LukasBanana/XShaderCompiler/commit/66a3f2ee6b2620f0451cb4d79f80e84d19c8050c,LukasBanana/XShaderCompiler,Started with refactoring of type specifiers: moved type modifier set from VarDeclStmnt to TypeSpecifier AST class.,Yes
394,https://github.com/okyeron/OMX-27/commit/01f2212bc1566ad960b0a8a940617359e5fc01ca,okyeron/OMX-27,"Merge pull request #41 from catkins/catkins/inject-settings-dependency-to-sysex

Small refactor of SysSettings plumbing",Yes
395,https://github.com/CyberDem0n/bg/commit/8a21dc39c9fdb20cbd37327d8e0f531755f5dd80,CyberDem0n/bg,"Fix little bug in the aggregate implementation (#33)

0 second was stored in the wrong bucket.

Also refactor API access, to support less cumbersome requests.",Unsure
396,https://github.com/DNS-OARC/dnsperf/commit/0677bf0c2c0b9ef038111dcb3113cbd9485a83a1,DNS-OARC/dnsperf,"Use dns_fixedname_initname() where possible

Replace dns_fixedname_init() calls followed by dns_fixedname_name()
calls with calls to dns_fixedname_initname() where it is possible
without affecting current behavior and/or performance.

This patch was mostly prepared using Coccinelle and the following
semantic patch:

    @@
    expression fixedname, name;
    @@
    -	dns_fixedname_init(&fixedname);
    	...
    -	name = dns_fixedname_name(&fixedname);
    +	name = dns_fixedname_initname(&fixedname);

The resulting set of changes was then manually reviewed to exclude false
positives and apply minor tweaks.

It is likely that more occurrences of this pattern can be refactored in
an identical way.  This commit only takes care of the low-hanging fruit.",Yes
397,https://github.com/Lamobo/Lamobo-R1-OpenWrt/commit/488a32cc9bb1febbbe4bc2bae804827cbeb9e27e,Lamobo/Lamobo-R1-OpenWrt,"refactor atheros system code - also add support for the reset button (sends netlink messages in the same format as broadcom-diag)

git-svn-id: svn://svn.openwrt.org/openwrt/trunk@7869 3c298f89-4303-0410-b956-a3cf2f4a3e73",Unsure
398,https://github.com/Illumina/interop/commit/0b2210242d1999893d3b546ee7780d13e4a46015,Illumina/interop,IPA-4146: Add summary unit test and refactor Swig interface,Yes
399,https://github.com/Theverat/NormalmapGenerator/commit/b9e7f4a4cc18e0cc32450bd4bd960226dca10d3d,Theverat/NormalmapGenerator,refactoring of folder structure,Yes
400,https://github.com/embedthis/goahead/commit/f17371ffb609c5f7471efb1f08dbf9ec0f984c48,embedthis/goahead,DEV: more doc refactor for expansive,Unsure
401,https://github.com/open-mmlab/CLUE/commit/73740a663d0cb08017f08c23e9b2c73bdc91b0d9,open-mmlab/CLUE,refactored implementation of monadic binding for mparser,Yes
402,https://github.com/libcpr/cpr/commit/78ad40a215c6ab6b748f9d0bf01253108dc51c3c,libcpr/cpr,Started refactoring the mongoose http server,Yes
403,https://github.com/wilix-team/iohook/commit/c85812b21b8a3e53a118d32d9c4c402621127d1e,wilix-team/iohook,refactor: new README,Unsure
404,https://github.com/madeso/ride/commit/5933142ac5dc6f04a623eeecf38b590392e48fa3,madeso/ride,refactoring language,Unsure
405,https://github.com/dupgit/sauvegarde/commit/faf12e35f249d872496f9c1ef74162a310fa1e10,dupgit/sauvegarde,Adds calculate_hash_for_string() function and refactors gchar to guchar.,Yes
406,https://github.com/OAID/Tengine/commit/4f900b0abf85ea026eb9e0be178ffcce4c4f2967,OAID/Tengine,"fix bug of pool reshape, refactor concat ref op (#716)

* fix bug of pool reshape, refactor concat ref op

* add the yolact_uint8",Yes
407,https://github.com/LongSoft/PMPatch/commit/ee8930e7b2d3eec40fc0e0e209ea8f63c711272c,LongSoft/PMPatch,"Version 0.4.0

- Added LZMA compression/decompression based on 7zip SDK
- Code reorganized and refactored",Yes
408,https://github.com/Wigner-GPU-Lab/Teaching/commit/9375423308f6febe5c65a021f7ab8b14ae508f4d,Wigner-GPU-Lab/Teaching,Minor refactor of Adaptive solver example,Unsure
409,https://github.com/facebookresearch/fbpcf/commit/27b048476fee3894279c42e4c2158fabe0e6e020,facebookresearch/fbpcf,"Add test for FileReader through LocalFileReaderTest (#115)

Summary:
Pull Request resolved: https://github.com/facebookresearch/fbpcf/pull/115

This diff just does a slight refactoring so that we can reuse the code for LocalFileReaderTest to also test FileReader. It should be identical because FileReader is just a wrapper for LocalFileReader.

Reviewed By: elliottlawrence

Differential Revision: D34978254

fbshipit-source-id: 48d23f59ccab43c9ba470336c58da90e0103dc73",Yes
410,https://github.com/buserror/simavr/commit/b0d3d5ec3136d4742f1ac15a214f046e79705c84,buserror/simavr,"uart: refactor uart udr write operation outside generic uart write.

	modified:   simavr/sim/avr_uart.c",Yes
411,https://github.com/jellyfin/jellyfin-media-player/commit/e168dac0a1a6477a762f8bf152e4d42f9b270659,jellyfin/jellyfin-media-player,"Add option to hide power options from the exit dialog.

Users requested a way to disable the power options on their machines
since they have smaller kids or clueless people that might power
down or suspend the machine unintentionally. I opted to make this a
hidden option since it's mostly for power users.

This required a small refactoring since we wanted a central place
to check that setting instead of in every sub power component. I
chose to use the capabilites flags instead of doing the several
different methods, this seemed cleaner for the subclasses.",Yes
412,https://github.com/SELinuxProject/selinux-kernel/commit/8a07855e66e6b8ddf452d81c6aac0b1ff3665e86,SELinuxProject/selinux-kernel,"dt-bindings: firmware: scm: Refactor compatibles and clocks

When the binding was written all ""future"" platforms required three
clocks, so the default compatible (qcom,scm) was defined to require
this. But as history shows all ""future"" platforms actually lack required
clocks. Given how the binding is written these compatibles have to be
added as an exception to the default.

Refactor the description of compatible to define that a platform
compatible should be given, followed by the fallback of qcom,scm. Also
refactor the description of the clocks in a way that this does not need
to be updated as new platform specific compatibles are added.

Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
Reviewed-by: Stephen Boyd <sboyd@kernel.org>
Signed-off-by: Andy Gross <andy.gross@linaro.org>",Unsure
413,https://github.com/MathWebSearch/mws/commit/0dbe9b02f00ddc4de5b014120cb81b30e00918e4,MathWebSearch/mws,Minor refactoring.,Yes
414,https://github.com/ragnar-lodbrok/meow-sql/commit/2ba1009cb7cc55c22662fdb1fed64d300a406c5c,ragnar-lodbrok/meow-sql,Query data delegates refactoring,Yes
415,https://github.com/guns/dnsmasq/commit/6299ffbe60ae614377b44184978da5f23e1f1699,guns/dnsmasq,"Start refactoring for correct handling of domain wire-format.

Introduce utility functions and RDATA meta-description.",No
416,https://github.com/Yubico/yubico-windows-auth/commit/9e6d3153efa9e491be0259a21e5e759cc2cba5c2,Yubico/yubico-windows-auth,refactor and remove code.,Yes
417,https://github.com/spdk/spdk/commit/1f0bff73df6ccde7566b9a4b8d15ac2ac3e6cc77,spdk/spdk,"test: refactor the run_test function to add detailed information

1.Refactor the run_test function which used to add detailed information
  during run test suites and test cases.
2.Refactor the lvol feature test scripts to make sure their log is the same.
3.Users can use ""run_test suite command"" to run test suites
  and use ""run_test case command"" to run test cases.
4.Update the vhost and lvol test as example.

Change-Id: I7b6387019a861bd1c4f89b9a7712e53150aea8fa
Signed-off-by: Chen Wang <chenx.wang@intel.com>
Reviewed-on: https://review.gerrithub.io/403610
Chandler-Test-Pool: SPDK Automated Test System <sys_sgsw@intel.com>
Tested-by: SPDK CI Jenkins <sys_sgci@intel.com>
Reviewed-by: Ben Walker <benjamin.walker@intel.com>
Reviewed-by: Jim Harris <james.r.harris@intel.com>",Yes
418,https://github.com/gciruelos/termplot/commit/f75594f5739ac2243b64407eabde68d691121aca,gciruelos/termplot,Big refactoring. ui_impl only depends on structs.h. Big improvement.,Yes
419,https://github.com/google/pindrop/commit/d80c3d4fc81f921b469c92f44fd6099a086958ae,google/pindrop,"Renamed pindrop_demo to pindrop_sample.

Most of our other projects refer to the samples as samples, not demos,
so I renamed the demo project in the name of consistency.

Also did some minor refactoring in the CMakeLists file.

Tested on Linux.

Change-Id: Ib5eedbe6658c6886ee0428f85d5d9c9c5032ffbe",Unsure
420,https://github.com/wgroeneveld/gba-sprite-engine/commit/e690007190dcac29577eeda60a5f38351f2eab31,wgroeneveld/gba-sprite-engine,"refactoring math suite into GBAVector, added tests for point rotation, stub for sin/cos",Yes
421,https://github.com/Hexxeh/rpi-firmware/commit/3f654491b6b3ae94d1895e69a1bee6f4cc62c691,Hexxeh/rpi-firmware,"firmware: vdec3: Fix regression from refactor userdata release mechanics in categoriser commit
See: http://forum.kodi.tv/showthread.php?tid=231092&pid=2060727#pid2060727",Unsure
422,https://github.com/ErichStyger/McuOnEclipseLibrary/commit/f9790a6c0c56568d134654b25fd1a386b7518483,ErichStyger/McuOnEclipseLibrary,refactoring ESP32 support,Yes
423,https://github.com/geany/geany-plugins/commit/a9d73f1aee85b2f12bfb5f2c0ac7829d484a010b,geany/geany-plugins,"Merge pull request #725 from LarsGit223/tb-refactor

treebrowser: changed confusing function names",Yes
424,https://github.com/NVlabs/nvbio/commit/4f22995dcb7db3668c3029fb40f53bf07c2117c8,NVlabs/nvbio,"minor code refactoring

[git-p4: depot-paths = ""//sw/gpgpu/nvbio/main/"": change = 18177508]",Unsure
425,https://github.com/Tencent/rapidjson/commit/702b45bb6e3c84fa87c7cf3513b92c1a8c18f3c6,Tencent/rapidjson,"GenericValue: refactoring of operator==/!=

By restructuring the call forwarding of the various operator== and
operator!= overloads, new overloads can be added by simply adding an
additional member operator==.

Additionally, the ""Ch*"" overloads are dropped in favour of an SFINAE
version that removes the pointer variants from matching the templated
operator== (see also operator=).",Yes
426,https://github.com/sonald/sos/commit/eb9255392c54e3a26a4454dab4aafcc81b0b4e2d,sonald/sos,refactor keyboard driver and make ps2 mouse almost work,Yes
427,https://github.com/quassel/quassel/commit/5924533c6d0f9777d38c01ed7e1510a55db2b876,quassel/quassel,"Add support for password hash versioning

Previously, Quassel would always use an unsalted SHA1 hash.  This
patch introduces a version field for the password, allowing for
using a better hash.  (No new hash is added yet.)  Users will be
automatically upgraded to the newest hash whenever they login or
change their passwords.

This is implemented by adding a new integer field to hold the hash
version in the DB.  Additionally, the password field in PostgreSQL
has been expanded to a TEXT field, allowing larger hash values to
be stored in the future.  The password hashing code has also been
refactored to make it easier to introduce new hashes without
fooling around in the DB driver code.",Yes
428,https://github.com/dwmkerr/glmnet/commit/edd5c8820d6c146266dd92c54c718f90e4f16b68,dwmkerr/glmnet,refactor: standardise tabs to four spaces,Yes
429,https://github.com/ice-wm/icewm/commit/091f7a8cfe3eb50f2493e206208c2f630e66497c,ice-wm/icewm,icon code refactoring,Yes
430,https://github.com/kamyu104/LeetCode-Solutions/commit/72b126dc96af3a178c923a9bda41e71954de6825,kamyu104/LeetCode-Solutions,refactor,Yes
431,https://github.com/Shark-ML/Shark/commit/3b35e1f3774510afb83b14b0d7ca406db039939c,Shark-ML/Shark,"RF: Simplify control structures

RF: Simplify control structures, part 1 & 2
Simplify control structures, also
in preparation for a more uniform code structure:
refactor to use cFull as the full count in an iteration, and then use
both cAbove and cBelow as the temporary incremental variables during
looping.",Yes
432,https://github.com/dmonakhov/linphone/commit/ccf741f1ff01ea65dfc65f414718d1b3c05ca58d,dmonakhov/linphone,"echo canceler refactoring and improvements.

git-svn-id: svn+ssh://svn.savannah.nongnu.org/linphone/trunk@606 3f6dc0c8-ddfe-455d-9043-3cd528dc4637",Yes
433,https://github.com/DevoInc/pCraft/commit/8aa28ba39e5684860fef92671896cae61a306af4,DevoInc/pCraft,Major refactoring where most of the application code is now handled by the Application class,Yes
434,https://github.com/CyanogenMod/android/commit/ceb9ce6619e4d2c6ac15e211f6b88739bb9d927e,CyanogenMod/android,"am b8fb6c0b: am 8d670d34: Merge change I1f1c7bad into eclair-mr2

Merge commit 'b8fb6c0bd8236fb964697639d7bbe8e7cf78e3b4'

* commit 'b8fb6c0bd8236fb964697639d7bbe8e7cf78e3b4':
  I accidentally broke this code while refactoring MediaScanner. This is the fix.",Unsure
435,https://github.com/opcm/pcm/commit/38867b470a436127ea501de07587996c782699fa,opcm/pcm,pcm-memory: refactor csv output code,Yes
436,https://github.com/thi-ng/ws-ldn-12/commit/70220f8a0da62b38c4214e5a235dd016fe2636b9,thi-ng/ws-ldn-12,"move common ISR handlers to common/handlers.c, minor refactor ex02",Yes
437,https://github.com/eventql/eventql/commit/74cb5bc7dfda8fc23b43021f0302721a8f4ae4bf,eventql/eventql,runtime refactor WIP,Unsure
438,https://github.com/wwmm/easyeffects/commit/fc66ea63cc280a9a16f4004b2a6667626ead3112,wwmm/easyeffects,code refactoring,Unsure
439,https://github.com/shizukachan/darknet-nnpack/commit/5ef74c2031a040f30a670dc7d60790fc6a9ec720,shizukachan/darknet-nnpack,Slowly refactoring and pushing to GPU,Unsure
440,https://github.com/approvals/ApprovalTests.cpp/commit/37028d4215bd0f5cb20e1d27c69800b8ad060d26,approvals/ApprovalTests.cpp,Make all headers refactorable in CLion /w @isidore,No
441,https://github.com/IronCoreLabs/ironssh/commit/cee85233149eb16c45132170d3f067496f17c368,IronCoreLabs/ironssh,"   - djm@cvs.openbsd.org 2009/03/05 07:18:19
     [auth2-jpake.c jpake.c jpake.h monitor_wrap.c monitor_wrap.h schnorr.c]
     [sshconnect2.c]
     refactor the (disabled) Schnorr proof code to make it a little more
     generally useful",Yes
442,https://github.com/planetchili/hw3d/commit/3826545c599884fe3b6a905b53cb290cbf9f683a,planetchili/hw3d,bindables refactored to be compatible with codex,Yes
443,https://github.com/X-Plane/xptools/commit/7e3d654f526e5c704c0d0fa690a874df24eba4ba,X-Plane/xptools,"refactor GetSide() to not use Segment2 structure any more

 - all code now uses Bezier2 structfor parameter return any more, avoiding duplication
 - Bezier2 struct is consistenly filled with p1=c1 and p2=c2 if its not a true bezier",Yes
444,https://github.com/Yubico/yubikey-personalization/commit/6475fd49477063ba40088a829e250d01e9f64664,Yubico/yubikey-personalization,slight refactor of duplicated code to set options from json object,Yes
445,https://github.com/hodefoting/oi/commit/0b965c7e9993f65f5e4a99620ebe0bb52fa6e22d,hodefoting/oi,refactored away bits in trait.c,Yes
446,https://github.com/microsoft/v8-jsi/commit/4119d31d479c99f20ef7cdcf2bb02214bf797d1f,microsoft/v8-jsi,"v8-jsi android local build v1 for RN 64 (#86)

* fix: sync jsi.h with hermes/jsi.h

* refactor: restruct

* fix: android build works

* fix: filepath typo

* fix: updated gitignore

* fix: updated gitignore

* fix: updated gitignore

* fix: updated android jsi files and build script

* refactor: removed pwd

* fix: packaging

* fix: added install checks

* fix: modified out directories

* fix: added build.config to package

* feat: added build instructions and initial nuspec

* fix: added NDK source.properties

* fix: V8Runtime path fixed

* fix: updated README and build script",Yes
447,https://github.com/HelTecAutomation/e-ink/commit/6093b0255a4d69efb6a54620280998b08ceba688,HelTecAutomation/e-ink,refactor: refactoring 1.54 program,Unsure
448,https://github.com/ELENA-LANG/elena-lang/commit/3592efae9fd2793b66b24942e4c9136b7d3f8d2f,ELENA-LANG/elena-lang,refactoring : working on array operations,Yes
449,https://github.com/d99kris/nmail/commit/cee4db54fd42026c86043695516d7bdb6945921a,d99kris/nmail,minor refactoring of compose editor key handling,Yes
450,https://github.com/lamarrr/STX/commit/33c83b7d2f0c0c73fece6d91981d0dd23da6ef55,lamarrr/STX,refactored source location builtins,Yes
451,https://github.com/kmdm/unruu/commit/cc71251c2ad1b75b4bbe43bf15cd3fc20c3c75c4,kmdm/unruu, Unicode hacks to unruu (this badly needs refactoring and/or rewriting.) - YOU DON'T WANT THIS COMMIT/BRANCH,No
452,https://github.com/highperformancecoder/scidavis-old/commit/2ddc7a9abcb8e7116095546a8be5b0d9366fc561,highperformancecoder/scidavis-old,Set random seed in python tests to avoid test indeterminancy. Some RAII refactoring done under the mistaken notion that uninitialised data was the cause of the indeterminancy. Update of refernce images,Yes
453,https://github.com/isamu/rocksdb-ruby/commit/17d9d63a8390f797b01a2dc9ed47d8f68d6537ae,isamu/rocksdb-ruby,"Refactoring, introduces breaking changes

* RocksDB can be fully configured by Option String
* Get methods now `get_one` and `get_many`. `get` method can automaticaly use appropriate method depending on the number of arguments
* User friendly enumerable names: `each`, `reverse_each`, `each_key`, `each_pair`
* Added `each_prefix`,  `each_range` methods to efficenly scan by prefix and value ranges
* Added `prev` and `seek_prev` methods to iterator
* Extended spec coverage, with multiple corner cases
* Slightly DRY-ed and refactored extension code, with additional safety checks
* Updated readme",Unsure
454,https://github.com/OpenWaterAnalytics/epanet-rtx/commit/98198ce6d6f3b50e2fb58c59a2418add3e40c9ea,OpenWaterAnalytics/epanet-rtx,"updates project file

for refactored time series filters",Yes
455,https://github.com/zherczeg/sljit/commit/8d536bf7c334f9e31a5cc366e5d5d8cd1cd431b1,zherczeg/sljit,"config: detect gcc support for fastcall (#75)

haiku x86 uses gcc 2.95.2 as the system compiler and fails to build,
because support for the fastcall calling convention was added with 3.4.

detect the gcc version before enabling the attribute  and while at it
reverse the condition and refactor the surrrounding code.",No
456,https://github.com/catedrasaes-umu/emf4cpp/commit/8d5cb2832dbbee39b111d0156d4f5c0be5151378,catedrasaes-umu/emf4cpp,"Windows-awareness of code-generator and windows shared libraries

This commit enables the c++ code generation on Windows systems.
The code generator now creates a special include file with
preprocessor macros which expand to the '__declspec(dllimport/dllexport)'
directives used by Windows compilers to create dynamic libraries
and to export all symbols correctly. The same technique is used for the
separate ecorecpp-library, which contains the parser/serializer, the
notification framework, and the MetaModelRepository.

Windows dlls can not cope with unresolved references and cross
references between sub-packages, which quite often occur
in practice. Hence only one dynamic library will be built for the
whole ecore file (until now a dynamic library for every sub-package
was created).

Additional changes:

- added all new test projects in emf4cpp.tests to the automatic
  (debug/release) test build and added generated source code of
  these new projects to the repository

- bootstrap.sh script was extended to generate msys makefiles
  on windows

- generator-release.sh script was extended to generate msys makefiles
  on Windows

- a new copyright line was added to the internal license mentioning
  INCHRON

- removed src-gen folder from class path of the generator eclipse project
  because this folder is not used

- deleted all sub-package cmake files - they are no longer needed

- removed all dependencies to boost library from test projects which are
  currently built in builds/debug or builds/release, the code was refactored
  to use (the new c++11) standard library instead

- source and header files will now be added recursively for all subpackages
  to the one and only cmake file and the dll macro headers were added as
  install targets

- added new test project 'subpackages' for testing subpackage nesting

- deduction of include path was changed to be relative to the emf4cpp
  install dir in the generator. An additional ecoreLibraryPath variable
  was introduced to set the link library path correctly because all
  generated model libraries now depend on libemf4cpp-ecore

- Added the keyword 'template' to function call as suggested in
  https://stackoverflow.com/questions/5802077/
  strange-gcc-error-expected-primary-expression-before-token#5802122

- Recreation of Ecore meta model code and tests code.",Yes
457,https://github.com/openbabel/openbabel/commit/444ef56027f45f438d5604cb1b9df7e15676eb6f,openbabel/openbabel,Merge branch 'Fix310' into refactorpython,Yes
458,https://github.com/openucx/ucx/commit/c445c859acdbbc9d3c3f0867d8b310be583b115d,openucx/ucx,UCP/ATOMIC: refactoring of progress calls,Yes
459,https://github.com/magento-hackathon/Sandfox/commit/9757c5c96cb5d48d661a516e8a1a6c741b58f254,magento-hackathon/Sandfox,0.1.1 - getCountryByIp() method added + code refactored.,Unsure
460,https://github.com/commaai/opendbc/commit/da47fe5e45cc67173d24b4713b09b19756b16ab2,commaai/opendbc,"CANParser: add field for all updated values (#548)

* add updated field

* rename to updated

* draft

* clean up

* function for resetting

* *minor* refactor

* clean up names

* keep track of updated vals in the cc parser

* remove extra lines

* remove ts

* match parser_pyx

* cleaner to just call the cpp function as we don't need to aggregate updated values

* draft

* some tests

* fix test

* clean up

clean up

* test clean up

* add clarifying comments

* Revert ""remove ts""

This reverts commit fd4558289d6667a42ab41c4511b0d8fe54eb7fc8.

* fix order

* use vals

* fix dup",Yes
461,https://github.com/LearningByExample/ModernCppCI/commit/8915cffc2550a936eca8e4871e8035d51a0ad406,LearningByExample/ModernCppCI,refactor,Yes
462,https://github.com/eaplatanios/jelly-bean-world/commit/960b4d82132e5d5d7f694806c747e1b4c58e1145,eaplatanios/jelly-bean-world,[CORE] Renamed 'nel' to 'jbw' and also did some refactoring.,Yes
463,https://github.com/werererer/japokwm/commit/9de7c1c3508caeab320432da83731a52c37ab2b2,werererer/japokwm,refactor: fix alignment,Yes
464,https://github.com/link-u/cavif/commit/5637a598a2721bb6477c5fb7d5f797f670be4afd,link-u/cavif,refactor argument parsing,Yes
465,https://github.com/OSLL/qemu-xtensa/commit/3b52726ec0e2f5c5732fe5f9d76af700463b73d3,OSLL/qemu-xtensa,"migration/block-dirty-bitmap: refactor state global variables

Move all state variables into one global struct. Reduce global
variable usage, utilizing opaque pointer where possible.

Signed-off-by: Vladimir Sementsov-Ogievskiy <vsementsov@virtuozzo.com>
Reviewed-by: Andrey Shinkevich <andrey.shinkevich@virtuozzo.com>
Message-Id: <20200727194236.19551-12-vsementsov@virtuozzo.com>
Signed-off-by: Eric Blake <eblake@redhat.com>",Yes
466,https://github.com/open-webrtc-toolkit/owt-client-native/commit/c45f2f5be545e2b1685897b05f843394a8c23c58,open-webrtc-toolkit/owt-client-native,"Enable audio codec preference for iOS and C++ SDK, also refactors video codec preference implementation.

Change-Id: Ibbcbdfdebc785ac37d49a33c0133e358ba75bf47
Reviewed-on: https://git-ccr-1.devtools.intel.com/gerrit/34250
Tested-by: webrtctest <webrtctest@intel.com>
Reviewed-by: Xian, Yuqiang <yuqiang.xian@intel.com>",Yes
467,https://github.com/r-lib/vctrs/commit/673c9f1feb20ab517f99a7ba15f1e1155fdf83c2,r-lib/vctrs,"Improve `vec_compare()` (#649)

* Overhaul C implementation of `vec_compare()`

* Tweak failing test to reflect lack of name handling

* Try a columwise comparison

* More refactoring and cleanup

* Add comment about `count`

* Simplify `COMPARE_COL()` macro

* Validate `na_equal`

* Add support for encoding translations in `vec_compare()`

* Small clarification by using a pointer directly

* Flesh out tests for `vec_compare()` edge cases

* Mark macro branches as `inline` as part of #620

* Move declarations into the loop

* Use a `vctrs_df_compare_info` struct for `info`

* Consistently use `size` in `vctrs_compare()`

* Consistently use `n_row` for `df_compare()`

* Incorporate review of `test-compare.R`

* Document `vctrs_df_compare_info` struct

* No need for long integers

* Silence Windows warning about reaching the end of a non-void function",Yes
468,https://github.com/IronsDu/brynet/commit/f1f93f96fa805ae5023336fab87135ba582ede84,IronsDu/brynet,"Merge pull request #56 from IronsDu/refactor/increase_recv_buffer

use tanh for increase recv buffer",No
469,https://github.com/AdunanzA/Tsunami/commit/d647f7094a35ffa14666ea524af9ecaa273963d1,AdunanzA/Tsunami,"folder refactoring

moved project files in src dir",Unsure
470,https://github.com/saghul/sjs/commit/ed5cd786eb355c231cb85d0ffaec731558c9b3b2,saghul/sjs,core: refactor structure,Yes
471,https://github.com/ssloy/tinyrenderer/commit/7edc8300553da553e1d62f4c356c32872b94b166,ssloy/tinyrenderer,refactoring,Yes
472,https://github.com/dnbaker/bonsai/commit/facaa2b44f51a93693ff6d67a3e92e4cb1dfe317,dnbaker/bonsai,Finish refactoring.,Yes
473,https://github.com/devkitPro/deko3d/commit/58bd4ef6ace425056e06764004661eb36ce8aed3,devkitPro/deko3d,Adapt to libnx nvidia wrapper object refactor,Yes
474,https://github.com/Kitware/SMTK/commit/e043d4bf7f718aef32dc788535862d312cc96c9b,Kitware/SMTK,"FEATURE: Add duct creation/edition/deletion support & refactor modules

This commit also contains some prerequisites for Create/Edit Assembly
op.

Now RGG session follows the right pattern that for each session, it
should have:

+ smtk<session-name>Session (library, depends only on smtkCore)
+ smtkQt<session-name>Session (library, depends on smtkCore + Qt + smtkRGGSession)
+ smtk<session-name>Plugin (library, depends on all of the above + ParaView)",Unsure
475,https://github.com/davechurchill/commandcenter/commit/b3aa21d70f245f9546bc540a70ccf52bdc2c30a0,davechurchill/commandcenter,refactoring for hybrid bot,Yes
476,https://github.com/flashrom/flashrom/commit/28accc27000d9589a86ecdf4f65bd009207a0a3f,flashrom/flashrom,"Various JEDEC refactorings touching 82802ab.c, sharplhf00l04.c and stm50flw0x0x.c

Rename print_82802ab_status to print_status_82802ab add unlock_82802ab strip unlock code from erase_block_82802ab rename erase_82802ab_block  to erase_block_80280ab delete sharplhf00l04.o from Makefile delete *_lhf00l04* from chipdrivers.h.

add unlock_stm50flw0x0x
delete wait_stm50flw0x0x
delete write_page_stm50flw0x0x
convert erase_stm50flw0x0x to erase_chip_stm50flw0x0x
delete write_stm50flw0x0x
add unlock_82802ab to two Intel chips with TEST_BAD_WRITE
change the status of 82802AB, 82802AC, M50FW040, M50FW080 to TEST_OK_PR

Corresponding to flashrom svn r948.

Signed-off-by: Sean Nelson <audiohacked@gmail.com>
Acked-by: Carl-Daniel Hailfinger <c-d.hailfinger.devel.2006@gmx.net>",Yes
477,https://github.com/Cockatrice/Cockatrice/commit/51b24bb92c4383d3a07bb37a846319cbad2f817e,Cockatrice/Cockatrice,refactor getting game age (#4095),Yes
478,https://github.com/Kalpanika/x3f/commit/c27a53ef7da97524e3466d126c12d1cb3ed7fac7,Kalpanika/x3f,"Merge pull request #19 from Kalpanika/refactor/x3f_process

Refactor/x3f process",No
479,https://github.com/chrisjoyce911/esp32FOTA/commit/a6d5259b73442b9f2f34dd2faa20c128b3b7547e,chrisjoyce911/esp32FOTA,refactor functions order for build it with PlatformIO,No
480,https://github.com/glinscott/leela-chess/commit/51cd3f08669cba98edc2f7d95ed66dd4689834f0,glinscott/leela-chess,"Hide NodePool.
As a preparation for Node refactoring.",Yes
481,https://github.com/chen3feng/toft/commit/02eabddccb686803411d01e1fe0086d4189b07a8,chen3feng/toft,refactor code following chen3feng's comments,Unsure
482,https://github.com/mmorise/World/commit/11a4886d4d5ea93ed296693cb91b9f57daf57420,mmorise/World,simple refactoring for compatibility with MATLAB,Yes
483,https://github.com/microsoft/clang/commit/5c1cd520dbca6d5476fb46414b7cf93d3a5afdf4,microsoft/clang,"retain/release checker: More diagnostic refactoring.

git-svn-id: https://llvm.org/svn/llvm-project/cfe/trunk@63179 91177308-0d34-0410-b5e6-96231b3b80d8",Yes
484,https://github.com/HingeAssembler/HINGE/commit/dc709e651d45419afedc77ba743ffc6b88f69c28,HingeAssembler/HINGE,minor refactoring,Unsure
485,https://github.com/GZR-Kernels/Optimus/commit/52acf73b6e9a6962045feb2ba5a8921da2201915,GZR-Kernels/Optimus,"hv_netvsc: Fix a network regression after ifdown/ifup

Recently people reported the NIC stops working after
""ifdown eth0; ifup eth0"". It turns out in this case the TX queues are not
enabled, after the refactoring of the common detach logic: when the NIC
has sub-channels, usually we enable all the TX queues after all
sub-channels are set up: see rndis_set_subchannel() ->
netif_device_attach(), but in the case of ""ifdown eth0; ifup eth0"" where
the number of channels doesn't change, we also must make sure the TX queues
are enabled. The patch fixes the regression.

Fixes: 7b2ee50c0cd5 (""hv_netvsc: common detach logic"")
Signed-off-by: Dexuan Cui <decui@microsoft.com>
Cc: Stephen Hemminger <sthemmin@microsoft.com>
Cc: K. Y. Srinivasan <kys@microsoft.com>
Cc: Haiyang Zhang <haiyangz@microsoft.com>
Signed-off-by: David S. Miller <davem@davemloft.net>",No
486,https://github.com/kripken/ammo.js/commit/aa1d421a33d44df44206844bbe1e3a4dd51ae097,kripken/ammo.js,refactor tests,Yes
487,https://github.com/fairlight1337/libcflie/commit/5c86ca3d4807d60ff5233c57a35235e8469ef36d,fairlight1337/libcflie,"Began refactoring `using` namespace structures

Right now, the `std` namespace is being `use`d everywhere. This is being refactored right now to explicitly state `std::` in front of legit statements.",Yes
488,https://github.com/OGAWAHirofumi/tux3/commit/e8043dece9c2017906321fabd7f9e3640f7f79bb,OGAWAHirofumi/tux3,"Cleanup kernel/inode.c, refactoring tux_new_inode() and alloc_inum()

Now, tux_new_inode() calls tux_setup_inode() with TUX_INVALID_INO.
This bothers tux_setup_inode() to setup the inode properly.

So, this moves tux_setup_inode() to alloc_inum(). And later patch will
kill the caller of tux_new_inode().

With those changes, tux_new_inode() will become internal function of inode.c.
And prevent to create partial setup or invalid setup inodes.

Signed-off-by: OGAWA Hirofumi <hirofumi@mail.parknet.co.jp>",Yes
489,https://github.com/kobalicek/mpsl/commit/a1631e9d8e288066643f86c9f151f1f1e2bc91ca,kobalicek/mpsl,"Moved most MPSL language specific definitions and rules to mplang.cpp/h
Added translation tables from OpType to InstCode to make AstToIR simpler
Major refactoring of AST and IR definitions and tables",Yes
490,https://github.com/slavavdovichenko/MediaLibDemos/commit/a475ad9dd1330aa070562b9c368e8775ae201043,slavavdovichenko/MediaLibDemos,audio player refactoring,Yes
491,https://github.com/discoproject/discodb/commit/c9d0ff2f80633b7becd4f8ba93b79939858f65c7,discoproject/discodb,refactor view construction: make it more iterator-friendly,Yes
492,https://github.com/CatGenius/catgenius/commit/48ca457201a191937c0a1cbe3e4907a9c91d4d40,CatGenius/catgenius,"- PORT register replaced by LATCH registers
- Command-line command gpio logging output now per pin and with pin name
- set_pacer duplicate implementations moved to static local function
- variable renamed in catsensor.c
- serial port refactored.
- removed _term functions, as they're not used anyway.",Yes
493,https://github.com/terminalpp/terminalpp/commit/89082b7378f9ecd684421d94721711f41093888f,terminalpp/terminalpp,"AnsiTerminal refactoring.

Basic display works, keyboard works. Mouse & scrollback buffer & selection missing, among other things.",Yes
494,https://github.com/matus-chochlik/oglplus/commit/feca12897cf02868d06b313282ef2d79fec54357,matus-chochlik/oglplus,Merge branch 'wip-object-refactoring' into develop,Yes
495,https://github.com/apache/activemq-cpp/commit/c13dd596ff28159a3c950100c3073a4977efb797,apache/activemq-cpp,"Some code cleanup and refactoring.

git-svn-id: https://svn.apache.org/repos/asf/activemq/activemq-cpp/trunk@1367259 13f79535-47bb-0310-9956-ffa450edef68",Yes
496,https://github.com/danigm/poppler/commit/85687a1e0e4c6be2dbfb23ba00018b9c7c7454f5,danigm/poppler,"2006-04-12  Jeff Muizelaar  <jeff@infidigm.net>

	* poppler/CairoOutputDev.cc:
	* poppler/CairoOutputDev.h: Add support for masked images to the cairo
	backend. CairoOutputDevice really should have been refactored before
	committing this, but the results were so pretty I couldn't resist.
	Fixes #6174.",No
497,https://github.com/rhysd/array/commit/fc730b879c1f49c846ec81bf3636810676344870,rhysd/array,"implement equal and non-equal operators

- add implementation functions and meta functions in detail namespace
- add equal operators (they are too boring, they should be refactored)
- make helpers inline
- tiny temporary check",No
498,https://github.com/naver/imagestabilizer/commit/c6fea52848705935a1ae54eb5e081dd4736c9be3,naver/imagestabilizer,Image Stabilizer refactoring,Yes
499,https://github.com/espressopp/espressopp/commit/151d2b4cc96214ae685f1b79138728fbdc4c0e1f,espressopp/espressopp,"Merge pull request #402 from espressopp/test_env_refactor

test_env refactor",Yes
500,https://github.com/sensics/OSVR-RenderManager/commit/cb6c4728afd580f7624b14405e9a68b15e40b83e,sensics/OSVR-RenderManager,"Merge pull request #2 from sensics/refactor-register-render-buffers

Refactor register render buffers",Yes
